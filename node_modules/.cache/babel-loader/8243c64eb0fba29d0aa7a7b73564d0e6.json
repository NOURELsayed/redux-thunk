{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/LandingPage/DownloadLinks.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Container, Image } from \"semantic-ui-react\";\nimport { imageUrl, playStoreHref, AppleHref } from \"./config\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { userActions } from \"../../actions\";\nimport DesktopBreakpoint from \"../../components/Responsive_utillities/desktop_breakPoint\";\nimport PhoneBreakpoint from \"../../components/Responsive_utillities/phone_breakPoint\";\n\nclass DownloadLinks extends Component {\n  render() {\n    const language = localStorage.getItem(\"i18nextLng\");\n    const {\n      isActive\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DesktopBreakpoint, {\n      name: \"desktop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Hello\")), /*#__PURE__*/React.createElement(PhoneBreakpoint, {\n      name: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      className: isActive ? `downloadLinks ${language}` : `downloadLinksTopFuntion ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: language === \"ar\" ? `${imageUrl}/landing-page/Google%20Play@3x-min.png` : `${imageUrl}/landing-page/EnglishApp%20Store@3x-min.png`,\n      alt: \"googlePlay\",\n      href: language === \"ar\" ? `${playStoreHref}` : `${AppleHref}`,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      src: language === \"ar\" ? `${imageUrl}/landing-page/App%20Store@3x-min.png` : `${imageUrl}/landing-page/EnglishGoogle%20Play@3x-min.png`,\n      alt: \"appStore\",\n      href: language === \"ar\" ? `${AppleHref}` : `${playStoreHref}`,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }\n    }))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    isActive\n  } = state.users;\n  return {\n    isActive\n  };\n}\n\nconst actionCreators = {\n  hideAlert: userActions.hideAlert\n};\nconst connectedDownloadLinks = connect(mapState, actionCreators)(withTranslation(\"landingPage\")(DownloadLinks));\nexport { connectedDownloadLinks as DownloadLinks };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/LandingPage/DownloadLinks.jsx"],"names":["React","Component","Segment","Container","Image","imageUrl","playStoreHref","AppleHref","connect","withTranslation","userActions","DesktopBreakpoint","PhoneBreakpoint","DownloadLinks","render","language","localStorage","getItem","isActive","props","mapState","state","users","actionCreators","hideAlert","connectedDownloadLinks"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,KAA7B,QAA0C,mBAA1C;AACA,SAASC,QAAT,EAAkBC,aAAlB,EAAgCC,SAAhC,QAAiD,UAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,iBAAP,MAA8B,2DAA9B;AACA,OAAOC,eAAP,MAA4B,yDAA5B;;AAGC,MAAMC,aAAN,SAA4BZ,SAA5B,CAAsC;AAErCa,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAKE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAGD,QAAQ,GAAG,iBAAgBH,QAAS,EAA5B,GAAiC,2BAA0BA,QAAS,EAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,GAAG,EACDA,QAAQ,KAAK,IAAb,GACK,GAAEV,QAAS,wCADhB,GAEK,GAAEA,QAAS,6CAJpB;AAME,MAAA,GAAG,EAAC,YANN;AAOE,MAAA,IAAI,EACFU,QAAQ,KAAK,IAAb,GACK,GAAET,aAAc,EADrB,GAEK,GAAEC,SAAU,EAVrB;AAYE,MAAA,MAAM,EAAC,QAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAeH,oBAAC,KAAD;AACO,MAAA,GAAG,EACDQ,QAAQ,KAAK,IAAb,GACK,GAAEV,QAAS,sCADhB,GAEK,GAAEA,QAAS,+CAJzB;AAMO,MAAA,GAAG,EAAC,UANX;AAOO,MAAA,IAAI,EACFU,QAAQ,KAAK,IAAb,GACK,GAAER,SAAU,EADjB,GAEK,GAAED,aAAc,EAV9B;AAYO,MAAA,MAAM,EAAC,QAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfG,CADF,CALF,CADF;AAwCD;;AA7CoC;;AA+CvC,SAASc,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEH,IAAAA;AAAF,MAAeG,KAAK,CAACC,KAA3B;AACA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD;;AAED,MAAMK,cAAc,GAAG;AACrBC,EAAAA,SAAS,EAAEd,WAAW,CAACc;AADF,CAAvB;AAGA,MAAMC,sBAAsB,GAAGjB,OAAO,CACpCY,QADoC,EAEpCG,cAFoC,CAAP,CAG7Bd,eAAe,CAAC,aAAD,CAAf,CAA+BI,aAA/B,CAH6B,CAA/B;AAIA,SAASY,sBAAsB,IAAIZ,aAAnC","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Container, Image } from \"semantic-ui-react\";\r\nimport { imageUrl,playStoreHref,AppleHref } from \"./config\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { userActions } from \"../../actions\";\r\nimport DesktopBreakpoint from \"../../components/Responsive_utillities/desktop_breakPoint\";\r\nimport PhoneBreakpoint from \"../../components/Responsive_utillities/phone_breakPoint\";\r\n\r\n\r\n class DownloadLinks extends Component {\r\n\r\n  render() {\r\n    const language = localStorage.getItem(\"i18nextLng\");\r\n    const { isActive } = this.props;\r\n    return (\r\n      <Container>\r\n        <DesktopBreakpoint name=\"desktop\">\r\n          <p>Hello</p>\r\n        </DesktopBreakpoint>\r\n\r\n        <PhoneBreakpoint name=\"phone\" >\r\n          <Segment className={ isActive?(`downloadLinks ${language}`):(`downloadLinksTopFuntion ${language}`) } >\r\n            <Image\r\n              src={\r\n                language === \"ar\"\r\n                  ? `${imageUrl}/landing-page/Google%20Play@3x-min.png`\r\n                  : `${imageUrl}/landing-page/EnglishApp%20Store@3x-min.png`\r\n              }\r\n              alt=\"googlePlay\"\r\n              href={\r\n                language === \"ar\"\r\n                  ? `${playStoreHref}`\r\n                  : `${AppleHref}`\r\n              }\r\n              target=\"_blank\"\r\n            />\r\n       <Image\r\n              src={\r\n                language === \"ar\"\r\n                  ? `${imageUrl}/landing-page/App%20Store@3x-min.png`\r\n                  : `${imageUrl}/landing-page/EnglishGoogle%20Play@3x-min.png`\r\n              }\r\n              alt=\"appStore\"\r\n              href={\r\n                language === \"ar\"\r\n                  ? `${AppleHref}`\r\n                  : `${playStoreHref}`\r\n              }                \r\n              target=\"_blank\"\r\n            />\r\n          </Segment>\r\n        </PhoneBreakpoint>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state) {\r\n  const { isActive } = state.users;\r\n  return { isActive };\r\n}\r\n\r\nconst actionCreators = {\r\n  hideAlert: userActions.hideAlert,\r\n};\r\nconst connectedDownloadLinks = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withTranslation(\"landingPage\")(DownloadLinks));\r\nexport { connectedDownloadLinks as DownloadLinks };"]},"metadata":{},"sourceType":"module"}