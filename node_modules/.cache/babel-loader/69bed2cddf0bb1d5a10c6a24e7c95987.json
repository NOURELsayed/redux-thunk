{"ast":null,"code":"import { authConstants } from '../constants';\nimport { authService } from '../services';\nimport { alertActions } from './';\nexport const authActions = {\n  login,\n  logout\n};\n\nfunction login(email, password) {\n  return async dispatch => {\n    await dispatch(request({\n      email\n    }));\n\n    try {\n      const {\n        token,\n        refreshToken\n      } = await authService.login(email, password);\n      authService.loginWithJwt(token, refreshToken);\n      const user = await authService.getCurrentUser();\n      dispatch(success(user));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: ex.message\n      }));\n    }\n  };\n\n  function request(user) {\n    return {\n      type: authConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: authConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: authConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  authService.logout();\n  return {\n    type: authConstants.LOGOUT\n  };\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/auth.actions.js"],"names":["authConstants","authService","alertActions","authActions","login","logout","email","password","dispatch","request","token","refreshToken","loginWithJwt","user","getCurrentUser","success","ex","failure","error","header","message","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,cAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,YAAR,QAA2B,IAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,KADyB;AAEzBC,EAAAA;AAFyB,CAApB;;AAKP,SAASD,KAAT,CAAeE,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMA,QAAQ,CAACC,OAAO,CAAC;AAACH,MAAAA;AAAD,KAAD,CAAR,CAAd;;AACA,QAAI;AACF,YAAM;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAA0B,MAAMV,WAAW,CAACG,KAAZ,CAAkBE,KAAlB,EAAyBC,QAAzB,CAAtC;AACAN,MAAAA,WAAW,CAACW,YAAZ,CAAyBF,KAAzB,EAAgCC,YAAhC;AACA,YAAME,IAAI,GAAG,MAAMZ,WAAW,CAACa,cAAZ,EAAnB;AACAN,MAAAA,QAAQ,CAACO,OAAO,CAACF,IAAD,CAAR,CAAR;AACD,KALD,CAKE,OAAOG,EAAP,EAAW;AACXR,MAAAA,QAAQ,CAACS,OAAO,CAACD,EAAD,CAAR,CAAR;AACAR,MAAAA,QAAQ,CAACN,YAAY,CAACgB,KAAb,CAAmB;AAACC,QAAAA,MAAM,EAAEH,EAAE,CAACI;AAAZ,OAAnB,CAAD,CAAR;AACD;AACF,GAXD;;AAaA,WAASX,OAAT,CAAiBI,IAAjB,EAAuB;AACrB,WAAO;AAACQ,MAAAA,IAAI,EAAErB,aAAa,CAACsB,aAArB;AAAoCT,MAAAA;AAApC,KAAP;AACD;;AAED,WAASE,OAAT,CAAiBF,IAAjB,EAAuB;AACrB,WAAO;AAACQ,MAAAA,IAAI,EAAErB,aAAa,CAACuB,aAArB;AAAoCV,MAAAA;AAApC,KAAP;AACD;;AAED,WAASI,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,WAAO;AAACG,MAAAA,IAAI,EAAErB,aAAa,CAACwB,aAArB;AAAoCN,MAAAA;AAApC,KAAP;AACD;AACF;;AAED,SAASb,MAAT,GAAkB;AAChBJ,EAAAA,WAAW,CAACI,MAAZ;AACA,SAAO;AAACgB,IAAAA,IAAI,EAAErB,aAAa,CAACyB;AAArB,GAAP;AACD","sourcesContent":["import {authConstants} from '../constants';\r\nimport {authService} from '../services';\r\nimport {alertActions} from './';\r\n\r\nexport const authActions = {\r\n  login,\r\n  logout,\r\n};\r\n\r\nfunction login(email, password) {\r\n  return async dispatch => {\r\n    await dispatch(request({email}));\r\n    try {\r\n      const { token, refreshToken } = await authService.login(email, password);\r\n      authService.loginWithJwt(token, refreshToken);\r\n      const user = await authService.getCurrentUser();\r\n      dispatch(success(user));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(alertActions.error({header: ex.message}));\r\n    }\r\n  };\r\n\r\n  function request(user) {\r\n    return {type: authConstants.LOGIN_REQUEST, user}\r\n  }\r\n\r\n  function success(user) {\r\n    return {type: authConstants.LOGIN_SUCCESS, user}\r\n  }\r\n\r\n  function failure(error) {\r\n    return {type: authConstants.LOGIN_FAILURE, error}\r\n  }\r\n}\r\n\r\nfunction logout() {\r\n  authService.logout();\r\n  return {type: authConstants.LOGOUT};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}