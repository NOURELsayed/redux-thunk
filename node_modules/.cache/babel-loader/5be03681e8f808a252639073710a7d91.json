{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReportProblem/ReportProblemPage.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Grid, Header, Form, Divider, List, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { reportProblemActions, validatorActions } from '../../actions';\nimport { ListToArray } from \"../../helpers\";\n\nclass ReportProblemPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reportProblem: {\n        category: '',\n        subject: '',\n        description: ''\n      }\n    };\n    this.schema = {\n      \"required\": [\"subject\", \"description\"],\n      \"properties\": {\n        \"subject\": {\n          \"title\": \"Subject\",\n          \"type\": \"string\",\n          \"minLength\": 5,\n          \"maxLength\": 100\n        },\n        \"description\": {\n          \"title\": \"Description\",\n          \"type\": \"string\",\n          \"minLength\": 10,\n          \"maxLength\": 500\n        }\n      }\n    };\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = () => {\n      this.fileInputRef.current.click();\n    };\n\n    this.onFilesAdded = e => {\n      const oldFiles = this.props.files;\n      const newFiles = ListToArray(e.target.files);\n      const files = this.uniqueFilesArray([...newFiles, ...oldFiles]);\n      this.props.filesAdded(files);\n    };\n\n    this.uniqueFilesArray = function (files) {\n      let names = [];\n      return files.filter(file => {\n        if (!names.includes(file.name)) {\n          names.push(file.name);\n          return file;\n        }\n      });\n    };\n\n    this.onFileRemoved = (e, file) => {\n      this.props.fileRemoved(file);\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.props.validateInput(this.schema, name, value);\n      const reportProblem = { ...this.state.reportProblem\n      };\n      reportProblem[name] = value;\n      this.setState({\n        reportProblem\n      });\n    };\n\n    this.handleCategoryChange = (e, {\n      name,\n      value\n    }) => {\n      const reportProblem = { ...this.state.reportProblem\n      };\n      reportProblem[name] = value;\n      this.setState({\n        reportProblem\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      if (this.state.reportProblem.category === '') return;\n      const reportProblem = { ...this.state.reportProblem\n      };\n      const ticketData = new FormData();\n\n      for (let x = 0; x < this.props.files.length; x++) {\n        ticketData.append(\"myFiles\", this.props.files[x]);\n      }\n\n      ticketData.append(\"data\", JSON.stringify(reportProblem));\n      await this.props.createProblemTicket(ticketData);\n    };\n\n    this.renderTicketCategories = ticketCategories => {\n      return ticketCategories && ticketCategories.map(cat => ({\n        key: cat,\n        value: cat,\n        text: cat\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getTicketCategories();\n  }\n\n  render() {\n    const {\n      files,\n      ticketCategories\n    } = this.props;\n    const {\n      errors\n    } = this.props;\n    const fieldOptions = this.renderTicketCategories(ticketCategories);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"centered\",\n      style: {\n        height: \"90vh\"\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"REPORT A PROBLEM\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      required: true,\n      fluid: true,\n      label: \"Category\",\n      name: \"category\",\n      size: \"large\",\n      options: fieldOptions,\n      placeholder: \"--Category--\",\n      value: this.state.reportProblem.category,\n      onChange: this.handleCategoryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      label: \"Subject\",\n      name: \"subject\",\n      size: \"large\",\n      icon: \"pencil alternate\",\n      iconPosition: \"left\",\n      placeholder: \"Subject\",\n      value: this.state.reportProblem.subject,\n      onChange: this.handleChange,\n      error: errors && errors.subject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Form.TextArea, {\n      required: true,\n      label: \"Description\",\n      name: \"description\",\n      placeholder: \"Description ...\",\n      value: this.state.reportProblem.description,\n      onChange: this.handleChange,\n      error: errors && errors.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      centered: true,\n      columns: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"Dropzone\",\n      onClick: this.openFileDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.fileInputRef,\n      className: \"FileInput\",\n      type: \"file\",\n      multiple: true,\n      onChange: this.onFilesAdded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"upload\",\n      className: \"Icon\",\n      src: \"img/baseline-cloud_upload-24px.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 31\n      }\n    }, \"Upload Files\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      divided: true,\n      verticalAlign: \"middle\",\n      style: {\n        padding: \"0 2em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, files.map(file => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: file.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(List.Content, {\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"red\",\n        onClick: e => {\n          this.onFileRemoved(e, file);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 39\n        }\n      }, \"Remove\")), /*#__PURE__*/React.createElement(List.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }, file.name));\n    }))))), /*#__PURE__*/React.createElement(Form.Button, {\n      fluid: true,\n      color: \"teal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    files,\n    ticketCategories\n  } = state.reportProblem;\n  const {\n    errors,\n    valid\n  } = state.validation;\n  return {\n    errors,\n    valid,\n    files,\n    ticketCategories\n  };\n}\n\nconst actionCreators = {\n  validateInput: validatorActions.validateInput,\n  filesAdded: reportProblemActions.filesAdded,\n  fileRemoved: reportProblemActions.fileRemoved,\n  getTicketCategories: reportProblemActions.getTicketCategories,\n  createProblemTicket: reportProblemActions.createProblemTicket\n};\nconst connectedReportPage = connect(mapState, actionCreators)(ReportProblemPage);\nexport { connectedReportPage as ReportProblemPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReportProblem/ReportProblemPage.jsx"],"names":["React","Component","Container","Grid","Header","Form","Divider","List","Button","connect","reportProblemActions","validatorActions","ListToArray","ReportProblemPage","state","reportProblem","category","subject","description","schema","fileInputRef","createRef","openFileDialog","current","click","onFilesAdded","e","oldFiles","props","files","newFiles","target","uniqueFilesArray","filesAdded","names","filter","file","includes","name","push","onFileRemoved","fileRemoved","handleChange","value","validateInput","setState","handleCategoryChange","handleSubmit","preventDefault","ticketData","FormData","x","length","append","JSON","stringify","createProblemTicket","renderTicketCategories","ticketCategories","map","cat","key","text","componentDidMount","getTicketCategories","render","errors","fieldOptions","height","maxWidth","cursor","padding","mapState","valid","validation","actionCreators","connectedReportPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Grid, Header, Form, Divider, List, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux'\r\nimport { reportProblemActions, validatorActions } from '../../actions' \r\nimport { ListToArray } from \"../../helpers\";\r\n\r\nclass ReportProblemPage extends Component {\r\n    state = {\r\n      reportProblem: {\r\n        category: '',\r\n        subject: '',\r\n        description: '',\r\n      },\r\n    }\r\n    \r\n    schema = {\r\n      \"required\": [\"subject\", \"description\"],\r\n      \"properties\": {\r\n        \"subject\": {\"title\": \"Subject\", \"type\": \"string\", \"minLength\": 5, \"maxLength\": 100},\r\n        \"description\": {\"title\": \"Description\", \"type\": \"string\", \"minLength\": 10, \"maxLength\": 500},\r\n      }\r\n    };\r\n\r\n    async componentDidMount() {\r\n      await this.props.getTicketCategories();\r\n    }\r\n\r\n    fileInputRef = React.createRef();\r\n\r\n    openFileDialog = () => {\r\n      this.fileInputRef.current.click();\r\n    };\r\n  \r\n    onFilesAdded = (e) => {\r\n      const oldFiles = this.props.files;\r\n      const newFiles = ListToArray(e.target.files);\r\n      const files = this.uniqueFilesArray([...newFiles, ...oldFiles]);\r\n      this.props.filesAdded(files);\r\n    };\r\n  \r\n    uniqueFilesArray = function (files) {\r\n      let names = [];\r\n      return files.filter((file) => {\r\n        if (!names.includes(file.name)) {\r\n          names.push(file.name);\r\n          return file;\r\n        }\r\n      });\r\n    };\r\n  \r\n    onFileRemoved = (e, file) => {\r\n      this.props.fileRemoved(file);\r\n    };\r\n\r\n    handleChange = (e, { name, value }) => {\r\n      this.props.validateInput(this.schema, name, value);\r\n      const reportProblem = { ...this.state.reportProblem };\r\n      reportProblem[name] = value;\r\n      this.setState({ reportProblem });\r\n    };\r\n \r\n    handleCategoryChange = (e, { name, value }) => {\r\n      const reportProblem = { ...this.state.reportProblem };\r\n      reportProblem[name] = value;\r\n      this.setState({ reportProblem });\r\n    };\r\n\r\n    handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (this.state.reportProblem.category === '') return;\r\n      \r\n      const reportProblem = { ...this.state.reportProblem };\r\n\r\n      const ticketData = new FormData();\r\n      for (let x = 0; x < this.props.files.length; x++) {\r\n        ticketData.append(\"myFiles\", this.props.files[x]);\r\n      }\r\n      ticketData.append(\"data\", JSON.stringify(reportProblem));\r\n  \r\n      await this.props.createProblemTicket(ticketData);\r\n    };\r\n\r\n    renderTicketCategories = (ticketCategories) => {\r\n      return ticketCategories && ticketCategories.map((cat) => ({\r\n        key: cat,\r\n        value: cat,\r\n        text: cat,\r\n      }));\r\n    }\r\n\r\n    render() { \r\n        const { files, ticketCategories } = this.props;\r\n        const { errors } = this.props;\r\n\r\n        const fieldOptions = this.renderTicketCategories(ticketCategories);\r\n        return (\r\n        <Container>\r\n            <Grid  className=\"centered\"\r\n                style={{ height: \"90vh\" }}\r\n                verticalAlign='middle'> \r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                    REPORT A PROBLEM\r\n                    </Header>\r\n                \r\n                    <Form size='large' \r\n                    onSubmit={this.handleSubmit}\r\n                    >\r\n                      <Form.Select required\r\n                        fluid\r\n                        label='Category'\r\n                        name='category'\r\n                        size='large'\r\n                        options={fieldOptions}\r\n                        placeholder='--Category--'\r\n                        value={this.state.reportProblem.category}\r\n                        onChange={this.handleCategoryChange}\r\n                        />\r\n                      <Form.Input required\r\n                        label='Subject'\r\n                        name='subject'\r\n                        size='large'\r\n                        icon='pencil alternate'\r\n                        iconPosition='left'\r\n                        placeholder='Subject'\r\n                        value={this.state.reportProblem.subject}\r\n                        onChange={this.handleChange}\r\n                        error={errors && errors.subject}\r\n                      />\r\n                      <Form.TextArea required\r\n                        label='Description'\r\n                        name='description'\r\n                        placeholder='Description ...'\r\n                        value={this.state.reportProblem.description}\r\n                        onChange={this.handleChange}\r\n                        error={errors && errors.description} >\r\n                      </Form.TextArea>\r\n                      <Form.Field>\r\n                        <Grid.Row centered columns={3}>\r\n                          <Divider hidden />\r\n                          <Grid.Column>\r\n                            <div\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className={\"Dropzone\"}\r\n                              onClick={this.openFileDialog}\r\n                            >\r\n                              <input\r\n                                ref={this.fileInputRef}\r\n                                className=\"FileInput\"\r\n                                type=\"file\"\r\n                                multiple\r\n                                onChange={this.onFilesAdded}\r\n                              />\r\n\r\n                              <img\r\n                                alt=\"upload\"\r\n                                className=\"Icon\"\r\n                                src=\"img/baseline-cloud_upload-24px.svg\"\r\n                              />\r\n                              <span>Upload Files</span>\r\n                            </div>\r\n                          </Grid.Column>\r\n                          <Grid.Column>\r\n                            <List divided verticalAlign=\"middle\" style={{ padding: \"0 2em\" }}>\r\n                              {files.map((file) => {\r\n                                return (\r\n                                  <List.Item key={file.name}>\r\n                                    <List.Content floated=\"right\">\r\n                                      <Button\r\n                                        color=\"red\"\r\n                                        onClick={(e) => {\r\n                                          this.onFileRemoved(e, file);\r\n                                        }}\r\n                                      >\r\n                                        Remove\r\n                                      </Button>\r\n                                    </List.Content>\r\n                                    <List.Content>{file.name}</List.Content>\r\n                                  </List.Item>\r\n                                );\r\n                              })}\r\n                            </List>\r\n                          </Grid.Column>\r\n                        </Grid.Row>                                                 \r\n                      </Form.Field>\r\n                      <Form.Button fluid color='teal'>Submit</Form.Button>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Container>  \r\n        );\r\n    }\r\n}\r\n \r\nfunction mapState(state) {\r\n    const { files, ticketCategories } = state.reportProblem;\r\n    const { errors, valid } = state.validation;\r\n    return { errors, valid, files, ticketCategories };\r\n  }\r\n  \r\n  const actionCreators = {\r\n    validateInput: validatorActions.validateInput,\r\n    filesAdded: reportProblemActions.filesAdded,\r\n    fileRemoved: reportProblemActions.fileRemoved,\r\n    getTicketCategories: reportProblemActions.getTicketCategories,\r\n    createProblemTicket: reportProblemActions.createProblemTicket,\r\n  }\r\n  \r\n  const connectedReportPage = connect(mapState, actionCreators)(ReportProblemPage);\r\n  \r\n  export  {connectedReportPage as ReportProblemPage }"]},"metadata":{},"sourceType":"module"}