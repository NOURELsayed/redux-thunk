{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/watchList/watchList.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { watchListActions, shoppingCartActions } from \"../../actions\";\nimport { Button, Container, Card, Image } from \"semantic-ui-react\";\nimport { imageUrl } from \"../../config\";\nimport { Link } from \"react-router-dom\";\n\nclass watchList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.removeItem = (e, {\n      post_id\n    }) => {\n      this.props.removeItem(post_id);\n    };\n\n    this.addToCartBtnClicked = (e, {\n      post_id\n    }) => {\n      this.props.addToCart(post_id);\n    };\n\n    this.renderWatchListPosts = posts => {\n      return posts == null || posts.length === 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n        center: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"No posts to show\")) : posts.map(post => {\n        let PostTItle = post.special === true ? post.title.english : post.title;\n        let image = \"\";\n\n        if (post.images) {\n          image = post.images[0];\n        }\n\n        return /*#__PURE__*/React.createElement(Card, {\n          center: \"true\",\n          key: post._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          floated: \"right\",\n          size: \"small\",\n          src: `${imageUrl}/${image}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/post/${post._id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }\n        }, PostTItle))), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, \"price\"), \" \", post.price), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }\n        }, post.status)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ui two buttons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \" fluid negative ui button\",\n          negative: true,\n          onClick: this.removeItem,\n          post_id: post._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }\n        }, \"Remove\"), /*#__PURE__*/React.createElement(Button, {\n          className: \" fluid  ui button\",\n          positive: true,\n          post_id: post._id,\n          onClick: this.addToCartBtnClicked,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, \"Add To Cart\"))));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserwatchListData();\n  }\n\n  render() {\n    const posts = this.props.watchListData;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      doubling: true,\n      itemsPerRow: 2,\n      stackable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, this.renderWatchListPosts(posts)));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    watchListData\n  } = state.watchList;\n  return {\n    user,\n    watchListData\n  };\n}\n\nconst actionCreators = {\n  getUserwatchListData: watchListActions.viewWatchList,\n  removeItem: watchListActions.removeItem,\n  addToCart: shoppingCartActions.addItemToCart\n};\nconst connectedwatchList = connect(mapState, actionCreators)(watchList);\nexport { connectedwatchList as watchList };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/watchList/watchList.jsx"],"names":["React","Component","connect","watchListActions","shoppingCartActions","Button","Container","Card","Image","imageUrl","Link","watchList","state","removeItem","e","post_id","props","addToCartBtnClicked","addToCart","renderWatchListPosts","posts","length","map","post","PostTItle","special","title","english","image","images","_id","price","status","componentDidMount","getUserwatchListData","render","watchListData","mapState","user","authentication","actionCreators","viewWatchList","addItemToCart","connectedwatchList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,eAAtD;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,KAAlC,QAA+C,mBAA/C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCW,KADgC,GACxB,EADwB;;AAAA,SAKhCC,UALgC,GAKnB,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAoB;AAC/B,WAAKC,KAAL,CAAWH,UAAX,CAAsBE,OAAtB;AACD,KAP+B;;AAAA,SAQhCE,mBARgC,GAQV,CAACH,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAoB;AACxC,WAAKC,KAAL,CAAWE,SAAX,CAAqBH,OAArB;AACD,KAV+B;;AAAA,SAYhCI,oBAZgC,GAYRC,KAAD,IAAW;AAChC,aAAOA,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAACC,MAAN,KAAiB,CAAlC,gBACL;AAAI,QAAA,MAAM,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADK,GAKLD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAClB,YAAIC,SAAS,GAAGD,IAAI,CAACE,OAAL,KAAiB,IAAjB,GAAwBF,IAAI,CAACG,KAAL,CAAWC,OAAnC,GAA6CJ,IAAI,CAACG,KAAlE;AACA,YAAIE,KAAK,GAAG,EAAZ;;AACA,YAAIL,IAAI,CAACM,MAAT,EAAiB;AACfD,UAAAA,KAAK,GAAGL,IAAI,CAACM,MAAL,CAAY,CAAZ,CAAR;AACD;;AAED,4BACE,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAC,MAAb;AAAoB,UAAA,GAAG,EAAEN,IAAI,CAACO,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,GAAG,EAAG,GAAErB,QAAS,IAAGmB,KAAM,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAME,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQL,IAAI,CAACO,GAAI,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCN,SAAhC,CADF,CADF,CANF,eAWE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,OAC0BD,IAAI,CAACQ,KAD/B,CAXF,eAcE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBR,IAAI,CAACS,MAAxB,CAdF,CADF,eAiBE,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,SAAS,EAAC,2BADZ;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,OAAO,EAAE,KAAKnB,UAHhB;AAIE,UAAA,OAAO,EAAEU,IAAI,CAACO,GAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,oBAAC,MAAD;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,OAAO,EAAEP,IAAI,CAACO,GAHhB;AAIE,UAAA,OAAO,EAAE,KAAKb,mBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,CADF,CAjBF,CADF;AAwCD,OA/CD,CALF;AAsDD,KAnE+B;AAAA;;AAEhCgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,KAAL,CAAWkB,oBAAX;AACD;;AAgEDC,EAAAA,MAAM,GAAG;AACP,UAAMf,KAAK,GAAG,KAAKJ,KAAL,CAAWoB,aAAzB;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,WAAW,EAAE,CAAlC;AAAqC,MAAA,SAAS,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,oBAAL,CAA0BC,KAA1B,CADH,CADF,CADF;AAOD;;AA7E+B;;AA+ElC,SAASiB,QAAT,CAAkBzB,KAAlB,EAAyB;AACvB,QAAM;AAAE0B,IAAAA;AAAF,MAAW1B,KAAK,CAAC2B,cAAvB;AACA,QAAM;AAAEH,IAAAA;AAAF,MAAoBxB,KAAK,CAACD,SAAhC;AACA,SAAO;AAAE2B,IAAAA,IAAF;AAAQF,IAAAA;AAAR,GAAP;AACD;;AAED,MAAMI,cAAc,GAAG;AACrBN,EAAAA,oBAAoB,EAAE/B,gBAAgB,CAACsC,aADlB;AAErB5B,EAAAA,UAAU,EAAEV,gBAAgB,CAACU,UAFR;AAGrBK,EAAAA,SAAS,EAAEd,mBAAmB,CAACsC;AAHV,CAAvB;AAKA,MAAMC,kBAAkB,GAAGzC,OAAO,CAACmC,QAAD,EAAWG,cAAX,CAAP,CAAkC7B,SAAlC,CAA3B;AACA,SAASgC,kBAAkB,IAAIhC,SAA/B","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { watchListActions, shoppingCartActions } from \"../../actions\";\r\nimport { Button, Container, Card, Image } from \"semantic-ui-react\";\r\nimport { imageUrl } from \"../../config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass watchList extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.props.getUserwatchListData();\r\n  }\r\n  removeItem = (e, { post_id }) => {\r\n    this.props.removeItem(post_id);\r\n  };\r\n  addToCartBtnClicked = (e, { post_id }) => {\r\n    this.props.addToCart(post_id);\r\n  };\r\n\r\n  renderWatchListPosts = (posts) => {\r\n    return posts == null || posts.length === 0 ? (\r\n      <h3 center=\"true\">\r\n        <strong>No posts to show</strong>\r\n      </h3>\r\n    ) : (\r\n      posts.map((post) => {\r\n        let PostTItle = post.special === true ? post.title.english : post.title;\r\n        let image = \"\";\r\n        if (post.images) {\r\n          image = post.images[0];\r\n        }\r\n\r\n        return (\r\n          <Card center=\"true\" key={post._id}>\r\n            <Card.Content>\r\n              <Image\r\n                floated=\"right\"\r\n                size=\"small\"\r\n                src={`${imageUrl}/${image}`}\r\n              />\r\n              <Card.Header>\r\n                <strong>\r\n                  <Link to={`/post/${post._id}`}>{PostTItle}</Link>\r\n                </strong>\r\n              </Card.Header>\r\n              <Card.Meta>\r\n                <strong>price</strong> {post.price}\r\n              </Card.Meta>\r\n              <Card.Description>{post.status}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <div className=\"ui two buttons\">\r\n                <Button\r\n                  className=\" fluid negative ui button\"\r\n                  negative\r\n                  onClick={this.removeItem}\r\n                  post_id={post._id}\r\n                >\r\n                  Remove\r\n                </Button>\r\n                <Button\r\n                  className=\" fluid  ui button\"\r\n                  positive\r\n                  post_id={post._id}\r\n                  onClick={this.addToCartBtnClicked}\r\n                >\r\n                  Add To Cart\r\n                </Button>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        );\r\n      })\r\n    );\r\n  };\r\n  render() {\r\n    const posts = this.props.watchListData;\r\n    return (\r\n      <Container>\r\n        <Card.Group doubling itemsPerRow={2} stackable>\r\n          {this.renderWatchListPosts(posts)}\r\n        </Card.Group>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const { watchListData } = state.watchList;\r\n  return { user, watchListData };\r\n}\r\n\r\nconst actionCreators = {\r\n  getUserwatchListData: watchListActions.viewWatchList,\r\n  removeItem: watchListActions.removeItem,\r\n  addToCart: shoppingCartActions.addItemToCart,\r\n};\r\nconst connectedwatchList = connect(mapState, actionCreators)(watchList);\r\nexport { connectedwatchList as watchList };\r\n"]},"metadata":{},"sourceType":"module"}