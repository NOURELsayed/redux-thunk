{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/RegisterPage/Sections/OTPSection.jsx\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Segment, Container } from \"semantic-ui-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport OtpInput from \"react-otp-input\";\nimport \"./styles.css\";\nimport { setRegisterStep, verfiyOTP, validatorActions, resendOTP } from \"../../../actions\";\n\nconst OutlineButton = ({\n  children,\n  onClick,\n  disabled\n}) => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    disabled: disabled,\n    onClick: onClick,\n    className: \"OutlineButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst OTPSection = props => {\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const registerData = useSelector(state => state.registerReducer.registerData);\n  const step = useSelector(state => state.registerReducer.step);\n  const otpError = useSelector(state => state.registerReducer.otpError);\n  const ValidationInputError = useSelector(state => {\n    var _state$validation$err;\n\n    return (_state$validation$err = state.validation.errors) === null || _state$validation$err === void 0 ? void 0 : _state$validation$err.otp;\n  });\n  const schema = {\n    properties: {\n      otp: {\n        title: \"otp\",\n        type: \"string\",\n        pattern: \"^[0-9]{4}$\"\n      }\n    }\n  };\n  let countDown = 60;\n  let timer = \"\";\n  useEffect(() => {\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n  const [digit1, setDigit1] = useState(\"\");\n  const [serviceToUse, setServiceToUse] = useState(\"primary\");\n  const [isResendCodeText, setResendCode] = useState(\"\");\n\n  function toEnglishDigits(str) {\n    var e = '۰'.charCodeAt(0);\n    str = str.replace(/[۰-۹]/g, function (t) {\n      return t.charCodeAt(0) - e;\n    });\n    e = '٠'.charCodeAt(0);\n    str = str.replace(/[٠-٩]/g, function (t) {\n      return t.charCodeAt(0) - e;\n    });\n    return str;\n  }\n\n  useEffect(() => {\n    setDigit1(\"\");\n\n    if (timer) {\n      clearInterval(timer);\n    }\n\n    if (otpError) {// .. TODO\n      // alert(`OTP error : ${otpError}`);\n    }\n  }, [step, otpError]);\n\n  const handleSubmit = () => {\n    const otpCode = `${digit1}`;\n\n    if (!otpCode || otpCode && otpCode.trim().length < 4) {\n      // .. TODO\n      return;\n    }\n\n    dispatch(validatorActions.validateInput(schema, \"otp\", otpCode));\n    if (ValidationInputError) return;\n    dispatch(verfiyOTP({\n      otpCode,\n      phone: registerData === null || registerData === void 0 ? void 0 : registerData.phone\n    }));\n  };\n\n  const Validation = otp => {\n    dispatch(validatorActions.validateInput(schema, \"otp\", otp));\n    return ValidationInputError;\n  };\n\n  const digit1HandleChange = otp => {\n    const englishOTP = toEnglishDigits(otp);\n    setDigit1(englishOTP);\n    Validation(englishOTP);\n  };\n\n  const changePhoneNumberButtonPressed = useCallback(() => {\n    dispatch(setRegisterStep(1));\n  }, []);\n  const resendOTPCodeButtonPressed = useCallback(() => {\n    if (timer) {\n      return;\n    }\n\n    dispatch(resendOTP({\n      phone: registerData === null || registerData === void 0 ? void 0 : registerData.phone,\n      service: serviceToUse\n    }));\n    setServiceToUse(serviceToUse === \"primary\" ? \"secondary\" : \"primary\");\n    countDown = 60;\n    setResendCode(`${t(\"registerPage:youCanResendCodeAfterText\")} ${countDown}`);\n    timer = setInterval(() => {\n      if (countDown === 0) {\n        clearInterval(timer);\n        setResendCode(\"\");\n        timer = \"\";\n        return;\n      }\n\n      countDown -= 1;\n      setResendCode(`${t(\"registerPage:youCanResendCodeAfterText\")} ${countDown}`);\n    }, 1000);\n  }, [registerData, serviceToUse]);\n  const isFormDisabled = step < 2 || step === 4;\n  const language = localStorage.getItem(\"i18nextLng\");\n  var phoneLast4digits = registerData.phone;\n  phoneLast4digits = String(phoneLast4digits).substr(-4).replace(/[^\\d.-]/g, 'X');\n  return /*#__PURE__*/React.createElement(Container, {\n    className: `OTPSegment  ${language}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    className: `OTPSegment  ${language}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"OTPText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, t(\"registerPage:enterOTPText\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Enter4DigitsText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, t(\"registerPage:enter4DigitsText\"), \" \", phoneLast4digits), /*#__PURE__*/React.createElement(OutlineButton, {\n    disabled: isFormDisabled,\n    onClick: changePhoneNumberButtonPressed,\n    className: \"OutlineButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, t(\"registerPage:changePhoneNumberText\")), ValidationInputError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"errorHnadling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, t(\"registerPage:wrongCode\")), /*#__PURE__*/React.createElement(OtpInput, {\n    value: digit1,\n    onChange: digit1HandleChange,\n    numInputs: 4,\n    separator: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    })),\n    inputStyle: {\n      width: \"54px\",\n      height: \"62px\",\n      borderRadius: \"10px\",\n      border: \"2px solid rgba(0,0,0,0.3)\",\n      fontSize: \"32px\",\n      fontFamily: 'Montserrat',\n      fontWeight: \"300\"\n    },\n    containerStyle: \"OTPInputsForm\",\n    isDisabled: isFormDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), isResendCodeText ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Enter4DigitsText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, isResendCodeText) : /*#__PURE__*/React.createElement(OutlineButton, {\n    disabled: isFormDisabled,\n    onClick: resendOTPCodeButtonPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, t(\"registerPage:resendCodeText\")), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: isFormDisabled,\n    className: \"NextButton\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, t(\"registerPage:nextButtonTitle\")), otpError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"errorHnadling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 22\n    }\n  }, t(\"registerPage:OTPError\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { OTPSection };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/RegisterPage/Sections/OTPSection.jsx"],"names":["React","useState","useCallback","useEffect","Segment","Container","useTranslation","useDispatch","useSelector","OtpInput","setRegisterStep","verfiyOTP","validatorActions","resendOTP","OutlineButton","children","onClick","disabled","OTPSection","props","t","dispatch","registerData","state","registerReducer","step","otpError","ValidationInputError","validation","errors","otp","schema","properties","title","type","pattern","countDown","timer","clearInterval","digit1","setDigit1","serviceToUse","setServiceToUse","isResendCodeText","setResendCode","toEnglishDigits","str","e","charCodeAt","replace","handleSubmit","otpCode","trim","length","validateInput","phone","Validation","digit1HandleChange","englishOTP","changePhoneNumberButtonPressed","resendOTPCodeButtonPressed","service","setInterval","isFormDisabled","language","localStorage","getItem","phoneLast4digits","String","substr","margin","width","height","borderRadius","border","fontSize","fontFamily","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport { Segment, Container } from \"semantic-ui-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport OtpInput from \"react-otp-input\";\r\n\r\nimport \"./styles.css\";\r\nimport {\r\n  setRegisterStep,\r\n  verfiyOTP,\r\n  validatorActions,\r\n  resendOTP,\r\n} from \"../../../actions\";\r\n\r\nconst OutlineButton = ({ children, onClick, disabled }) => {\r\n  return (\r\n    <button disabled={disabled} onClick={onClick} className={\"OutlineButton\"}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst OTPSection = (props) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const registerData = useSelector(\r\n    (state) => state.registerReducer.registerData\r\n  );\r\n  \r\n  const step = useSelector((state) => state.registerReducer.step);\r\n  const otpError = useSelector((state) => state.registerReducer.otpError);\r\n\r\n  const ValidationInputError = useSelector(\r\n    (state) => state.validation.errors?.otp\r\n  );\r\n\r\n  const schema = {\r\n    properties: {\r\n      otp: {\r\n        title: \"otp\",\r\n        type: \"string\",\r\n        pattern: \"^[0-9]{4}$\",\r\n      },\r\n    },\r\n  };\r\n  let countDown = 60;\r\n  let timer = \"\";\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timer) {\r\n        clearInterval(timer);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const [digit1, setDigit1] = useState(\"\");\r\n  const [serviceToUse, setServiceToUse] = useState(\"primary\")\r\n  const [isResendCodeText, setResendCode] = useState(\"\");\r\n  function toEnglishDigits(str) {\r\n\r\n    var e = '۰'.charCodeAt(0);\r\n    str = str.replace(/[۰-۹]/g, function(t) {\r\n        return t.charCodeAt(0) - e;\r\n    });\r\n  \r\n    e = '٠'.charCodeAt(0);\r\n    str = str.replace(/[٠-٩]/g, function(t) {\r\n        return t.charCodeAt(0) - e;\r\n    });\r\n    return str;\r\n  }\r\n  useEffect(() => {\r\n    setDigit1(\"\");\r\n\r\n    if (timer) {\r\n      clearInterval(timer);\r\n    }\r\n    if (otpError) {\r\n      // .. TODO\r\n      // alert(`OTP error : ${otpError}`);\r\n    }\r\n  }, [step, otpError]);\r\n\r\n  const handleSubmit = () => {\r\n    const otpCode = `${digit1}`;\r\n    if (!otpCode || (otpCode && otpCode.trim().length < 4)) {\r\n      // .. TODO\r\n      return;\r\n    }\r\n    dispatch(validatorActions.validateInput(schema, \"otp\", otpCode));\r\n    if (ValidationInputError) return;\r\n\r\n    dispatch(verfiyOTP({ otpCode, phone: registerData?.phone }));\r\n  };\r\n\r\n  const Validation = (otp) => {\r\n    dispatch(validatorActions.validateInput(schema, \"otp\", otp));\r\n    return ValidationInputError;\r\n  };\r\n\r\n  const digit1HandleChange = (otp) => {\r\n    const englishOTP = toEnglishDigits(otp)\r\n    setDigit1(englishOTP);\r\n    Validation(englishOTP);\r\n  };\r\n\r\n  const changePhoneNumberButtonPressed = useCallback(() => {\r\n    dispatch(setRegisterStep(1));\r\n  }, []);\r\n\r\n\r\n  const resendOTPCodeButtonPressed = useCallback(() => {\r\n    if (timer) {\r\n      return;\r\n    }\r\n\r\n    dispatch(resendOTP({ phone: registerData?.phone, service: serviceToUse }));\r\n    setServiceToUse(serviceToUse === \"primary\" ? \"secondary\" : \"primary\");\r\n   \r\n    countDown = 60;\r\n    setResendCode(\r\n      `${t(\"registerPage:youCanResendCodeAfterText\")} ${countDown}`\r\n    );\r\n    timer = setInterval(() => {\r\n      if (countDown === 0) {\r\n        clearInterval(timer);\r\n        setResendCode(\"\");\r\n        timer = \"\";\r\n        return;\r\n      }\r\n\r\n      countDown -= 1;\r\n\r\n      setResendCode(\r\n        `${t(\"registerPage:youCanResendCodeAfterText\")} ${countDown}`\r\n      );\r\n    }, 1000);\r\n  }, [registerData, serviceToUse]);\r\n\r\n  const isFormDisabled = step < 2 || step === 4;\r\n\r\n  const language = localStorage.getItem(\"i18nextLng\");\r\n\r\n\r\n  var phoneLast4digits = registerData.phone;\r\n  phoneLast4digits =String(phoneLast4digits).substr(-4).replace(/[^\\d.-]/g, 'X')\r\n\r\n  return (\r\n    <Container className={`OTPSegment  ${language}`}>\r\n      <Segment  className={`OTPSegment  ${language}`}>\r\n        <p className={\"OTPText\"}>{t(\"registerPage:enterOTPText\")}</p>\r\n        <p className={\"Enter4DigitsText\"}>\r\n          {t(\"registerPage:enter4DigitsText\")} {phoneLast4digits}\r\n        </p>\r\n\r\n        <OutlineButton\r\n          disabled={isFormDisabled}\r\n          onClick={changePhoneNumberButtonPressed}\r\n          className=\"OutlineButton\"\r\n        >\r\n          {t(\"registerPage:changePhoneNumberText\")}\r\n        </OutlineButton>\r\n\r\n        {ValidationInputError && (\r\n          <span className=\"errorHnadling\">{t(\"registerPage:wrongCode\")}</span>\r\n        )}\r\n\r\n        <OtpInput\r\n          value={digit1}\r\n          onChange={digit1HandleChange}\r\n          numInputs={4}\r\n          separator={\r\n            <span>\r\n              <p style={{ margin: \"5px\" }}></p>\r\n            </span>\r\n          }\r\n          inputStyle={{\r\n            width: \"54px\",\r\n            height: \"62px\",\r\n            borderRadius: \"10px\",\r\n            border: \"2px solid rgba(0,0,0,0.3)\",\r\n            fontSize: \"32px\",\r\n            fontFamily: 'Montserrat',\r\n            fontWeight: \"300\"\r\n          }}\r\n          containerStyle={\"OTPInputsForm\"}\r\n          isDisabled={isFormDisabled}\r\n        />\r\n        {isResendCodeText ? (\r\n          <p className={\"Enter4DigitsText\"}>{isResendCodeText}</p>\r\n        ) : (\r\n          <OutlineButton\r\n            disabled={isFormDisabled}\r\n            onClick={resendOTPCodeButtonPressed}\r\n          >\r\n            {t(\"registerPage:resendCodeText\")}\r\n          </OutlineButton>\r\n        )}\r\n\r\n        <button\r\n          disabled={isFormDisabled}\r\n          className={\"NextButton\"}\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n        >\r\n          {t(\"registerPage:nextButtonTitle\")}\r\n        </button>\r\n        {otpError && <span className=\"errorHnadling\">{t(\"registerPage:OTPError\")}</span>}\r\n \r\n      </Segment>\r\n      <div className={\"Border\"} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { OTPSection };\r\n"]},"metadata":{},"sourceType":"module"}