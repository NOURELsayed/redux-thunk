{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/LandingPage/invitationAlert.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Container, Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { userActions } from \"../../actions\";\nimport DesktopBreakpoint from \"../../components/Responsive_utillities/desktop_breakPoint\";\nimport PhoneBreakpoint from \"../../components/Responsive_utillities/phone_breakPoint\";\n\nclass InvitationAlert extends Component {\n  hideAlert(isActive) {\n    this.props.hideAlert(!isActive);\n  }\n\n  render() {\n    const language = localStorage.getItem(\"i18nextLng\");\n    const {\n      t,\n      isActive\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DesktopBreakpoint, {\n      name: \"desktop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      className: `InvitationAlert ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/invitationrequest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, t(\"landingPage:betaMessage\"))), /*#__PURE__*/React.createElement(Icon, {\n      name: \"remove\",\n      onClick: () => this.hideAlert(isActive),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(PhoneBreakpoint, {\n      name: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      className: `InvitationAlert ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/invitationrequest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, t(\"landingPage:betaMessage\"))), /*#__PURE__*/React.createElement(Icon, {\n      name: \"remove\",\n      onClick: () => this.hideAlert(isActive),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    language,\n    isActive\n  } = state.users;\n  return {\n    language,\n    isActive\n  };\n}\n\nconst actionCreators = {\n  changeLanguage: userActions.setLanguage,\n  hideAlert: userActions.hideAlert\n};\nconst connectedInvitationAlert = connect(mapState, actionCreators)(withTranslation(\"landingPage\")(InvitationAlert));\nexport { connectedInvitationAlert as InvitationAlert };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/LandingPage/invitationAlert.jsx"],"names":["React","Component","Segment","Container","Icon","connect","withTranslation","Link","userActions","DesktopBreakpoint","PhoneBreakpoint","InvitationAlert","hideAlert","isActive","props","render","language","localStorage","getItem","t","mapState","state","users","actionCreators","changeLanguage","setLanguage","connectedInvitationAlert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,iBAAP,MAA8B,2DAA9B;AACA,OAAOC,eAAP,MAA4B,yDAA5B;;AACA,MAAMC,eAAN,SAA8BV,SAA9B,CAAwC;AACtCW,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,SAAKC,KAAL,CAAWF,SAAX,CAAqB,CAACC,QAAtB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;AACA,UAAM;AAAEC,MAAAA,CAAF;AAAKN,MAAAA;AAAL,QAAkB,KAAKC,KAA7B;AAEA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAG,mBAAkBE,QAAS,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,CAAC,CAAC,yBAAD,CADJ,CADF,CADF,eAME,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,MAAM,KAAKP,SAAL,CAAeC,QAAf,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF,eAYE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAG,mBAAkBG,QAAS,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,CAAC,CAAC,yBAAD,CADJ,CADF,CADF,eAME,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,MAAM,KAAKP,SAAL,CAAeC,QAAf,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CAZF,CADF;AAyBD;;AAlCqC;;AAoCxC,SAASO,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEL,IAAAA,QAAF;AAAYH,IAAAA;AAAZ,MAAyBQ,KAAK,CAACC,KAArC;AAEA,SAAO;AAAEN,IAAAA,QAAF;AAAYH,IAAAA;AAAZ,GAAP;AACD;;AAED,MAAMU,cAAc,GAAG;AACrBC,EAAAA,cAAc,EAAEhB,WAAW,CAACiB,WADP;AAErBb,EAAAA,SAAS,EAAEJ,WAAW,CAACI;AAFF,CAAvB;AAIA,MAAMc,wBAAwB,GAAGrB,OAAO,CACtCe,QADsC,EAEtCG,cAFsC,CAAP,CAG/BjB,eAAe,CAAC,aAAD,CAAf,CAA+BK,eAA/B,CAH+B,CAAjC;AAIA,SAASe,wBAAwB,IAAIf,eAArC","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Container, Icon } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userActions } from \"../../actions\";\r\nimport DesktopBreakpoint from \"../../components/Responsive_utillities/desktop_breakPoint\";\r\nimport PhoneBreakpoint from \"../../components/Responsive_utillities/phone_breakPoint\";\r\nclass InvitationAlert extends Component {\r\n  hideAlert(isActive) {\r\n    this.props.hideAlert(!isActive);\r\n  }\r\n\r\n  render() {\r\n    const language = localStorage.getItem(\"i18nextLng\");\r\n    const { t, isActive } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <DesktopBreakpoint name=\"desktop\">\r\n          <Segment className={`InvitationAlert ${language}`}>\r\n            <p>\r\n              <Link to=\"/invitationrequest\">\r\n                {t(\"landingPage:betaMessage\")}\r\n              </Link>\r\n            </p>\r\n            <Icon name=\"remove\" onClick={() => this.hideAlert(isActive)} />\r\n          </Segment>\r\n        </DesktopBreakpoint>\r\n\r\n        <PhoneBreakpoint name=\"phone\">\r\n          <Segment className={`InvitationAlert ${language}`}>\r\n            <p>\r\n              <Link to=\"/invitationrequest\">\r\n                {t(\"landingPage:betaMessage\")}\r\n              </Link>\r\n            </p>\r\n            <Icon name=\"remove\" onClick={() => this.hideAlert(isActive)} />\r\n          </Segment>\r\n        </PhoneBreakpoint>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state) {\r\n  const { language, isActive } = state.users;\r\n\r\n  return { language, isActive };\r\n}\r\n\r\nconst actionCreators = {\r\n  changeLanguage: userActions.setLanguage,\r\n  hideAlert: userActions.hideAlert,\r\n};\r\nconst connectedInvitationAlert = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withTranslation(\"landingPage\")(InvitationAlert));\r\nexport { connectedInvitationAlert as InvitationAlert };\r\n"]},"metadata":{},"sourceType":"module"}