{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/HomePage/HomePage.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Image, Container, Segment, Card, Grid, Label } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { withTranslation } from \"react-i18next\";\nimport { shoppingCartConstants } from \"../../constants\";\nimport { SearchInput } from \"../../components/Search/SearchInput\";\nimport { postActions, shoppingCartActions, watchListActions, userActions } from \"../../actions\";\nimport { imageUrl } from \"../../config\";\nimport Slider from \"react-slick\";\nimport { onSale, calculatePrice } from \"../../helpers\";\nimport DiscountCard from \"../../components/Post/DiscountCard\";\nimport \"./HomePage.css\";\nimport { PostCard } from \"../PostCard\";\nimport { post } from \"../../reducers/post.reducer\";\nimport i18n from \"i18next\";\nexport class HomePageContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addToCartBtnClicked = (e, {\n      post_id\n    }) => {\n      this.props.addToCart(post_id, shoppingCartConstants.SELLING_METHOD_BUY_NOW);\n    };\n\n    this.handleClick = post => {\n      this.state.clicked ? this.addToWatchList(post) : this.removeFromWatchList(post._id);\n    };\n\n    this.renderImages = post => {\n      const settings = {\n        dots: false,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false,\n        adaptiveHeight: false\n      };\n      return /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }), post.images.map(image => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          style: {\n            height: 200,\n            width: 250\n          },\n          centered: true,\n          src: `${imageUrl}/${image}`,\n          size: \"small\",\n          rounded: true,\n          wrapped: true,\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }));\n      }));\n    };\n\n    this.renderDiscount = post => {\n      const {\n        price,\n        discount,\n        title,\n        sellingMethod\n      } = post;\n      const {\n        discount_value,\n        discount_unit\n      } = discount;\n      const salePrice = calculatePrice(price, discount);\n      return /*#__PURE__*/React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        color: \"red\",\n        ribbon: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, discount_value, \" \", discount_unit === \"percentage\" ? \"%\" : \"LE\", \" OFF\"), /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, `${title}`), sellingMethod.toLowerCase().includes(\"buynow\") ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, `${salePrice} EGP`)), /*#__PURE__*/React.createElement(Card.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strike\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, `${price} EGP`))) : /*#__PURE__*/React.createElement(Card.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, \" Auction Only \"));\n    };\n\n    this.inWatchList = (postId, watchlist) => watchlist.some(el => el._id === postId);\n\n    this.renderPosts = (posts, watchlist = []) => {\n      return posts == null || posts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Card.Group, {\n        centered: true,\n        itemsPerRow: 4,\n        stackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, posts.map(post => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = post.expiryDate ? post.expiryDate : post.auction.endDate;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const endAuctionDate = timeWitUtc.fromNow();\n        return /*#__PURE__*/React.createElement(PostCard, {\n          post: post,\n          renderImages: this.renderImages(post),\n          onClick: this.handleClick,\n          endAuctionDate: endAuctionDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.renderUpToPosts = (upToPosts, watchlist = []) => {\n      return upToPosts == null || upToPosts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Card.Group, {\n        centered: true,\n        itemsPerRow: 4,\n        stackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }, upToPosts.map(post => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = post.expiryDate ? post.expiryDate : post.auction.endDate;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const endAuctionDate = timeWitUtc.fromNow();\n        return /*#__PURE__*/React.createElement(PostCard, {\n          post: post,\n          renderImages: this.renderImages(post),\n          onClick: this.handleClick,\n          endAuctionDate: endAuctionDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.renderdiscountedPosts = (discountedPosts, watchlist = []) => {\n      return discountedPosts == null || discountedPosts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Card.Group, {\n        centered: true,\n        itemsPerRow: 4,\n        stackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }\n      }, discountedPosts.map(post => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = post.expiryDate ? post.expiryDate : post.auction.endDate;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const endAuctionDate = timeWitUtc.fromNow();\n        return /*#__PURE__*/React.createElement(PostCard, {\n          post: post,\n          renderImages: this.renderImages(post),\n          onClick: this.handleClick,\n          endAuctionDate: endAuctionDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.rendermostViewedPosts = (mostViewedPosts, watchlist = []) => {\n      return mostViewedPosts == null || mostViewedPosts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Card.Group, {\n        centered: true,\n        itemsPerRow: 4,\n        stackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 7\n        }\n      }, mostViewedPosts.map(post => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = post.expiryDate ? post.expiryDate : post.auction.endDate;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const endAuctionDate = timeWitUtc.fromNow();\n        return /*#__PURE__*/React.createElement(PostCard, {\n          post: post,\n          renderImages: this.renderImages(post),\n          onClick: this.handleClick,\n          endAuctionDate: endAuctionDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.renderpostsWithMinQuantities = (postsWithMinQuantities, watchlist = []) => {\n      return postsWithMinQuantities == null || postsWithMinQuantities.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Card.Group, {\n        centered: true,\n        itemsPerRow: 4,\n        stackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }\n      }, postsWithMinQuantities.map(post => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = post.expiryDate ? post.expiryDate : post.auction.endDate;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const endAuctionDate = timeWitUtc.fromNow();\n        return /*#__PURE__*/React.createElement(PostCard, {\n          post: post,\n          renderImages: this.renderImages(post),\n          onClick: this.handleClick,\n          endAuctionDate: endAuctionDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.renderEndingSoon = (EndingSoonPosts, watchlist = []) => {\n      return EndingSoonPosts == null || EndingSoonPosts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Card.Group, {\n        centered: true,\n        itemsPerRow: 4,\n        stackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 7\n        }\n      }, EndingSoonPosts.map(post => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = post.expiryDate ? post.expiryDate : post.auction.endDate;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const endAuctionDate = timeWitUtc.fromNow();\n        return /*#__PURE__*/React.createElement(PostCard, {\n          post: post,\n          renderImages: this.renderImages(post),\n          onClick: this.handleClick,\n          endAuctionDate: endAuctionDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.renderHotAuctionsPosts = (HotAuctionsPosts, watchlist = []) => {\n      return HotAuctionsPosts == null || HotAuctionsPosts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Card.Group, {\n        centered: true,\n        itemsPerRow: 4,\n        stackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }\n      }, HotAuctionsPosts.map(post => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = post.expiryDate ? post.expiryDate : post.auction.endDate;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const endAuctionDate = timeWitUtc.fromNow();\n        return /*#__PURE__*/React.createElement(PostCard, {\n          post: post,\n          renderImages: this.renderImages(post),\n          onClick: this.handleClick,\n          endAuctionDate: endAuctionDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    document.body.dir = i18n.dir();\n    await this.props.getUserwatchListData(this.props.status.user.id);\n    await this.props.getAllPosts();\n    await this.props.getUPTOPosts();\n    await this.props.getdiscountedPosts();\n    await this.props.getmostViewedPosts();\n    await this.props.getpostsWithMinQuantitiesPosts();\n    await this.props.getEndingSoonPosts();\n    await this.props.getHotAuctionsPosts();\n  }\n\n  render() {\n    const {\n      posts,\n      upToPosts,\n      mostViewedPosts,\n      discountedPosts,\n      postsWithMinQuantities,\n      EndingSoonPosts,\n      HotAuctionsPosts,\n      t\n    } = this.props;\n    const watchList = this.props.watchListData;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        margin: \"10px 50px\",\n        padding: \"10px 50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchInput, {\n      cookies: this.props.cookies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, t(\"Up To Posts\")), this.renderUpToPosts(upToPosts, watchList)), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }\n    }, t(\"Featured Posts\")), this.renderPosts(posts, watchList)), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, t(\"Attractive Discounts\")), this.renderdiscountedPosts(discountedPosts, watchList)), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }\n    }, t(\"Top Viewed\")), this.rendermostViewedPosts(mostViewedPosts, watchList)), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }\n    }, t(\"Posts with Min Quantities\")), this.renderpostsWithMinQuantities(postsWithMinQuantities, watchList)), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, t(\"Ending Soon\")), this.renderEndingSoon(EndingSoonPosts, watchList)), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }, t(\"Hot Auctions\")), this.renderHotAuctionsPosts(HotAuctionsPosts, watchList)));\n  }\n\n}\n\nfunction mapState(state, ownProps) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    posts,\n    upToPosts,\n    discountedPosts,\n    mostViewedPosts,\n    postsWithMinQuantities,\n    EndingSoonPosts,\n    HotAuctionsPosts\n  } = state.home;\n  const {\n    watchListData\n  } = state.watchList;\n  return {\n    posts,\n    watchListData,\n    upToPosts,\n    discountedPosts,\n    mostViewedPosts,\n    postsWithMinQuantities,\n    EndingSoonPosts,\n    HotAuctionsPosts,\n    status: {\n      user\n    },\n    cookies: ownProps.cookies\n  };\n}\n\nconst actionCreators = {\n  changeLanguage: userActions.setLanguage,\n  getAllPosts: postActions.getAll,\n  getUPTOPosts: postActions.getUpTo,\n  getdiscountedPosts: postActions.getdiscountedPosts,\n  getmostViewedPosts: postActions.getmostViewed,\n  getpostsWithMinQuantitiesPosts: postActions.getpostsWithMinQuantities,\n  getEndingSoonPosts: postActions.getEndingSoon,\n  getHotAuctionsPosts: postActions.getHotAuctions,\n  addToCart: shoppingCartActions.addItemToCart,\n  getUserwatchListData: watchListActions.viewWatchList\n};\nconst connectedHomePage = connect(mapState, actionCreators)(withTranslation()(HomePageContainer));\nexport { connectedHomePage as HomePage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/HomePage/HomePage.jsx"],"names":["React","Component","connect","Image","Container","Segment","Card","Grid","Label","moment","withTranslation","shoppingCartConstants","SearchInput","postActions","shoppingCartActions","watchListActions","userActions","imageUrl","Slider","onSale","calculatePrice","DiscountCard","PostCard","post","i18n","HomePageContainer","addToCartBtnClicked","e","post_id","props","addToCart","SELLING_METHOD_BUY_NOW","handleClick","state","clicked","addToWatchList","removeFromWatchList","_id","renderImages","settings","dots","autoplay","autoplaySpeed","infinite","speed","slidesToShow","slidesToScroll","arrows","adaptiveHeight","images","map","image","height","width","renderDiscount","price","discount","title","sellingMethod","discount_value","discount_unit","salePrice","toLowerCase","includes","inWatchList","postId","watchlist","some","el","renderPosts","posts","length","timeZone","Date","getTimezoneOffset","checkdata","expiryDate","auction","endDate","timeWitUtc","utc","utcOffset","endAuctionDate","fromNow","renderUpToPosts","upToPosts","renderdiscountedPosts","discountedPosts","rendermostViewedPosts","mostViewedPosts","renderpostsWithMinQuantities","postsWithMinQuantities","renderEndingSoon","EndingSoonPosts","renderHotAuctionsPosts","HotAuctionsPosts","componentDidMount","document","body","dir","getUserwatchListData","status","user","id","getAllPosts","getUPTOPosts","getdiscountedPosts","getmostViewedPosts","getpostsWithMinQuantitiesPosts","getEndingSoonPosts","getHotAuctionsPosts","render","t","watchList","watchListData","margin","padding","cookies","mapState","ownProps","authentication","home","actionCreators","changeLanguage","setLanguage","getAll","getUpTo","getmostViewed","getpostsWithMinQuantities","getEndingSoon","getHotAuctions","addItemToCart","viewWatchList","connectedHomePage","HomePage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Image,\r\n  Container,\r\n  Segment,\r\n  Card,\r\n  Grid,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { shoppingCartConstants } from \"../../constants\";\r\nimport { SearchInput } from \"../../components/Search/SearchInput\";\r\nimport {\r\n  postActions,\r\n  shoppingCartActions,\r\n  watchListActions,\r\n  userActions\r\n} from \"../../actions\";\r\nimport { imageUrl } from \"../../config\";\r\nimport Slider from \"react-slick\";\r\nimport { onSale, calculatePrice } from \"../../helpers\";\r\nimport DiscountCard from \"../../components/Post/DiscountCard\";\r\nimport \"./HomePage.css\";\r\nimport { PostCard } from \"../PostCard\";\r\nimport { post } from \"../../reducers/post.reducer\";\r\nimport i18n from \"i18next\";\r\n\r\nexport class HomePageContainer extends Component {\r\n  async componentDidMount() {\r\n    document.body.dir = i18n.dir();\r\n    await this.props.getUserwatchListData(this.props.status.user.id);\r\n    await this.props.getAllPosts();\r\n    await this.props.getUPTOPosts();\r\n    await this.props.getdiscountedPosts();\r\n    await this.props.getmostViewedPosts();\r\n    await this.props.getpostsWithMinQuantitiesPosts();\r\n    await this.props.getEndingSoonPosts();\r\n    await this.props.getHotAuctionsPosts();\r\n  }\r\n\r\n  addToCartBtnClicked = (e, { post_id }) => {\r\n    this.props.addToCart(post_id, shoppingCartConstants.SELLING_METHOD_BUY_NOW);\r\n  };\r\n\r\n  // watchList icon handleClicked function\r\n  handleClick = (post) => {\r\n    this.state.clicked\r\n      ? this.addToWatchList(post)\r\n      : this.removeFromWatchList(post._id);\r\n  };\r\n\r\n  renderImages = (post) => {\r\n    const settings = {\r\n      dots: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 5000,\r\n      infinite: true,\r\n      speed: 1000,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      arrows: false,\r\n      adaptiveHeight: false,\r\n    };\r\n    return (\r\n      <Slider {...settings}>\r\n        {post.images.map((image) => {\r\n          return (\r\n            <div>\r\n              <Image\r\n                style={{ height: 200, width: 250 }}\r\n                centered\r\n                src={`${imageUrl}/${image}`}\r\n                size=\"small\"\r\n                rounded\r\n                wrapped\r\n                fluid\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  };\r\n\r\n  renderDiscount = (post) => {\r\n    const { price, discount, title, sellingMethod } = post;\r\n    const { discount_value, discount_unit } = discount;\r\n    const salePrice = calculatePrice(price, discount);\r\n    return (\r\n      <Card.Content>\r\n        {\r\n          <Label color=\"red\" ribbon>\r\n            {discount_value} {discount_unit === \"percentage\" ? \"%\" : \"LE\"} OFF\r\n          </Label>\r\n        }\r\n        <Card.Header>{`${title}`}</Card.Header>\r\n        {sellingMethod.toLowerCase().includes(\"buynow\") ? (\r\n          <React.Fragment>\r\n            <Card.Meta>\r\n              <strong>{`${salePrice} EGP`}</strong>\r\n            </Card.Meta>\r\n            <Card.Meta>\r\n              <strike>{`${price} EGP`}</strike>\r\n            </Card.Meta>\r\n          </React.Fragment>\r\n        ) : (\r\n          <Card.Meta> Auction Only </Card.Meta>\r\n        )}\r\n      </Card.Content>\r\n    );\r\n  };\r\n\r\n  inWatchList = (postId, watchlist) =>\r\n    watchlist.some((el) => el._id === postId);\r\n\r\n  renderPosts = (posts, watchlist = []) => {\r\n    return posts == null || posts.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Card.Group centered itemsPerRow={4} stackable>\r\n        {posts.map((post) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = post.expiryDate\r\n            ? post.expiryDate\r\n            : post.auction.endDate;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const endAuctionDate = timeWitUtc.fromNow();\r\n          return (\r\n            <PostCard\r\n              post={post}\r\n              renderImages={this.renderImages(post)}\r\n              onClick={this.handleClick}\r\n              endAuctionDate={endAuctionDate}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  };\r\n\r\n  renderUpToPosts = (upToPosts, watchlist = []) => {\r\n    return upToPosts == null || upToPosts.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Card.Group centered itemsPerRow={4} stackable>\r\n        {upToPosts.map((post) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = post.expiryDate\r\n            ? post.expiryDate\r\n            : post.auction.endDate;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const endAuctionDate = timeWitUtc.fromNow();\r\n          return (\r\n            <PostCard\r\n              post={post}\r\n              renderImages={this.renderImages(post)}\r\n              onClick={this.handleClick}\r\n              endAuctionDate={endAuctionDate}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  };\r\n  \r\n  renderdiscountedPosts = (discountedPosts, watchlist = []) => {\r\n    return discountedPosts == null || discountedPosts.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Card.Group centered itemsPerRow={4} stackable>\r\n        {discountedPosts.map((post) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = post.expiryDate\r\n            ? post.expiryDate\r\n            : post.auction.endDate;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const endAuctionDate = timeWitUtc.fromNow();\r\n          return (\r\n            <PostCard\r\n              post={post}\r\n              renderImages={this.renderImages(post)}\r\n              onClick={this.handleClick}\r\n              endAuctionDate={endAuctionDate}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  };\r\n\r\n  rendermostViewedPosts = (mostViewedPosts, watchlist = []) => {\r\n    return mostViewedPosts == null || mostViewedPosts.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Card.Group centered itemsPerRow={4} stackable>\r\n        {mostViewedPosts.map((post) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = post.expiryDate\r\n            ? post.expiryDate\r\n            : post.auction.endDate;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const endAuctionDate = timeWitUtc.fromNow();\r\n          return (\r\n            <PostCard\r\n              post={post}\r\n              renderImages={this.renderImages(post)}\r\n              onClick={this.handleClick}\r\n              endAuctionDate={endAuctionDate}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  };\r\n  renderpostsWithMinQuantities = (postsWithMinQuantities, watchlist = []) => {\r\n    return postsWithMinQuantities == null || postsWithMinQuantities.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Card.Group centered itemsPerRow={4} stackable>\r\n        {postsWithMinQuantities.map((post) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = post.expiryDate\r\n            ? post.expiryDate\r\n            : post.auction.endDate;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const endAuctionDate = timeWitUtc.fromNow();\r\n          return (\r\n            <PostCard\r\n              post={post}\r\n              renderImages={this.renderImages(post)}\r\n              onClick={this.handleClick}\r\n              endAuctionDate={endAuctionDate}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  };\r\n  \r\n\r\n  renderEndingSoon = (EndingSoonPosts, watchlist = []) => {\r\n    return EndingSoonPosts == null || EndingSoonPosts.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Card.Group centered itemsPerRow={4} stackable>\r\n        {EndingSoonPosts.map((post) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = post.expiryDate\r\n            ? post.expiryDate\r\n            : post.auction.endDate;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const endAuctionDate = timeWitUtc.fromNow();\r\n          return (\r\n            <PostCard\r\n              post={post}\r\n              renderImages={this.renderImages(post)}\r\n              onClick={this.handleClick}\r\n              endAuctionDate={endAuctionDate}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  };\r\n\r\n  renderHotAuctionsPosts = (HotAuctionsPosts, watchlist = []) => {\r\n    return HotAuctionsPosts == null || HotAuctionsPosts.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Card.Group centered itemsPerRow={4} stackable>\r\n        {HotAuctionsPosts.map((post) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = post.expiryDate\r\n            ? post.expiryDate\r\n            : post.auction.endDate;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const endAuctionDate = timeWitUtc.fromNow();\r\n          return (\r\n            <PostCard\r\n              post={post}\r\n              renderImages={this.renderImages(post)}\r\n              onClick={this.handleClick}\r\n              endAuctionDate={endAuctionDate}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      posts,\r\n      upToPosts,\r\n      mostViewedPosts,\r\n      discountedPosts,\r\n      postsWithMinQuantities,\r\n      EndingSoonPosts,\r\n      HotAuctionsPosts,\r\n      t\r\n    } = this.props;\r\n    const watchList = this.props.watchListData;\r\n\r\n    return (\r\n      <Container fluid style={{ margin: \"10px 50px\", padding: \"10px 50px\" }}>\r\n        <Grid columns={1}>\r\n          <Grid.Column>\r\n            <SearchInput cookies={this.props.cookies} />\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Segment>\r\n          <h1>{t(\"Up To Posts\")}</h1>\r\n          {this.renderUpToPosts(upToPosts, watchList)}\r\n        </Segment>\r\n        <Segment>\r\n          <h1>{t(\"Featured Posts\")}</h1>\r\n          {this.renderPosts(posts, watchList)}\r\n        </Segment>\r\n        <Segment>\r\n          <h1>{t(\"Attractive Discounts\")}</h1>\r\n          {this.renderdiscountedPosts(discountedPosts, watchList)}\r\n        </Segment>\r\n         <Segment>\r\n          <h1>{t(\"Top Viewed\")}</h1>\r\n          {this.rendermostViewedPosts(mostViewedPosts, watchList)}\r\n        </Segment>\r\n        <Segment>\r\n          <h1>{t(\"Posts with Min Quantities\")}</h1>\r\n          {this.renderpostsWithMinQuantities(postsWithMinQuantities, watchList)}\r\n        </Segment>\r\n        <Segment>\r\n          <h1>{t(\"Ending Soon\")}</h1>\r\n          {this.renderEndingSoon(EndingSoonPosts, watchList)}\r\n        </Segment>\r\n        <Segment>\r\n          <h1>{t(\"Hot Auctions\")}</h1>\r\n          {this.renderHotAuctionsPosts(HotAuctionsPosts, watchList)}\r\n        </Segment> \r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state, ownProps) {\r\n  const { user } = state.authentication;\r\n  const {\r\n    posts,\r\n    upToPosts,\r\n    discountedPosts,\r\n    mostViewedPosts,\r\n    postsWithMinQuantities,\r\n    EndingSoonPosts,\r\n    HotAuctionsPosts,\r\n  } = state.home;\r\n  const { watchListData } = state.watchList;\r\n  return {\r\n    posts,\r\n    watchListData,\r\n    upToPosts,\r\n    discountedPosts,\r\n    mostViewedPosts,\r\n    postsWithMinQuantities,\r\n    EndingSoonPosts,\r\n    HotAuctionsPosts,\r\n    status: { user },\r\n    cookies: ownProps.cookies,\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  changeLanguage: userActions.setLanguage,\r\n  getAllPosts: postActions.getAll,\r\n  getUPTOPosts: postActions.getUpTo,\r\n  getdiscountedPosts: postActions.getdiscountedPosts,\r\n  getmostViewedPosts: postActions.getmostViewed,\r\n  getpostsWithMinQuantitiesPosts: postActions.getpostsWithMinQuantities,\r\n  getEndingSoonPosts: postActions.getEndingSoon,\r\n  getHotAuctionsPosts: postActions.getHotAuctions,\r\n  addToCart: shoppingCartActions.addItemToCart,\r\n  getUserwatchListData: watchListActions.viewWatchList,\r\n};\r\n\r\nconst connectedHomePage = connect(mapState, actionCreators)(withTranslation()(HomePageContainer));\r\nexport { connectedHomePage as HomePage };\r\n"]},"metadata":{},"sourceType":"module"}