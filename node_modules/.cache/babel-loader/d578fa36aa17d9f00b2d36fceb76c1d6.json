{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/LoginPage/LoginPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { history } from '../../helpers';\nimport { authActions, validatorActions, userActions } from '../../actions';\nexport class LoginContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: '',\n      password: '',\n      submitted: false,\n      otp: ''\n    };\n    this.schema = {\n      \"required\": [\"phone\", \"password\"],\n      \"properties\": {\n        \"phone\": {\n          \"title\": \"Phone\",\n          \"type\": \"string\",\n          \"pattern\": \"^01[0-2|5]{1}[0-9]{8}$\"\n        },\n        \"password\": {\n          \"title\": \"Password\",\n          \"type\": \"string\",\n          \"minLength\": 8,\n          \"maxLength\": 1024\n        },\n        \"otp\": {\n          \"title\": \"OTP\",\n          \"type\": \"string\",\n          pattern: \"^[0-9]{4}$\"\n        }\n      }\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.props.validateInput(this.schema, name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        submitted: true\n      });\n      const {\n        phone,\n        password\n      } = this.state;\n      await this.props.validateForm(this.schema, {\n        phone,\n        password\n      });\n      this.setState({\n        submitted: false\n      });\n      if (!this.props.valid) return;\n      await this.props.login(phone, password);\n    };\n\n    this.resendOTP = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const phone = this.state.phone ? this.state.phone : this.props.user.phone;\n      await this.props.resendOTP(phone);\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleSubmitOTP = async e => {\n      e.preventDefault();\n      if (this.props.errors.otp) return;\n      this.setState({\n        submitted: false\n      });\n      await this.props.submitOTP(this.state.otp, this.props.user.phone);\n      history.push('/');\n    };\n  }\n\n  ResendAlert(alert) {\n    if (alert && alert.type === 'error' && (alert.header.includes('token') || alert.header.includes('not verified') || alert.header.includes('OTP'))) {\n      return /*#__PURE__*/React.createElement(Message, {\n        error: alert.type === 'error',\n        header: alert.header,\n        content: alert.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, alert.header, \"\\xA0\", /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        onClick: this.resendOTP,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, \"Send OTP\"), \"\\xA0\");\n    }\n  }\n\n  render() {\n    const {\n      loggingIn,\n      errors,\n      alert,\n      verified\n    } = this.props;\n    const {\n      phone,\n      password,\n      submitted,\n      otp\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \" \", 'Login'), alert && alert.header && (this.ResendAlert(alert) || /*#__PURE__*/React.createElement(Message, {\n      error: alert.type === 'error',\n      success: alert.type === 'success',\n      header: alert.header,\n      content: alert.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), verified ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      loading: loggingIn || submitted,\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      name: \"phone\",\n      size: \"large\",\n      icon: \"phone\",\n      iconPosition: \"left\",\n      placeholder: \"01122334455\",\n      value: phone,\n      onChange: this.handleChange,\n      error: errors && errors.phone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      name: \"password\",\n      size: \"large\",\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      value: password,\n      type: \"password\",\n      onChange: this.handleChange,\n      error: errors && errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      label: {\n        children: 'Copyright Â© 2020 Mazadat by Techtag LLC All rights reserved'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/password/forget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }\n    }, \" Forget Password \"))) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmitOTP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      name: \"otp\",\n      size: \"large\",\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"******\",\n      value: otp,\n      onChange: this.handleChange,\n      error: errors && errors.otp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, \"Submit OTP\"))), /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      onClick: this.resendOTP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Resend OTP\"))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  const {\n    loggingIn,\n    user\n  } = state.authentication;\n  const {\n    valid,\n    errors\n  } = state.validation;\n  const {\n    verified,\n    language\n  } = state.users;\n  return {\n    verified,\n    language,\n    user,\n    loggingIn,\n    valid,\n    errors,\n    alert\n  };\n}\n\nconst actionCreators = {\n  login: authActions.login,\n  submitOTP: userActions.submitOTP,\n  resendOTP: userActions.resendOTP,\n  validateInput: validatorActions.validateInput,\n  validateForm: validatorActions.validateForm\n};\nconst connectedLoginPage = connect(mapState, actionCreators)(LoginContainer);\nexport { connectedLoginPage as LoginPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/LoginPage/LoginPage.jsx"],"names":["React","Component","connect","Button","Form","Grid","Header","Message","Segment","Link","history","authActions","validatorActions","userActions","LoginContainer","state","phone","password","submitted","otp","schema","pattern","handleChange","e","name","value","props","validateInput","setState","handleSubmit","preventDefault","validateForm","valid","login","resendOTP","loading","user","handleSubmitOTP","errors","submitOTP","push","ResendAlert","alert","type","header","includes","content","render","loggingIn","verified","height","maxWidth","children","mapState","authentication","validation","language","users","actionCreators","connectedLoginPage","LoginPage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button, Form, Grid, Header, Message, Segment} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {history} from '../../helpers';\r\nimport {authActions, validatorActions, userActions} from '../../actions';\r\n\r\nexport class LoginContainer extends Component {\r\n  state = {phone: '', password: '', submitted: false, otp: ''};\r\n  schema = {\r\n    \"required\": [\"phone\", \"password\"],\r\n    \"properties\": {\r\n      \"phone\": {\r\n        \"title\": \"Phone\",\r\n        \"type\": \"string\",\r\n        \"pattern\": \"^01[0-2|5]{1}[0-9]{8}$\",\r\n      }, \"password\": {\r\n        \"title\": \"Password\",\r\n        \"type\": \"string\",\r\n        \"minLength\": 8,\r\n        \"maxLength\": 1024\r\n      }, \"otp\": {\r\n        \"title\": \"OTP\",\r\n        \"type\": \"string\",\r\n        pattern: \"^[0-9]{4}$\",\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (e, {name, value}) => {\r\n    this.props.validateInput(this.schema, name, value);\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({submitted: true});\r\n    const { phone, password } = this.state;\r\n    await this.props.validateForm(this.schema, {phone, password});\r\n    this.setState({submitted: false});\r\n    if (!this.props.valid) return;\r\n    await this.props.login(phone, password);\r\n  };\r\n\r\n  resendOTP = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    const phone = this.state.phone ? this.state.phone : this.props.user.phone;\r\n    await this.props.resendOTP(phone);\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  handleSubmitOTP = async (e) => {\r\n    e.preventDefault();\r\n    if (this.props.errors.otp) return;\r\n    this.setState({submitted: false});\r\n    await this.props.submitOTP(this.state.otp, this.props.user.phone);\r\n    history.push('/');\r\n  }\r\n\r\n  ResendAlert(alert) {\r\n      if (alert && alert.type === 'error' && (alert.header.includes('token') || alert.header.includes('not verified') || alert.header.includes('OTP'))) {\r\n          return (\r\n              <Message\r\n              error={alert.type === 'error'}\r\n              header={alert.header}\r\n              content={alert.content}\r\n          >\r\n            {alert.header}&nbsp;<Link to='#' onClick={this.resendOTP}>Send OTP</Link>&nbsp;\r\n          </Message>\r\n\r\n          )\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const {loggingIn, errors, alert, verified } = this.props;\r\n    const {phone, password, submitted, otp} = this.state;\r\n\r\n    return (\r\n      <Grid textAlign='center' style={{height: '100vh'}} verticalAlign='middle'>\r\n        <Grid.Column style={{maxWidth: 450}}>\r\n          <Header as='h2' color='teal' textAlign='center'> {'Login'}</Header>\r\n         \r\n          { alert && alert.header &&\r\n            (this.ResendAlert(alert) ||\r\n            <Message \r\n                error={alert.type === 'error'}\r\n                success={alert.type === 'success'}\r\n                header={alert.header}\r\n                content={alert.content}\r\n            >\r\n                {/* {alert.header}\r\n                <Button icon='redo'/> */}\r\n            </Message>)\r\n\r\n          }\r\n          {verified ? \r\n          \r\n          (<React.Fragment>\r\n            <Form loading={loggingIn || submitted} size='large' onSubmit={this.handleSubmit}>\r\n              <Segment>\r\n                <Form.Input name='phone' size='large' icon='phone' iconPosition='left'\r\n                            placeholder='01122334455' value={phone} onChange={this.handleChange}\r\n                            error={errors && errors.phone}/>\r\n  \r\n                <Form.Input name='password' size='large' icon='lock' iconPosition='left' placeholder='Password'\r\n                            value={password} type='password' onChange={this.handleChange}\r\n                            error={errors && errors.password}/>\r\n  \r\n                <Form.Field\r\n                  label={{ children: 'Copyright Â© 2020 Mazadat by Techtag LLC All rights reserved' }}\r\n                />\r\n                <Button color='teal' fluid>Login</Button>\r\n              </Segment>\r\n            </Form>\r\n            <Message><Link to='/password/forget'> Forget Password </Link></Message>\r\n          </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Form size='large' onSubmit={this.handleSubmitOTP}>\r\n                <Segment>\r\n                  <Form.Input name='otp' size='large' icon='lock' iconPosition='left'\r\n                              placeholder='******' value={otp} onChange={this.handleChange}\r\n                              error={errors && errors.otp}/>\r\n    \r\n                  <Button color='teal' fluid>Submit OTP</Button>\r\n                </Segment>\r\n              </Form>\r\n              <Button color='red' onClick={this.resendOTP}>Resend OTP</Button>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {/* removed due to invitation */}\r\n          {/* <Message>Don't have an account? <Link to='/register'>Register</Link></Message> */}\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const {alert} = state;\r\n  const {loggingIn, user} = state.authentication;\r\n  const {valid, errors} = state.validation;\r\n  const {verified, language} = state.users\r\n  return {verified, language, user, loggingIn, valid, errors, alert};\r\n}\r\n\r\nconst actionCreators = {\r\n  login: authActions.login,\r\n  submitOTP: userActions.submitOTP,\r\n  resendOTP: userActions.resendOTP,\r\n  validateInput: validatorActions.validateInput,\r\n  validateForm: validatorActions.validateForm,\r\n};\r\nconst connectedLoginPage = connect(mapState, actionCreators)(LoginContainer);\r\nexport {connectedLoginPage as LoginPage};\r\n"]},"metadata":{},"sourceType":"module"}