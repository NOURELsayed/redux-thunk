{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/QuestionsContainer/QuestionsContainerAsBuyer.jsx\";\nimport React, { Component } from \"react\";\nimport { Comment, Form, Button } from \"semantic-ui-react\";\nimport TimeAgo from \"react-timeago\";\nexport class QuestionsContainerAsBuyer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  handleQuestionClick(obj) {\n    const questionObj = { ...obj,\n      question: this.state.question\n    };\n    this.props.ask(questionObj);\n  }\n\n  handleChange(e) {\n    this.setState({\n      question: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      questions,\n      sellerUsername,\n      sellerAvatar\n    } = this.props;\n    const {\n      userId\n    } = this.props;\n    const {\n      postId\n    } = this.props;\n    const render = questions && questions.map((question, i) => {\n      return /*#__PURE__*/React.createElement(Comment.Group, {\n        key: question._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n        as: \"a\",\n        src: question.user.avatar ? question.user.avatar : 'https://react.semantic-ui.com/images/wireframe/image.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, question.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TimeAgo, {\n        date: question.createdAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Comment.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, question.question), question.answer && /*#__PURE__*/React.createElement(Comment.Group, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n        as: \"a\",\n        src: sellerAvatar ? sellerAvatar : 'https://react.semantic-ui.com/images/wireframe/image.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }, \"Seller: \", sellerUsername), /*#__PURE__*/React.createElement(Comment.Metadata, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TimeAgo, {\n        date: question.answerDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Comment.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, question.answer)))))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, render, /*#__PURE__*/React.createElement(Comment.Group, {\n      key: \"._id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      style: {\n        width: \"3000px\",\n        hight: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.TextArea, {\n      onChange: text => this.handleChange(text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"mini\",\n      content: \"Ask\",\n      icon: \"edit\",\n      primary: true,\n      onClick: event => this.handleQuestionClick({\n        user: userId,\n        post: postId\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/QuestionsContainer/QuestionsContainerAsBuyer.jsx"],"names":["React","Component","Comment","Form","Button","TimeAgo","QuestionsContainerAsBuyer","state","handleQuestionClick","obj","questionObj","question","props","ask","handleChange","e","setState","target","value","render","questions","sellerUsername","sellerAvatar","userId","postId","map","i","_id","user","avatar","username","createdAt","answer","answerDate","width","hight","text","event","post"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Comment, Form, Button } from \"semantic-ui-react\";\r\nimport TimeAgo from \"react-timeago\";\r\n\r\nexport class QuestionsContainerAsBuyer extends Component {\r\n  state = {};\r\n\r\n  handleQuestionClick(obj) {\r\n    const questionObj = {\r\n      ...obj,\r\n      question: this.state.question\r\n    };\r\n\r\n    this.props.ask(questionObj);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      question: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { questions, sellerUsername, sellerAvatar } = this.props;\r\n    const { userId } = this.props;\r\n    const { postId } = this.props;\r\n\r\n    const render = questions && questions.map((question, i) => {\r\n      return (\r\n        <Comment.Group key={question._id}>\r\n          <Comment>\r\n            <Comment.Avatar\r\n              as=\"a\"\r\n              src={question.user.avatar ? question.user.avatar : 'https://react.semantic-ui.com/images/wireframe/image.png'}\r\n            />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">\r\n                {question.user.username}\r\n              </Comment.Author>\r\n              <Comment.Metadata>\r\n                <span>\r\n                  <TimeAgo date={question.createdAt} />\r\n                </span>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{question.question}</Comment.Text>\r\n              {question.answer && (\r\n                <Comment.Group key={i}>\r\n                  <Comment>\r\n                    <Comment.Avatar\r\n                      as=\"a\"\r\n                      src={sellerAvatar ? sellerAvatar : 'https://react.semantic-ui.com/images/wireframe/image.png'}\r\n                    />\r\n                    <Comment.Content>\r\n                      <Comment.Author as=\"a\">Seller: {sellerUsername}</Comment.Author>\r\n                      <Comment.Metadata>\r\n                        <div>\r\n                          <TimeAgo date={question.answerDate} />\r\n                        </div>\r\n                      </Comment.Metadata>\r\n                      <Comment.Text>{question.answer}</Comment.Text>\r\n                    </Comment.Content>\r\n                  </Comment>\r\n                </Comment.Group>\r\n              )}\r\n            </Comment.Content>\r\n          </Comment>\r\n        </Comment.Group>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        {render}\r\n        \r\n        <Comment.Group key={\"._id\"}>\r\n          <Comment>\r\n            <Comment.Actions>\r\n              <Form style={{ width: \"3000px\", hight: \"20px\" }}>\r\n                <Form.TextArea onChange={text => this.handleChange(text)} />\r\n                <Button\r\n                  size=\"mini\"\r\n                  content=\"Ask\"\r\n                  icon=\"edit\"\r\n                  primary\r\n                  onClick={event =>\r\n                    this.handleQuestionClick({ user: userId, post: postId })\r\n                  }\r\n                />\r\n              </Form>\r\n            </Comment.Actions>\r\n          </Comment>\r\n        </Comment.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}