{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/App/App.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authActions } from '../../actions'; // import { Container } from './styles';\n\nclass AppContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  componentDidMount(email, password) {\n    console.log(\"sssssssss\"); //  this.props.login(email, password)\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: false\n    });\n    const {\n      email,\n      password\n    } = this.state;\n    console.log(\"this.state\", this.state);\n    this.props.login(email, password);\n  }\n\n  render() {\n    const {\n      logginIn\n    } = this.props;\n    const {\n      email,\n      password,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  const {\n    loggingIn,\n    user\n  } = state.authentication;\n  console.log(\"authentication\", state.authentication);\n  console.log(\"loggingIn, user\", loggingIn, user);\n  return {\n    user,\n    loggingIn,\n    alert\n  };\n}\n\nconst actionCreators = {\n  login: authActions.login\n};\nconst connectedApp = connect(mapState, actionCreators)(AppContainer);\nexport { connectedApp as App };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/App/App.jsx"],"names":["React","Component","connect","authActions","AppContainer","constructor","state","email","password","handleChange","bind","evt","setState","target","name","value","componentDidMount","console","log","handleSubmit","e","preventDefault","submitted","props","login","render","logginIn","mapState","alert","loggingIn","user","authentication","actionCreators","connectedApp","App"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B,C,CACA;;AAIA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAAEE,GAAF,EAAO;AACjB;AACA;AACA,SAAKC,QAAL,CAAc;AAAE,OAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,GAAmBH,GAAG,CAACE,MAAJ,CAAWE;AAAhC,KAAd;AACD;;AAEDC,EAAAA,iBAAiB,CAACT,KAAD,EAAQC,QAAR,EAAiB;AAChCS,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADgC,CAEhC;AAED;;AACDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKT,QAAL,CAAc;AAACU,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACA,UAAM;AAACf,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoB,KAAKF,KAA/B;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKZ,KAA/B;AACA,SAAKiB,KAAL,CAAWC,KAAX,CAAiBjB,KAAjB,EAAwBC,QAAxB;AACC;;AAECiB,EAAAA,MAAM,GAAI;AACR,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKH,KAAvB;AACA,UAAM;AAAChB,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBc,MAAAA;AAAlB,QAA+B,KAAKhB,KAA1C;AACE,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAEC,KAA3B;AAAkC,MAAA,QAAQ,EAAE,KAAKE,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAED,QAA9C;AAAwD,MAAA,QAAQ,EAAE,KAAKC,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGA;AAAQ,MAAA,OAAO,EAAE,KAAKU,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,CADF;AAOH;;AAvCgC;;AAyCrC,SAASQ,QAAT,CAAkBrB,KAAlB,EAAyB;AACvB,QAAM;AAACsB,IAAAA;AAAD,MAAUtB,KAAhB;AACA,QAAM;AAACuB,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAoBxB,KAAK,CAACyB,cAAhC;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BZ,KAAK,CAACyB,cAAnC;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BW,SAA9B,EAAyCC,IAAzC;AACA,SAAO;AAACA,IAAAA,IAAD;AAAOD,IAAAA,SAAP;AAAkBD,IAAAA;AAAlB,GAAP;AACD;;AAED,MAAMI,cAAc,GAAG;AACrBR,EAAAA,KAAK,EAAErB,WAAW,CAACqB;AADE,CAAvB;AAIA,MAAMS,YAAY,GAAG/B,OAAO,CAACyB,QAAD,EAAWK,cAAX,CAAP,CAAkC5B,YAAlC,CAArB;AACA,SAAQ6B,YAAY,IAAIC,GAAxB","sourcesContent":["\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {authActions} from '../../actions'\r\n// import { Container } from './styles';\r\n\r\n\r\n\r\nclass AppContainer extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange (evt) {\r\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\r\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  }\r\n\r\n  componentDidMount(email, password){\r\n    console.log(\"sssssssss\");\r\n    //  this.props.login(email, password)\r\n\r\n  }\r\n  handleSubmit(e) {\r\n  e.preventDefault()\r\n  this.setState({submitted: false})\r\n  const {email, password} = this.state;\r\n  console.log(\"this.state\", this.state);\r\n  this.props.login(email, password)\r\n  };\r\n\r\n    render () {\r\n      const {logginIn} =this.props;\r\n      const {email, password, submitted} = this.state;\r\n        return (\r\n          <div>\r\n            <input name=\"email\" value={email} onChange={this.handleChange}/>\r\n            <input name=\"password\" type=\"password\" value={password} onChange={this.handleChange}/>\r\n          <button onClick={this.handleSubmit}>Submit</button>\r\n          </div>\r\n        );\r\n    };\r\n}\r\nfunction mapState(state) {\r\n  const {alert} = state;\r\n  const {loggingIn, user} = state.authentication;\r\n  console.log(\"authentication\",state.authentication);\r\n  console.log(\"loggingIn, user\",loggingIn, user);\r\n  return {user, loggingIn, alert};\r\n}\r\n\r\nconst actionCreators = {\r\n  login: authActions.login,\r\n\r\n};\r\nconst connectedApp = connect(mapState, actionCreators)(AppContainer);\r\nexport {connectedApp as App};\r\n\r\n"]},"metadata":{},"sourceType":"module"}