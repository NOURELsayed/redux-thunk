{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ShoppingCart/ShoppingCartItem.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { shoppingCartActions } from '../../actions';\nimport { shoppingCartConstants } from '../../constants';\nimport { Link } from 'react-router-dom';\nimport { Button, Grid, Label, Item, Dropdown, List, Image } from 'semantic-ui-react';\nimport { imageUrl } from \"../../config\";\nimport { onSale, calculatePrice } from '../../helpers';\nimport DiscountLabel from '../../components/Post/DiscountLabel';\n\nclass ShoppingCartItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quantityChanged: false\n    };\n\n    this.removeItem = (e, {\n      post_id\n    }) => {\n      this.props.removeItem(post_id);\n    };\n\n    this.itemQuantityChanged = (e, {\n      value,\n      oldvalue,\n      post_id\n    }) => {\n      this.props.itemQuantityChanged(post_id, parseInt(value) - parseInt(oldvalue), shoppingCartConstants.SELLING_METHOD_BUY_NOW);\n    };\n\n    this.getFirstImageURL = post => {\n      if (post && post.images && post.images.length > 0) {\n        return `${imageUrl}/${post.images[0]}`;\n      }\n\n      return 'https://react.semantic-ui.com/images/wireframe/image.png';\n    };\n\n    this.finalPrice = ({\n      price,\n      discount\n    }) => onSale(discount) ? calculatePrice(price, discount) : price;\n  }\n\n  getQuantityDropdownItems(maximum) {\n    let items = [];\n\n    for (let i = 1; i <= maximum; i++) {\n      items.push({\n        key: i,\n        text: '' + i,\n        value: i\n      });\n    }\n\n    return items;\n  }\n\n  render() {\n    const item = this.props.item;\n\n    if (item.post.availableQuantity < item.quantity && item.post.availableQuantity !== 0) {\n      this.props.itemQuantityChanged(item.post._id, parseInt(item.post.availableQuantity) - parseInt(item.quantity), shoppingCartConstants.SELLING_METHOD_BUY_NOW);\n      item.quantity = item.post.availableQuantity;\n      this.setState({\n        quantityChanged: true\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Item, {\n      key: item.post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      size: \"tiny\",\n      src: this.getFirstImageURL(item.post),\n      as: Link,\n      to: `/post/${item.post._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DiscountLabel, {\n      post: item.post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, item.post.status === 'standBy' && /*#__PURE__*/React.createElement(Item.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: \"red\",\n      size: \"large\",\n      style: {\n        marginLeft: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"This item is no longer available\")), /*#__PURE__*/React.createElement(Item.Header, {\n      as: Link,\n      to: `/post/${item.post._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, item.post.title), /*#__PURE__*/React.createElement(Item.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 45\n      }\n    }, \"Price Per Item\"), onSale(item.post.discount) ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 49\n      }\n    }, `${calculatePrice(item.post.price, item.post.discount)} EGP`, \" \", /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 115\n      }\n    }, item.post.price, \" EGP\")) : `${item.post.price} EGP`), /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    }, \"Total Price\"), onSale(item.post.discount) ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }, `${calculatePrice(item.post.price, item.post.discount) * item.quantity} EGP`, \" \", /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 131\n      }\n    }, item.post.price * item.quantity, \" EGP\")) : `${item.post.price * item.quantity} EGP`), /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 45\n      }\n    }, \"Sold By\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/user/${item.post.seller}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, \"View Profile\")), /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }, \"Condition\"), `${item.post.condition}`), item.post.status !== 'standBy' && /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, \"Quantity\"), this.props.readOnly ? /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 45\n      }\n    }, item.quantity) : item.post.availableQuantity > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      search: true,\n      compact: true,\n      selection: true,\n      oldvalue: item.quantity,\n      post_id: item.post._id,\n      onChange: this.itemQuantityChanged,\n      value: item.quantity,\n      options: this.getQuantityDropdownItems(item.post.availableQuantity),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 65\n      }\n    }), \" \", this.state.quantityChanged && /*#__PURE__*/React.createElement(Label, {\n      basic: true,\n      color: \"red\",\n      pointing: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 87\n      }\n    }, \" Updated due to limited quantity ! \")) : /*#__PURE__*/React.createElement(Label, {\n      color: \"red\",\n      tag: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 56\n      }\n    }, \"Sold Out\")), /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, !this.props.readOnly && /*#__PURE__*/React.createElement(Button, {\n      negative: true,\n      fluid: true,\n      onClick: this.removeItem,\n      post_id: item.post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 49\n      }\n    }, \"Remove\")))))))));\n  }\n\n}\n\nfunction mapState(state) {\n  return { ...state\n  };\n}\n\nconst actionCreators = {\n  removeItem: shoppingCartActions.removeItem,\n  itemQuantityChanged: shoppingCartActions.itemQuantityChanged\n};\nconst connectedShoppingCartItem = connect(mapState, actionCreators)(ShoppingCartItem);\nexport { connectedShoppingCartItem as ShoppingCartItem };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ShoppingCart/ShoppingCartItem.jsx"],"names":["React","Component","connect","shoppingCartActions","shoppingCartConstants","Link","Button","Grid","Label","Item","Dropdown","List","Image","imageUrl","onSale","calculatePrice","DiscountLabel","ShoppingCartItem","state","quantityChanged","removeItem","e","post_id","props","itemQuantityChanged","value","oldvalue","parseInt","SELLING_METHOD_BUY_NOW","getFirstImageURL","post","images","length","finalPrice","price","discount","getQuantityDropdownItems","maximum","items","i","push","key","text","render","item","availableQuantity","quantity","_id","setState","status","marginLeft","title","seller","condition","readOnly","mapState","actionCreators","connectedShoppingCartItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { shoppingCartActions } from '../../actions';\r\nimport { shoppingCartConstants } from '../../constants';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Grid, Label, Item, Dropdown, List ,Image} from 'semantic-ui-react';\r\nimport { imageUrl } from \"../../config\";\r\nimport { onSale, calculatePrice } from '../../helpers';\r\nimport DiscountLabel from '../../components/Post/DiscountLabel';\r\n\r\nclass ShoppingCartItem extends Component {\r\n    state = {quantityChanged:false};\r\n    removeItem = (e, { post_id }) => {\r\n        this.props.removeItem(post_id);\r\n    };\r\n    itemQuantityChanged = (e, { value, oldvalue, post_id }) => {\r\n        this.props.itemQuantityChanged(\r\n            post_id,\r\n            parseInt(value) - parseInt(oldvalue),\r\n            shoppingCartConstants.SELLING_METHOD_BUY_NOW,\r\n        );\r\n    };\r\n    \r\n    getQuantityDropdownItems(maximum) {\r\n        let items = [];\r\n        for (let i = 1; i <= maximum; i++) {\r\n            items.push({ key: i, text: '' + i, value: i });\r\n        }\r\n        return items;\r\n    }\r\n\r\n    getFirstImageURL = (post) => {\r\n\r\n        if (post && post.images && post.images.length > 0) {\r\n            return `${imageUrl}/${post.images[0]}`;\r\n        }\r\n        return 'https://react.semantic-ui.com/images/wireframe/image.png';\r\n\r\n    }\r\n\r\n    finalPrice = ({ price, discount }) => onSale(discount) ? calculatePrice(price, discount) : price;\r\n\r\n    render() {\r\n        const item = this.props.item;        \r\n        if(item.post.availableQuantity<item.quantity && item.post.availableQuantity!==0)\r\n        {\r\n            this.props.itemQuantityChanged(\r\n                item.post._id,\r\n                parseInt(item.post.availableQuantity) - parseInt(item.quantity),\r\n                shoppingCartConstants.SELLING_METHOD_BUY_NOW,\r\n            );          \r\n            item.quantity=item.post.availableQuantity;  \r\n            this.setState({quantityChanged:true})   \r\n        }\r\n        return (\r\n            <Item key={item.post._id}>\r\n                <Image\r\n                    size='tiny'\r\n                    src={this.getFirstImageURL(item.post)}\r\n                    as={ Link } to={`/post/${item.post._id}`}\r\n                />\r\n                <DiscountLabel post={item.post} />\r\n                <Item.Content>\r\n                    {item.post.status === 'standBy' &&\r\n                    <Item.Meta>\r\n                        <Label color=\"red\" size=\"large\" style={{marginLeft: '50px'}}>\r\n                            This item is no longer available\r\n                        </Label>\r\n                    </Item.Meta>}\r\n                    <Item.Header as={ Link } to={`/post/${item.post._id}`}>{item.post.title}</Item.Header> \r\n                    <Item.Meta></Item.Meta>\r\n                    <Item.Description>\r\n                        <Grid columns={2}>\r\n                            <Grid.Row>\r\n                                <Grid.Column width='10'>\r\n                                    <List divided>\r\n                                        <List.Item>\r\n                                            <Label horizontal>\r\n                                                Price Per Item\r\n                                            </Label>\r\n                                            { \r\n                                                onSale(item.post.discount) ? \r\n                                                <React.Fragment>\r\n                                                   {`${calculatePrice(item.post.price, item.post.discount)} EGP`} <strike>{item.post.price} EGP</strike>\r\n                                                </React.Fragment>\r\n                                                : `${item.post.price} EGP`\r\n                                            }\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <Label horizontal>\r\n                                                Total Price\r\n                                            </Label>\r\n                                            { \r\n                                                onSale(item.post.discount) ? \r\n                                                <React.Fragment>\r\n                                                   {`${calculatePrice(item.post.price, item.post.discount) * item.quantity} EGP`} <strike>{item.post.price * item.quantity} EGP</strike>\r\n                                                </React.Fragment>\r\n                                                : `${item.post.price * item.quantity} EGP`\r\n                                            }\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <Label horizontal>\r\n                                                Sold By\r\n                                            </Label>\r\n                                            <Link to={`/user/${item.post.seller}`}>View Profile</Link>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <Label horizontal>Condition</Label>\r\n                                            {`${item.post.condition}`}\r\n                                        </List.Item>\r\n                                        {item.post.status !== 'standBy' &&\r\n                                        <List.Item>\r\n                                        <Label >Quantity</Label>\r\n                                        {this.props.readOnly ? (\r\n                                            <Label>{item.quantity}</Label>\r\n                                        ) : (item.post.availableQuantity>0?(\r\n                                                <React.Fragment><Dropdown\r\n                                                    search\r\n                                                    compact\r\n                                                    selection\r\n                                                    oldvalue={item.quantity}\r\n                                                    post_id={item.post._id}\r\n                                                    onChange={\r\n                                                        this.itemQuantityChanged\r\n                                                    }\r\n                                                    value={item.quantity}\r\n                                                    options={this.getQuantityDropdownItems(\r\n                                                        item.post.availableQuantity,\r\n                                                    )}\r\n                                                    /> { this.state.quantityChanged &&<Label basic color='red' pointing='left'> Updated due to limited quantity ! </Label>}\r\n                                                    </React.Fragment>\r\n                                                    ):(<Label  color='red' tag>Sold Out</Label>))\r\n                                            }\r\n                                        </List.Item>}\r\n                                        <List.Item>\r\n                                            {!this.props.readOnly &&\r\n                                                <Button negative fluid onClick={this.removeItem} post_id={item.post._id}>Remove</Button>\r\n                                            }\r\n                                        </List.Item>\r\n                                    </List>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Item.Description>\r\n                </Item.Content>\r\n            </Item>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    return {\r\n        ...state,\r\n    };\r\n}\r\n\r\nconst actionCreators = {\r\n    removeItem: shoppingCartActions.removeItem,\r\n    itemQuantityChanged: shoppingCartActions.itemQuantityChanged,\r\n};\r\n\r\nconst connectedShoppingCartItem = connect(\r\n    mapState,\r\n    actionCreators,\r\n)(ShoppingCartItem);\r\n\r\nexport { connectedShoppingCartItem as ShoppingCartItem };\r\n"]},"metadata":{},"sourceType":"module"}