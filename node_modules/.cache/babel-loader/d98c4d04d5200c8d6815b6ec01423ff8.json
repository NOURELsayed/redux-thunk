{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/Reviews.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Segment, Tab, Label, Icon, Rating, Table } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport { userActions } from '../../actions';\n\nclass Reviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviewsAsSeller: [],\n      reviewsAsBuyer: [],\n      reviewsForOthers: [],\n      column: null,\n      data: [],\n      direction: null\n    };\n\n    this.handleSort = (clickedColumn, type) => () => {\n      const {\n        reviewsAsBuyer,\n        reviewsAsSeller,\n        reviewsForOthers,\n        column,\n        direction\n      } = this.state;\n\n      if (column !== clickedColumn) {\n        switch (type) {\n          case 'buyer':\n            this.setState({\n              column: clickedColumn,\n              reviewsAsBuyer: _.sortBy(reviewsAsBuyer, [clickedColumn]),\n              direction: 'ascending'\n            });\n            break;\n\n          case 'seller':\n            this.setState({\n              column: clickedColumn,\n              reviewsAsSeller: _.sortBy(reviewsAsSeller, [clickedColumn]),\n              direction: 'ascending'\n            });\n            break;\n\n          default:\n            this.setState({\n              column: clickedColumn,\n              reviewsForOthers: _.sortBy(reviewsForOthers, [clickedColumn]),\n              direction: 'ascending'\n            });\n            break;\n        }\n\n        return;\n      }\n\n      switch (type) {\n        case 'buyer':\n          this.setState({\n            reviewsAsBuyer: reviewsAsBuyer.reverse(),\n            direction: direction === 'ascending' ? 'descending' : 'ascending'\n          });\n          break;\n\n        case 'seller':\n          this.setState({\n            reviewsAsSeller: reviewsAsSeller.reverse(),\n            direction: direction === 'ascending' ? 'descending' : 'ascending'\n          });\n          break;\n\n        default:\n          this.setState({\n            reviewsForOthers: reviewsForOthers.reverse(),\n            direction: direction === 'ascending' ? 'descending' : 'ascending'\n          });\n          break;\n      }\n    };\n\n    this.getStarsRating = number => /*#__PURE__*/React.createElement(Rating, {\n      icon: \"star\",\n      defaultRating: number,\n      maxRating: 5,\n      size: \"large\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }\n    });\n\n    this.renderTable = (reviews, type) => {\n      const {\n        column,\n        direction\n      } = this.state;\n      return /*#__PURE__*/React.createElement(Table, {\n        sortable: true,\n        celled: true,\n        padded: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        sorted: column === 'feedback' ? direction : null,\n        onClick: this.handleSort('feedback', type),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"Feedback\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, type === 'left' ? 'To' : 'From'), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        sorted: column === 'date' ? direction : null,\n        onClick: this.handleSort('updatedAt', type),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, \"Date\"), type !== 'buyer' && /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        sorted: column === 'feedback' ? direction : null,\n        onClick: this.handleSort('sellerRating.postDescription', type),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 36\n        }\n      }, \"Post Description\"), type !== 'buyer' && /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        sorted: column === 'feedback' ? direction : null,\n        onClick: this.handleSort('sellerRating.communication', type),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 36\n        }\n      }, \"Communication\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"Comments\"))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, reviews.map(review => /*#__PURE__*/React.createElement(Table.Row, {\n        key: review._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, review.feedback === 1 ? /*#__PURE__*/React.createElement(Icon, {\n        name: \"thumbs up outline\",\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 82\n        }\n      }) : /*#__PURE__*/React.createElement(Icon, {\n        name: \"thumbs down outline\",\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 131\n        }\n      })), /*#__PURE__*/React.createElement(Table.Cell, {\n        singleLine: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, \"***\", type === 'left' ? review.reviewee.slice(-3) : review.reviewer.slice(-3), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        to: `order/${review.order}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, \"View Order\")), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, new Date(review.updatedAt).toLocaleDateString(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }), new Date(review.updatedAt).toLocaleTimeString()), type !== 'buyer' && /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 46\n        }\n      }, review.revieweeType === 'seller' && /*#__PURE__*/React.createElement(Rating, {\n        icon: \"star\",\n        defaultRating: review.sellerRating.postDescription,\n        maxRating: 5,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 95\n        }\n      })), type !== 'buyer' && /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 46\n        }\n      }, review.revieweeType === 'seller' && /*#__PURE__*/React.createElement(Rating, {\n        icon: \"star\",\n        defaultRating: review.sellerRating.communication,\n        maxRating: 5,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 95\n        }\n      })), /*#__PURE__*/React.createElement(Table.Cell, {\n        textAlign: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, review.text || '---')))));\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.handleDisplayReviewsAsBuyerClicked(this.props.user.id);\n    await this.props.handleDisplayReviewsForOthersClicked(this.props.user.id); // No need to retrieve the seller reviews since we retrieve them on clicking the review tab\n\n    this.setState({\n      reviewsAsSeller: this.props.reviewsAsSeller,\n      reviewsAsBuyer: this.props.reviewsAsBuyer,\n      reviewsForOthers: this.props.reviewsForOthers\n    });\n  }\n\n  render() {\n    const {\n      reviewsAsSeller,\n      reviewsAsBuyer,\n      reviewsForOthers\n    } = this.state;\n    const panes = [{\n      menuItem: 'As Seller',\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        attached: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, reviewsAsSeller && reviewsAsSeller.length > 0 ? this.renderTable(reviewsAsSeller, 'seller') : /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, \"No Reviews Yet\"))\n    }, {\n      menuItem: 'As Buyer',\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        attached: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, reviewsAsBuyer && reviewsAsBuyer.length > 0 ? this.renderTable(reviewsAsBuyer, 'buyer') : /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, \"No Reviews Yet\"))\n    }, {\n      menuItem: 'For Others',\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        attached: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, reviewsForOthers && reviewsForOthers.length > 0 ? this.renderTable(reviewsForOthers, 'left') : /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, \"No Reviews Yet\"))\n    }];\n    return /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      menu: {\n        attached: 'top'\n      },\n      panes: panes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    userProfile,\n    reviewsAsSeller,\n    reviewsAsBuyer,\n    reviewsForOthers\n  } = state.users;\n  return {\n    userProfile,\n    reviewsAsSeller,\n    reviewsAsBuyer,\n    reviewsForOthers,\n    user\n  };\n}\n\nconst actionCreators = {\n  handleDisplayReviewsAsSellerClicked: userActions.viewReviewsAsSeller,\n  handleDisplayReviewsAsBuyerClicked: userActions.viewReviewsAsBuyer,\n  handleDisplayReviewsForOthersClicked: userActions.viewReviewsForOthers\n};\nconst connectedReviews = connect(mapState, actionCreators)(Reviews);\nexport { connectedReviews as Reviews };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/Reviews.jsx"],"names":["React","Component","connect","_","Segment","Tab","Label","Icon","Rating","Table","Link","userActions","Reviews","state","reviewsAsSeller","reviewsAsBuyer","reviewsForOthers","column","data","direction","handleSort","clickedColumn","type","setState","sortBy","reverse","getStarsRating","number","renderTable","reviews","map","review","_id","feedback","reviewee","slice","reviewer","order","Date","updatedAt","toLocaleDateString","toLocaleTimeString","revieweeType","sellerRating","postDescription","communication","text","componentDidMount","props","handleDisplayReviewsAsBuyerClicked","user","id","handleDisplayReviewsForOthersClicked","render","panes","menuItem","length","attached","mapState","authentication","userProfile","users","actionCreators","handleDisplayReviewsAsSellerClicked","viewReviewsAsSeller","viewReviewsAsBuyer","viewReviewsForOthers","connectedReviews"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Segment, Tab, Label, Icon, Rating, Table, } from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { userActions } from '../../actions';\r\n\r\nclass Reviews extends Component {\r\n    state = { reviewsAsSeller: [], reviewsAsBuyer: [], reviewsForOthers: [], column: null, data: [], direction: null}\r\n\r\n    async componentDidMount() {\r\n        await this.props.handleDisplayReviewsAsBuyerClicked(this.props.user.id);\r\n        await this.props.handleDisplayReviewsForOthersClicked(this.props.user.id);\r\n        // No need to retrieve the seller reviews since we retrieve them on clicking the review tab\r\n\r\n        this.setState({\r\n            reviewsAsSeller: this.props.reviewsAsSeller, \r\n            reviewsAsBuyer: this.props.reviewsAsBuyer,\r\n            reviewsForOthers: this.props.reviewsForOthers,\r\n        })\r\n    }\r\n\r\n    \r\n    handleSort = (clickedColumn, type) => () => {\r\n        const { reviewsAsBuyer, reviewsAsSeller, reviewsForOthers, column, direction } = this.state\r\n    \r\n        if (column !== clickedColumn) {\r\n            switch (type) {\r\n                case 'buyer':\r\n                    this.setState({ column: clickedColumn, reviewsAsBuyer: _.sortBy(reviewsAsBuyer, [clickedColumn]), direction: 'ascending' });            \r\n                    break;\r\n                case 'seller':\r\n                    this.setState({ column: clickedColumn, reviewsAsSeller: _.sortBy(reviewsAsSeller, [clickedColumn]), direction: 'ascending' });            \r\n                    break;\r\n                default:\r\n                    this.setState({ column: clickedColumn, reviewsForOthers: _.sortBy(reviewsForOthers, [clickedColumn]), direction: 'ascending' });            \r\n                    break;\r\n            }\r\n          return;\r\n        }\r\n\r\n        switch (type) {\r\n            case 'buyer':\r\n                this.setState({ reviewsAsBuyer: reviewsAsBuyer.reverse(), direction: direction === 'ascending' ? 'descending' : 'ascending' });\r\n                break;\r\n            case 'seller':\r\n                this.setState({ reviewsAsSeller: reviewsAsSeller.reverse(), direction: direction === 'ascending' ? 'descending' : 'ascending' });\r\n                break;\r\n            default:\r\n                this.setState({ reviewsForOthers: reviewsForOthers.reverse(), direction: direction === 'ascending' ? 'descending' : 'ascending' });\r\n                break;\r\n        }\r\n    }\r\n    \r\n    getStarsRating = (number) => <Rating icon='star' defaultRating={number} maxRating={5} size='large' disabled/>;\r\n\r\n    renderTable = (reviews, type) => {\r\n        const { column, direction } = this.state\r\n        return (\r\n        <Table sortable celled padded>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell sorted={column === 'feedback' ? direction : null} onClick={this.handleSort('feedback', type)}>Feedback</Table.HeaderCell>\r\n              <Table.HeaderCell>{type === 'left' ? 'To' : 'From'}</Table.HeaderCell>\r\n              <Table.HeaderCell sorted={column === 'date' ? direction : null} onClick={this.handleSort('updatedAt', type)}>Date</Table.HeaderCell>\r\n              {type !== 'buyer' && <Table.HeaderCell sorted={column === 'feedback' ? direction : null} onClick={this.handleSort('sellerRating.postDescription', type)}>Post Description</Table.HeaderCell>}\r\n              {type !== 'buyer' && <Table.HeaderCell sorted={column === 'feedback' ? direction : null} onClick={this.handleSort('sellerRating.communication', type)}>Communication</Table.HeaderCell>}\r\n              <Table.HeaderCell>Comments</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n      \r\n          <Table.Body>\r\n                {reviews.map((review) => (\r\n                    <Table.Row key={review._id}>\r\n                        <Table.Cell textAlign='center'>{ review.feedback === 1 ? <Icon name='thumbs up outline' color='green'/> : <Icon name='thumbs down outline' color='red'/> }</Table.Cell>\r\n                        <Table.Cell singleLine>\r\n                            ***{type === 'left' ? review.reviewee.slice(-3) : review.reviewer.slice(-3)}\r\n                            <br />\r\n                            <Link to={`order/${review.order}`}>View Order</Link>\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {new Date(review.updatedAt).toLocaleDateString()}\r\n                            <br />\r\n                            {new Date(review.updatedAt).toLocaleTimeString()}\r\n                        </Table.Cell>\r\n                        {type !== 'buyer' && <Table.Cell>{review.revieweeType === 'seller' && <Rating icon='star' defaultRating={review.sellerRating.postDescription} maxRating={5} disabled/>}</Table.Cell>}\r\n                        {type !== 'buyer' && <Table.Cell>{review.revieweeType === 'seller' && <Rating icon='star' defaultRating={review.sellerRating.communication} maxRating={5} disabled/>}</Table.Cell>}\r\n                        <Table.Cell textAlign='left'>{review.text || '---'}</Table.Cell>\r\n                    </Table.Row>\r\n                ))}\r\n          </Table.Body>\r\n        </Table>\r\n    )}\r\n\r\n    render() {\r\n        const { reviewsAsSeller, reviewsAsBuyer, reviewsForOthers } = this.state;\r\n        const panes = [\r\n            {\r\n                menuItem: 'As Seller',\r\n                render: () => (\r\n                    <Tab.Pane attached='top'>\r\n                        {reviewsAsSeller && reviewsAsSeller.length > 0 ? (\r\n                            this.renderTable(reviewsAsSeller, 'seller')\r\n                        ) : (\r\n                            <Label>No Reviews Yet</Label>\r\n                        )}\r\n                    </Tab.Pane>\r\n                ),\r\n            },\r\n            {\r\n                menuItem: 'As Buyer',\r\n                render: () => (\r\n                    <Tab.Pane attached='top'>\r\n                        {reviewsAsBuyer && reviewsAsBuyer.length > 0 ? (\r\n                            this.renderTable(reviewsAsBuyer, 'buyer')\r\n                        ) : (\r\n                            <Label>No Reviews Yet</Label>\r\n                        )}\r\n                    </Tab.Pane>\r\n                ),\r\n            },\r\n            {\r\n                menuItem: 'For Others',\r\n                render: () => (\r\n                    <Tab.Pane attached='top'>\r\n                        {reviewsForOthers && reviewsForOthers.length > 0 ? (\r\n                            this.renderTable(reviewsForOthers, 'left')\r\n                        ) : (\r\n                            <Label>No Reviews Yet</Label>\r\n                        )}\r\n                    </Tab.Pane>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Segment>\r\n                <Tab\r\n                    menu={{ attached: 'top' }}\r\n                    panes={panes}\r\n                ></Tab>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { user } = state.authentication;\r\n    const {\r\n        userProfile,\r\n        reviewsAsSeller,\r\n        reviewsAsBuyer,\r\n        reviewsForOthers,\r\n    } = state.users;\r\n    return {\r\n        userProfile,\r\n        reviewsAsSeller,\r\n        reviewsAsBuyer,\r\n        reviewsForOthers,\r\n        user,\r\n    };\r\n}\r\n\r\nconst actionCreators = {\r\n    handleDisplayReviewsAsSellerClicked: userActions.viewReviewsAsSeller,\r\n    handleDisplayReviewsAsBuyerClicked: userActions.viewReviewsAsBuyer,\r\n    handleDisplayReviewsForOthersClicked: userActions.viewReviewsForOthers,\r\n};\r\n\r\nconst connectedReviews = connect(mapState, actionCreators)(Reviews);\r\n\r\nexport { connectedReviews as Reviews };\r\n"]},"metadata":{},"sourceType":"module"}