{"ast":null,"code":"import { categoryConstants, postConstants, discountConstants, questionConstants } from \"../constants\";\nimport * as moment from \"moment\";\nconst initialState = {\n  loading: false,\n  currentStep: 1,\n  level: 0,\n  categories: [],\n  options: [],\n  selectedCategory: {\n    id: '',\n    name: ''\n  },\n  categoriesOptions: [],\n  subcategories: [],\n  subcategoriesOptions: [],\n  categoryFields: [],\n  itemData: {\n    description: ''\n  },\n  mainData: {\n    title: \"\",\n    condition: \"\",\n    warranty: false,\n    expiryDate: \"\",\n    originalQuantity: \"\"\n  },\n  sellingData: {\n    sellingMethod: \"\",\n    price: \"\",\n    minPrice: \"\",\n    duration: \"\",\n    bidIncrement: \"\",\n    promotionPlan: \"\"\n  },\n  files: [],\n  postOldImages: [],\n  errors: {},\n  postData: {\n    post: {\n      images: []\n    }\n  },\n  postQuantity: 0,\n  postHasOrders: false,\n  editWholePostSuccess: false\n};\nexport function post(state = initialState, action) {\n  let level,\n      categories,\n      options = null;\n\n  switch (action.type) {\n    case categoryConstants.GET_ALL_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case categoryConstants.GET_ALL_SUCCESS:\n      return { ...state,\n        loading: false\n      };\n\n    case categoryConstants.GET_ALL_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case categoryConstants.GET_ALL_FIELDS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case categoryConstants.GET_ALL_FIELDS_SUCCESS:\n      return { ...state,\n        categoryFields: action.fields,\n        loading: false\n      };\n\n    case categoryConstants.GET_ALL_FIELDS_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.CATEGORIES_LEAF_UPDATED:\n      level = parseInt(action.level) + 1;\n      categories = [...state.categories.slice()];\n      options = [...state.options.slice()];\n      categories = categories.slice(0, level);\n      options = options.slice(0, level);\n      return { ...state,\n        categories,\n        options\n      };\n\n    case postConstants.CATEGORIES_NOT_LEAF_UPDATED:\n      level = parseInt(action.level) + 1;\n      categories = [...state.categories.slice()];\n      options = [...state.options.slice()];\n      categories[level] = action.categories;\n      options[level] = action.options;\n      categories = categories.slice(0, level + 1);\n      options = options.slice(0, level + 1);\n      return { ...state,\n        categories,\n        options\n      };\n\n    case postConstants.SELECTED_CATEGORY_CHANGED:\n      return { ...state,\n        selectedCategory: action.category\n      };\n\n    case postConstants.EDIT_POST_CATEGORY_CHANGE:\n      return { ...state,\n        selectedCategory: {\n          id: '',\n          name: ''\n        }\n      };\n\n    case postConstants.ITEM_DATA_CHANGE:\n      return { ...state,\n        itemData: action.itemData\n      };\n\n    case postConstants.MAIN_DATA_CHANGE:\n      if (action.name === 'warranty' && action.value === false) return { ...state,\n        mainData: { ...state.mainData,\n          expiryDate: '',\n          [action.name]: action.value\n        }\n      };\n      return { ...state,\n        mainData: { ...state.mainData,\n          [action.name]: action.value\n        }\n      };\n\n    case postConstants.STEP_INCREMENT:\n      return { ...state,\n        currentStep: state.currentStep + 1\n      };\n\n    case postConstants.STEP_DECREMENT:\n      return { ...state,\n        currentStep: state.currentStep - 1\n      };\n\n    case postConstants.FILE_ADD:\n      return { ...state,\n        files: action.files\n      };\n\n    case postConstants.FILE_REMOVE:\n      return { ...state,\n        files: state.files.filter(f => f !== action.file)\n      };\n\n    case postConstants.OLD_IMAGES_REMOVE:\n      return { ...state,\n        postOldImages: state.postOldImages.filter(f => f !== action.file)\n      };\n\n    case postConstants.SELLING_DATA_CHANGE:\n      return { ...state,\n        sellingData: { ...state.sellingData,\n          [action.name]: action.value\n        }\n      };\n\n    case postConstants.POST_GET_POST_DATA_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case postConstants.POST_GET_POST_DATA_SUCCESS:\n      const itemData = {};\n\n      for (const [key, value] of Object.entries(action.postData.post.english && action.postData.post.english.data)) {\n        itemData[key] = value;\n      }\n\n      return { ...state,\n        postData: action.postData,\n        loading: false,\n        mainData: {\n          title: action.postData.post.title,\n          condition: action.postData.post.condition,\n          warranty: action.postData.post.warranty.exists,\n          expiryDate: action.postData.post.warranty.exists ? moment(action.postData.post.warranty.expiryDate).format('YYYY-MM-DD') : '',\n          originalQuantity: action.postData.post.availableQuantity\n        },\n        itemData: itemData,\n        postOldImages: [...action.postData.post.images],\n        sellingData: {\n          sellingMethod: action.postData.post.sellingMethod,\n          price: action.postData.post.price,\n          minPrice: action.postData.post.auction && action.postData.post.auction.startPrice,\n          duration: action.postData.post.auction && action.postData.post.auction.interval,\n          bidIncrement: action.postData.post.auction && action.postData.post.auction.bidIncrement,\n          promotionPlan: action.postData.post.promotionPlan\n        },\n        postQuantity: action.postData.post.availableQuantity\n      };\n\n    case postConstants.POST_GET_POST_DATA_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.ADD_POST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case postConstants.ADD_POST_SUCCESS:\n      return { ...state,\n        loading: false\n      };\n\n    case postConstants.ADD_POST_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case questionConstants.ANSWER_REQUEST:\n      return { ...state\n      };\n\n    case questionConstants.ANSWER_SUCCESS:\n      let questions = state.postData.post.questions.map(function (item) {\n        if (item._id !== action.data._id) {\n          return item;\n        } else {\n          return action.data;\n        }\n      });\n      return { ...state,\n        postData: { ...state.postData,\n          post: { ...state.postData.post,\n            questions: questions\n          }\n        }\n      };\n\n    case questionConstants.ANSWER_FAILURE:\n      return { ...state\n      };\n\n    case questionConstants.QUESTION_REQUEST:\n      return { ...state\n      };\n\n    case questionConstants.QUESTION_SUCCESS:\n      state.postData.post.questions.push(action.data);\n      return { ...state\n      };\n\n    case questionConstants.QUESTION_FAILURE:\n      return { ...state\n      };\n\n    case discountConstants.CREATE_DISCOUNT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case discountConstants.CREATE_DISCOUNT_SUCCESS:\n      return { ...state,\n        postData: action.postData,\n        loading: false\n      };\n\n    case discountConstants.CREATE_DISCOUNT_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case discountConstants.REMOVE_DISCOUNT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case discountConstants.REMOVE_DISCOUNT_SUCCESS:\n      return { ...state,\n        postData: action.postData,\n        loading: false\n      };\n\n    case discountConstants.REMOVE_DISCOUNT_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case categoryConstants.GET_CATEGORY_DETAILS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case categoryConstants.GET_CATEGORY_DETAILS_SUCCESS:\n      return { ...state,\n        selectedCategory: {\n          id: action.data.childrenTree.id,\n          name: action.data.childrenTree.name.english\n        },\n        loading: false\n      };\n\n    case categoryConstants.GET_CATEGORY_DETAILS_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.RESET_POST_DETAILS:\n      return { ...state,\n        postData: {\n          post: {\n            images: []\n          }\n        },\n        loading: false,\n        itemData: {\n          description: ''\n        },\n        files: [],\n        postOldImages: [],\n        mainData: {\n          title: \"\",\n          condition: \"\",\n          warranty: false,\n          expiryDate: \"\",\n          originalQuantity: \"\"\n        },\n        sellingData: {\n          sellingMethod: \"\",\n          price: \"\",\n          minPrice: \"\",\n          duration: \"\",\n          bidIncrement: \"\",\n          promotionPlan: \"\"\n        },\n        postQuantity: 0,\n        currentStep: 1\n      };\n\n    case postConstants.EDIT_WHOLE_POST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case postConstants.EDIT_WHOLE_POST_SUCCESS:\n      return { ...state,\n        postData: action.post,\n        editWholePostSuccess: true,\n        loading: false\n      };\n\n    case postConstants.EDIT_WHOLE_POST_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.EDIT_POST_QUANTITY_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case postConstants.EDIT_POST_QUANTITY_SUCCESS:\n      return { ...state,\n        postData: action.post,\n        loading: false\n      };\n\n    case postConstants.EDIT_POST_QUANTITY_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.CHANGE_POST_QUANTITY:\n      return { ...state,\n        postQuantity: action.quantity,\n        loading: false\n      };\n\n    case postConstants.CHECK_POST_ORDERS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case postConstants.CHECK_POST_ORDERS_SUCCESS:\n      return { ...state,\n        postHasOrders: action.postHasOrders,\n        loading: false\n      };\n\n    case postConstants.CHECK_POST_ORDERS_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.TAKE_POST_OFFLINE_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case postConstants.TAKE_POST_OFFLINE_SUCCESS:\n      return { ...state,\n        postData: action.post,\n        loading: false\n      };\n\n    case postConstants.TAKE_POST_OFFLINE_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.TAKE_POST_ONLINE_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case postConstants.TAKE_POST_ONLINE_SUCCESS:\n      return { ...state,\n        postData: action.post,\n        loading: false\n      };\n\n    case postConstants.TAKE_POST_ONLINE_FAILURE:\n      return { ...state,\n        errors: action.errors,\n        loading: false\n      };\n\n    case postConstants.EDIT_POST_DONE:\n      return { ...state,\n        editWholePostSuccess: false,\n        loading: false\n      };\n\n    case postConstants.CLEAR:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/reducers/post.reducer.js"],"names":["categoryConstants","postConstants","discountConstants","questionConstants","moment","initialState","loading","currentStep","level","categories","options","selectedCategory","id","name","categoriesOptions","subcategories","subcategoriesOptions","categoryFields","itemData","description","mainData","title","condition","warranty","expiryDate","originalQuantity","sellingData","sellingMethod","price","minPrice","duration","bidIncrement","promotionPlan","files","postOldImages","errors","postData","post","images","postQuantity","postHasOrders","editWholePostSuccess","state","action","type","GET_ALL_REQUEST","GET_ALL_SUCCESS","GET_ALL_FAILURE","GET_ALL_FIELDS_REQUEST","GET_ALL_FIELDS_SUCCESS","fields","GET_ALL_FIELDS_FAILURE","CATEGORIES_LEAF_UPDATED","parseInt","slice","CATEGORIES_NOT_LEAF_UPDATED","SELECTED_CATEGORY_CHANGED","category","EDIT_POST_CATEGORY_CHANGE","ITEM_DATA_CHANGE","MAIN_DATA_CHANGE","value","STEP_INCREMENT","STEP_DECREMENT","FILE_ADD","FILE_REMOVE","filter","f","file","OLD_IMAGES_REMOVE","SELLING_DATA_CHANGE","POST_GET_POST_DATA_REQUEST","POST_GET_POST_DATA_SUCCESS","key","Object","entries","english","data","exists","format","availableQuantity","auction","startPrice","interval","POST_GET_POST_DATA_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ANSWER_REQUEST","ANSWER_SUCCESS","questions","map","item","_id","ANSWER_FAILURE","QUESTION_REQUEST","QUESTION_SUCCESS","push","QUESTION_FAILURE","CREATE_DISCOUNT_REQUEST","CREATE_DISCOUNT_SUCCESS","CREATE_DISCOUNT_FAILURE","REMOVE_DISCOUNT_REQUEST","REMOVE_DISCOUNT_SUCCESS","REMOVE_DISCOUNT_FAILURE","GET_CATEGORY_DETAILS_REQUEST","GET_CATEGORY_DETAILS_SUCCESS","childrenTree","GET_CATEGORY_DETAILS_FAILURE","RESET_POST_DETAILS","EDIT_WHOLE_POST_REQUEST","EDIT_WHOLE_POST_SUCCESS","EDIT_WHOLE_POST_FAILURE","EDIT_POST_QUANTITY_REQUEST","EDIT_POST_QUANTITY_SUCCESS","EDIT_POST_QUANTITY_FAILURE","CHANGE_POST_QUANTITY","quantity","CHECK_POST_ORDERS_REQUEST","CHECK_POST_ORDERS_SUCCESS","CHECK_POST_ORDERS_FAILURE","TAKE_POST_OFFLINE_REQUEST","TAKE_POST_OFFLINE_SUCCESS","TAKE_POST_OFFLINE_FAILURE","TAKE_POST_ONLINE_REQUEST","TAKE_POST_ONLINE_SUCCESS","TAKE_POST_ONLINE_FAILURE","EDIT_POST_DONE","CLEAR"],"mappings":"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","sourcesContent":["import {\r\n  categoryConstants,\r\n  postConstants,\r\n  discountConstants,\r\n  questionConstants,\r\n} from \"../constants\";\r\n\r\nimport * as moment from \"moment\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  currentStep: 1,\r\n  level: 0,\r\n  categories: [],\r\n  options: [],\r\n  selectedCategory: { id: '', name: '' },\r\n\r\n  categoriesOptions: [],\r\n  subcategories: [],\r\n  subcategoriesOptions: [],\r\n  categoryFields: [],\r\n  itemData: { description: '' },\r\n  mainData: {\r\n    title: \"\",\r\n    condition: \"\",\r\n    warranty: false,\r\n    expiryDate: \"\",\r\n    originalQuantity: \"\"\r\n  },\r\n  sellingData: {\r\n    sellingMethod: \"\",\r\n    price: \"\",\r\n    minPrice: \"\",\r\n    duration: \"\",\r\n    bidIncrement:\"\",\r\n    promotionPlan:\"\",\r\n  },\r\n  files: [],\r\n  postOldImages: [],\r\n\r\n  errors: {},\r\n  postData: { post: { images: [], } },\r\n  postQuantity: 0,\r\n  postHasOrders: false,\r\n  editWholePostSuccess: false,\r\n};\r\n\r\nexport function post(state = initialState, action) {\r\n  let level,\r\n    categories,\r\n    options = null;\r\n  switch (action.type) {\r\n    case categoryConstants.GET_ALL_REQUEST:\r\n      return { ...state, loading: true };\r\n    case categoryConstants.GET_ALL_SUCCESS:\r\n      return { ...state, loading: false };\r\n    case categoryConstants.GET_ALL_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };\r\n\r\n\r\n    \r\n    case categoryConstants.GET_ALL_FIELDS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case categoryConstants.GET_ALL_FIELDS_SUCCESS:\r\n      return { ...state, categoryFields: action.fields, loading: false };\r\n    case categoryConstants.GET_ALL_FIELDS_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };\r\n\r\n    case postConstants.CATEGORIES_LEAF_UPDATED:\r\n      level = parseInt(action.level) + 1;\r\n      categories = [...state.categories.slice()];\r\n      options = [...state.options.slice()];\r\n      categories = categories.slice(0, level);\r\n      options = options.slice(0, level);\r\n      return { ...state, categories, options };\r\n    case postConstants.CATEGORIES_NOT_LEAF_UPDATED:\r\n      level = parseInt(action.level) + 1;\r\n      categories = [...state.categories.slice()];\r\n      options = [...state.options.slice()];\r\n      categories[level] = action.categories;\r\n      options[level] = action.options;\r\n      categories = categories.slice(0, level + 1);\r\n      options = options.slice(0, level + 1);\r\n      return { ...state, categories, options };\r\n    case postConstants.SELECTED_CATEGORY_CHANGED:\r\n      return { ...state, selectedCategory: action.category };\r\n\r\n    case postConstants.EDIT_POST_CATEGORY_CHANGE:\r\n      return { ...state, selectedCategory: { id: '', name: '' } };\r\n\r\n    case postConstants.ITEM_DATA_CHANGE:\r\n      return { ...state, itemData: action.itemData };\r\n    case postConstants.MAIN_DATA_CHANGE:\r\n      if(action.name === 'warranty' && action.value === false) return { ...state, mainData: { ...state.mainData, expiryDate:'',[action.name]: action.value } };\r\n      return { ...state, mainData: { ...state.mainData, [action.name]: action.value } };\r\n\r\n    case postConstants.STEP_INCREMENT:\r\n      return { ...state, currentStep: state.currentStep + 1 };\r\n    case postConstants.STEP_DECREMENT:\r\n      return { ...state, currentStep: state.currentStep - 1 };\r\n\r\n    case postConstants.FILE_ADD:\r\n      return { ...state, files: action.files };\r\n    case postConstants.FILE_REMOVE:\r\n      return {\r\n        ...state,\r\n        files: state.files.filter(f => f !== action.file)\r\n      };\r\n    \r\n    case postConstants.OLD_IMAGES_REMOVE:\r\n      return {\r\n        ...state,\r\n        postOldImages: state.postOldImages.filter(f => f !== action.file)\r\n      };      \r\n\r\n    case postConstants.SELLING_DATA_CHANGE:\r\n      return { ...state, sellingData: { ...state.sellingData, [action.name]: action.value } };\r\n\r\n    case postConstants.POST_GET_POST_DATA_REQUEST:\r\n      return { ...state, loading: true };\r\n    case postConstants.POST_GET_POST_DATA_SUCCESS:\r\n      const itemData = {};\r\n      for (const [key, value] of Object.entries(action.postData.post.english && action.postData.post.english.data)) {\r\n        itemData[key] = value;\r\n      }\r\n      return {\r\n        ...state, \r\n        postData: action.postData, \r\n        loading: false,\r\n        mainData: {\r\n          title: action.postData.post.title,\r\n          condition: action.postData.post.condition,\r\n          warranty: action.postData.post.warranty.exists,\r\n          expiryDate: action.postData.post.warranty.exists ? moment(action.postData.post.warranty.expiryDate).format('YYYY-MM-DD') : '', \r\n          originalQuantity: action.postData.post.availableQuantity,\r\n        },\r\n        itemData: itemData,\r\n        postOldImages: [ ...action.postData.post.images ],\r\n        sellingData: {\r\n          sellingMethod: action.postData.post.sellingMethod,\r\n          price: action.postData.post.price,\r\n          minPrice: action.postData.post.auction && action.postData.post.auction.startPrice,\r\n          duration: action.postData.post.auction && action.postData.post.auction.interval,\r\n          bidIncrement: action.postData.post.auction && action.postData.post.auction.bidIncrement,\r\n          promotionPlan: action.postData.post.promotionPlan,\r\n        },\r\n        postQuantity: action.postData.post.availableQuantity,\r\n      };\r\n    case postConstants.POST_GET_POST_DATA_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };\r\n\r\n    case postConstants.ADD_POST_REQUEST:\r\n      return { ...state, loading: true };\r\n    case postConstants.ADD_POST_SUCCESS:\r\n      return { ...state, loading: false };\r\n    case postConstants.ADD_POST_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };\r\n\r\n    case questionConstants.ANSWER_REQUEST:\r\n      return { ...state };\r\n    case questionConstants.ANSWER_SUCCESS:\r\n      let questions = state.postData.post.questions.map(function(item) {\r\n        if (item._id !== action.data._id) {\r\n          return item;\r\n        } else {\r\n          return action.data;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        postData: {\r\n          ...state.postData,\r\n          post: { ...state.postData.post, questions: questions }\r\n        }\r\n      };\r\n    case questionConstants.ANSWER_FAILURE:\r\n      return { ...state };\r\n    case questionConstants.QUESTION_REQUEST:\r\n      return { ...state };\r\n\r\n    case questionConstants.QUESTION_SUCCESS:\r\n      state.postData.post.questions.push(action.data);\r\n\r\n      return { ...state };\r\n    case questionConstants.QUESTION_FAILURE:\r\n      return { ...state };\r\n\r\n     case discountConstants.CREATE_DISCOUNT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case discountConstants.CREATE_DISCOUNT_SUCCESS:\r\n      return { ...state, postData: action.postData, loading: false };\r\n    case discountConstants.CREATE_DISCOUNT_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };\r\n    \r\n    case discountConstants.REMOVE_DISCOUNT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case discountConstants.REMOVE_DISCOUNT_SUCCESS:\r\n      return { ...state, postData: action.postData, loading: false };\r\n    case discountConstants.REMOVE_DISCOUNT_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };\r\n\r\n    case categoryConstants.GET_CATEGORY_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case categoryConstants.GET_CATEGORY_DETAILS_SUCCESS:\r\n      return { ...state, selectedCategory: { id: action.data.childrenTree.id, name: action.data.childrenTree.name.english }, loading: false };\r\n    case categoryConstants.GET_CATEGORY_DETAILS_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };      \r\n\r\n    case postConstants.RESET_POST_DETAILS:\r\n      return { \r\n        ...state, \r\n        postData:  { post: { images: [], } },\r\n        loading: false,\r\n        itemData: {\r\n          description: '',\r\n        },\r\n        files: [],\r\n        postOldImages: [],\r\n        mainData: {\r\n          title: \"\",\r\n          condition: \"\",\r\n          warranty: false,\r\n          expiryDate: \"\",\r\n          originalQuantity: \"\"\r\n        },\r\n        sellingData: {\r\n          sellingMethod: \"\",\r\n          price: \"\",\r\n          minPrice: \"\",\r\n          duration: \"\",\r\n          bidIncrement:\"\",\r\n          promotionPlan:\"\",\r\n        },    \r\n        postQuantity: 0,  \r\n        currentStep: 1,\r\n      };  \r\n\r\n    case postConstants.EDIT_WHOLE_POST_REQUEST:\r\n      return { ...state, loading: true };\r\n    case postConstants.EDIT_WHOLE_POST_SUCCESS:\r\n      return { ...state, postData: action.post, editWholePostSuccess: true, loading: false };\r\n    case postConstants.EDIT_WHOLE_POST_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };\r\n\r\n    case postConstants.EDIT_POST_QUANTITY_REQUEST:\r\n      return { ...state, loading: true };\r\n    case postConstants.EDIT_POST_QUANTITY_SUCCESS:\r\n      return { ...state, postData: action.post, loading: false };\r\n    case postConstants.EDIT_POST_QUANTITY_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };      \r\n      \r\n    case postConstants.CHANGE_POST_QUANTITY:\r\n      return { ...state, postQuantity: action.quantity, loading: false };    \r\n\r\n    case postConstants.CHECK_POST_ORDERS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case postConstants.CHECK_POST_ORDERS_SUCCESS:\r\n      return { ...state, postHasOrders: action.postHasOrders, loading: false };\r\n    case postConstants.CHECK_POST_ORDERS_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };    \r\n      \r\n    case postConstants.TAKE_POST_OFFLINE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case postConstants.TAKE_POST_OFFLINE_SUCCESS:\r\n      return { ...state, postData: action.post, loading: false };\r\n    case postConstants.TAKE_POST_OFFLINE_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };  \r\n      \r\n    case postConstants.TAKE_POST_ONLINE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case postConstants.TAKE_POST_ONLINE_SUCCESS:\r\n      return { ...state, postData: action.post, loading: false };\r\n    case postConstants.TAKE_POST_ONLINE_FAILURE:\r\n      return { ...state, errors: action.errors, loading: false };        \r\n\r\n    case postConstants.EDIT_POST_DONE:\r\n      return { ...state, editWholePostSuccess: false, loading: false }; \r\n    case postConstants.CLEAR:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}