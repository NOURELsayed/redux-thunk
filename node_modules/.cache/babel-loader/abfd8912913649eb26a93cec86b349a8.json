{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UpdatePasswordModal.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../actions';\nimport { Button, Modal, Input, Grid, Icon } from 'semantic-ui-react';\n\nclass UpdatePasswordModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //  openChangePassword: false,\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      newPasswordValid: false,\n      enableSubmit: false\n    };\n\n    this.enableSubmit = (oldPassword, newPasswordValid, newPassword, confirmPassword) => oldPassword !== '' && newPasswordValid && newPassword === confirmPassword;\n\n    this.show = () => () => this.props.showChangePasswordModal(true);\n\n    this.close = () => this.props.showChangePasswordModal(false);\n\n    this.oldPasswordChanged = (e, data) => {\n      const enableSubmit = this.enableSubmit(data.value, this.state.newPasswordValid, this.state.newPassword, this.state.confirmPassword);\n      this.setState({\n        oldPassword: data.value,\n        enableSubmit: enableSubmit\n      });\n    };\n\n    this.newPasswordChanged = (e, data) => {\n      const valid = this.isPasswordValid(data.value);\n      const enableSubmit = this.enableSubmit(this.state.oldPassword, valid, data.value, this.state.confirmPassword);\n      this.setState({\n        newPassword: data.value,\n        newPasswordValid: valid,\n        enableSubmit: enableSubmit\n      });\n    };\n\n    this.confirmPasswordChanged = (e, data) => {\n      const enableSubmit = this.enableSubmit(this.state.oldPassword, this.state.newPasswordValid, this.state.newPassword, data.value);\n      this.setState({\n        confirmPassword: data.value,\n        enableSubmit: enableSubmit\n      });\n    };\n\n    this.handleEditPasswordButtonClicked = () => {\n      this.props.handleEditPasswordButtonClicked({\n        newPassword: this.state.newPassword,\n        oldPassword: this.state.oldPassword\n      });\n    };\n  }\n\n  isPasswordValid(password) {\n    return password.length >= 8;\n  }\n\n  render() {\n    const {\n      openChangePassword\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      onClick: this.show(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Modal, {\n      open: openChangePassword,\n      onClose: this.close,\n      closeIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Change your password\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, \"Old password :\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"old password\",\n      type: 'password',\n      onChange: this.oldPasswordChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, \"New password :\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"new password\",\n      onChange: this.newPasswordChanged,\n      type: 'password',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }), this.state.newPasswordValid ? /*#__PURE__*/React.createElement(Icon, {\n      color: \"green\",\n      name: \"checkmark\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Icon, {\n      color: \"yellow\",\n      name: \"warning\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, \"Confirm password :\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"confirm password\",\n      onChange: this.confirmPasswordChanged,\n      type: 'password',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }), this.state.newPassword === this.state.confirmPassword && this.state.newPassword !== '' ? /*#__PURE__*/React.createElement(Icon, {\n      color: \"green\",\n      name: \"checkmark\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Icon, {\n      color: \"yellow\",\n      name: \"warning\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button.Or, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }), this.state.enableSubmit ? /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      onClick: this.handleEditPasswordButtonClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, \"Save\") : /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    userProfile,\n    openChangePassword\n  } = state.users;\n  return {\n    user,\n    userProfile,\n    openChangePassword\n  };\n}\n\nconst actionCreators = {\n  handleEditPasswordButtonClicked: userActions.changePassword,\n  showChangePasswordModal: userActions.showChangePasswordModal\n};\nconst connectedUpdatePasswordModal = connect(mapState, actionCreators)(UpdatePasswordModal);\nexport { connectedUpdatePasswordModal as UpdatePasswordModal };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UpdatePasswordModal.jsx"],"names":["React","Component","connect","userActions","Button","Modal","Input","Grid","Icon","UpdatePasswordModal","state","oldPassword","newPassword","confirmPassword","newPasswordValid","enableSubmit","show","props","showChangePasswordModal","close","oldPasswordChanged","e","data","value","setState","newPasswordChanged","valid","isPasswordValid","confirmPasswordChanged","handleEditPasswordButtonClicked","password","length","render","openChangePassword","mapState","user","authentication","userProfile","users","actionCreators","changePassword","connectedUpdatePasswordModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userActions } from '../../actions';\r\nimport { Button, Modal, Input, Grid, Icon } from 'semantic-ui-react';\r\n\r\nclass UpdatePasswordModal extends Component {\r\n    state = {\r\n        //  openChangePassword: false,\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        newPasswordValid: false,\r\n        enableSubmit: false,\r\n    };\r\n    isPasswordValid(password) {\r\n        return password.length >= 8;\r\n    }\r\n    enableSubmit = (\r\n        oldPassword,\r\n        newPasswordValid,\r\n        newPassword,\r\n        confirmPassword,\r\n    ) =>\r\n        oldPassword !== '' &&\r\n        newPasswordValid &&\r\n        newPassword === confirmPassword;\r\n    show = () => () => this.props.showChangePasswordModal(true);\r\n    close = () => this.props.showChangePasswordModal(false);\r\n    oldPasswordChanged = (e, data) => {\r\n        const enableSubmit = this.enableSubmit(\r\n            data.value,\r\n            this.state.newPasswordValid,\r\n            this.state.newPassword,\r\n            this.state.confirmPassword,\r\n        );\r\n\r\n        this.setState({ oldPassword: data.value, enableSubmit: enableSubmit });\r\n    };\r\n\r\n    newPasswordChanged = (e, data) => {\r\n        const valid = this.isPasswordValid(data.value);\r\n        const enableSubmit = this.enableSubmit(\r\n            this.state.oldPassword,\r\n            valid,\r\n            data.value,\r\n            this.state.confirmPassword,\r\n        );\r\n        this.setState({\r\n            newPassword: data.value,\r\n            newPasswordValid: valid,\r\n            enableSubmit: enableSubmit,\r\n        });\r\n    };\r\n\r\n    confirmPasswordChanged = (e, data) => {\r\n        const enableSubmit = this.enableSubmit(\r\n            this.state.oldPassword,\r\n            this.state.newPasswordValid,\r\n            this.state.newPassword,\r\n            data.value,\r\n        );\r\n        this.setState({\r\n            confirmPassword: data.value,\r\n            enableSubmit: enableSubmit,\r\n        });\r\n    };\r\n\r\n    handleEditPasswordButtonClicked = () => {\r\n        this.props.handleEditPasswordButtonClicked({\r\n            newPassword: this.state.newPassword,\r\n            oldPassword: this.state.oldPassword,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { openChangePassword } = this.props;\r\n        return (\r\n            <div>\r\n                <Button primary onClick={this.show()}>Edit</Button>\r\n\r\n                <Modal open={openChangePassword} onClose={this.close} closeIcon>\r\n                    <Modal.Header>Change your password</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={3}>\r\n                                    Old password :\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <Input\r\n                                        placeholder='old password'\r\n                                        type={'password'}\r\n                                        onChange={this.oldPasswordChanged}\r\n                                    />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={3}>\r\n                                    New password :\r\n                                </Grid.Column>\r\n                                <Grid.Column width={5}>\r\n                                    <Input\r\n                                        placeholder='new password'\r\n                                        onChange={this.newPasswordChanged}\r\n                                        type={'password'}\r\n\r\n                                    />\r\n                                    {this.state.newPasswordValid ? (\r\n                                        <Icon\r\n                                            color='green'\r\n                                            name='checkmark'\r\n                                            size='small'\r\n                                        />\r\n                                    ) : (\r\n                                        <Icon\r\n                                            color='yellow'\r\n                                            name='warning'\r\n                                            size='small'\r\n                                        />\r\n                                    )}\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={3}>\r\n                                    Confirm password :\r\n                                </Grid.Column>\r\n                                <Grid.Column width={5}>\r\n                                    <Input\r\n                                        placeholder='confirm password'\r\n                                        onChange={this.confirmPasswordChanged}\r\n                                        type={'password'}\r\n\r\n                                    />\r\n                                    {this.state.newPassword ===\r\n                                        this.state.confirmPassword &&\r\n                                    this.state.newPassword !== '' ? (\r\n                                        <Icon\r\n                                            color='green'\r\n                                            name='checkmark'\r\n                                            size='small'\r\n                                        />\r\n                                    ) : (\r\n                                        <Icon\r\n                                            color='yellow'\r\n                                            name='warning'\r\n                                            size='small'\r\n                                        />\r\n                                    )}\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button.Group>\r\n                            <Button onClick={this.close}>Cancel</Button>\r\n                            <Button.Or />\r\n                            {this.state.enableSubmit ? (\r\n                                <Button\r\n                                    positive\r\n                                    onClick={\r\n                                        this.handleEditPasswordButtonClicked\r\n                                    }\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            ) : (\r\n                                <Button positive disabled>\r\n                                    Save\r\n                                </Button>\r\n                            )}\r\n                        </Button.Group>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { user } = state.authentication;\r\n    const { userProfile, openChangePassword } = state.users;\r\n    return { user, userProfile, openChangePassword };\r\n}\r\n\r\nconst actionCreators = {\r\n    handleEditPasswordButtonClicked: userActions.changePassword,\r\n    showChangePasswordModal: userActions.showChangePasswordModal,\r\n};\r\n\r\nconst connectedUpdatePasswordModal = connect(\r\n    mapState,\r\n    actionCreators,\r\n)(UpdatePasswordModal);\r\n\r\nexport { connectedUpdatePasswordModal as UpdatePasswordModal };\r\n"]},"metadata":{},"sourceType":"module"}