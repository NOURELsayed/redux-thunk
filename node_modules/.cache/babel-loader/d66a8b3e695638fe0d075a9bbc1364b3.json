{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/Selling.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Tab } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { orderActions } from \"../../actions\";\nimport BuyingAndSellingCard from \"./BuyingAndSellingCard\";\n\nclass SellingOrders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.panes = [{\n      menuItem: \"Posts\",\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        attached: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, this.renderSellingPosts(this.props.sellingPosts))\n    }, {\n      menuItem: \"Orders\",\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        attached: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, this.renderSellingOrders(this.props.sellingOrders))\n    }, {\n      menuItem: \"Returns\",\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        attached: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, \"Selling returns orders tab\")\n    }];\n\n    this.renderSellingOrders = sellingOrders => {\n      return sellingOrders == null || sellingOrders.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, sellingOrders.map(sellingOrder => {\n        const dateFormat = sellingOrder.createdAt;\n        const postDate = moment(dateFormat).format(\"MMMM Do, YYYY\");\n        return /*#__PURE__*/React.createElement(BuyingAndSellingCard, {\n          orderId: sellingOrder._id,\n          createdAt: postDate,\n          status: sellingOrder.status,\n          ImgSource: sellingOrder.items[0].post.images,\n          condition: sellingOrder.items[0].post.condition,\n          title: sellingOrder.items[0].post.title,\n          buttonText: \"View order details\",\n          appointmentbuttonText: \"Make an appointment\",\n          RespondToCaseButton: \"Respond to case\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.renderSellingPosts = sellingPosts => {\n      return sellingPosts == null || sellingPosts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, sellingPosts.map(sellingPost => {\n        const dateFormat = sellingPost.createdAt;\n        const postDate = moment(dateFormat).format(\"MMMM Do, YYYY\");\n        return /*#__PURE__*/React.createElement(BuyingAndSellingCard, {\n          orderId: sellingPost._id,\n          createdAt: postDate,\n          status: sellingPost.status,\n          ImgSource: sellingPost.images[0],\n          condition: sellingPost.condition,\n          title: sellingPost.title,\n          buttonText: \"View order details\",\n          appointmentbuttonText: \"Make an appointment\",\n          RespondToCaseButton: \"Respond to case\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.handelviewSellingOrders();\n    this.props.handelviewSellingPosts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      menu: {\n        secondary: true,\n        pointing: true\n      },\n      panes: this.panes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    sellingOrders,\n    sellingPosts\n  } = state.order;\n  return {\n    sellingOrders,\n    sellingPosts\n  };\n}\n\nconst actionCreators = {\n  handelviewSellingOrders: orderActions.viewSellingOrders,\n  handelviewSellingPosts: orderActions.viewSellingPosts\n};\nconst connectedSellingOrders = connect(mapState, actionCreators)(SellingOrders);\nexport { connectedSellingOrders as SellingOrders };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/Selling.jsx"],"names":["React","Component","connect","Grid","Tab","moment","orderActions","BuyingAndSellingCard","SellingOrders","panes","menuItem","render","renderSellingPosts","props","sellingPosts","renderSellingOrders","sellingOrders","length","map","sellingOrder","dateFormat","createdAt","postDate","format","_id","status","items","post","images","condition","title","sellingPost","componentDidMount","handelviewSellingOrders","handelviewSellingPosts","secondary","pointing","mapState","state","order","actionCreators","viewSellingOrders","viewSellingPosts","connectedSellingOrders"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Tab } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { orderActions } from \"../../actions\";\r\nimport BuyingAndSellingCard from \"./BuyingAndSellingCard\";\r\nclass SellingOrders extends Component {\r\n  panes = [\r\n    {\r\n      menuItem: \"Posts\",\r\n      render: () => (\r\n        <Tab.Pane attached={false}>\r\n          {this.renderSellingPosts(this.props.sellingPosts)}\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Orders\",\r\n      render: () => (\r\n        <Tab.Pane attached={false}>\r\n          {this.renderSellingOrders(this.props.sellingOrders)}\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Returns\",\r\n      render: () => (\r\n        <Tab.Pane attached={false}>Selling returns orders tab</Tab.Pane>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  componentDidMount() {\r\n    this.props.handelviewSellingOrders();\r\n    this.props.handelviewSellingPosts();\r\n  }\r\n\r\n  renderSellingOrders = (sellingOrders) => {\r\n    return sellingOrders == null || sellingOrders.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <div>\r\n        {sellingOrders.map((sellingOrder) => {\r\n          const dateFormat = sellingOrder.createdAt\r\n          const postDate = moment( dateFormat).format(\"MMMM Do, YYYY\")\r\n          return (\r\n            <BuyingAndSellingCard\r\n              orderId={sellingOrder._id}\r\n              createdAt={postDate}\r\n              status={sellingOrder.status}\r\n              ImgSource={sellingOrder.items[0].post.images}\r\n              condition={sellingOrder.items[0].post.condition}\r\n              title={sellingOrder.items[0].post.title}\r\n              buttonText=\"View order details\"\r\n              appointmentbuttonText=\"Make an appointment\"\r\n              RespondToCaseButton=\"Respond to case\"\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSellingPosts = (sellingPosts) => {\r\n    return sellingPosts == null || sellingPosts.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <div>\r\n        {sellingPosts.map((sellingPost) => {\r\n          const dateFormat = sellingPost.createdAt\r\n          const postDate = moment( dateFormat).format(\"MMMM Do, YYYY\")\r\n          return (\r\n            <BuyingAndSellingCard\r\n              orderId={sellingPost._id}\r\n              createdAt={postDate}\r\n              status={sellingPost.status}\r\n              ImgSource={sellingPost.images[0]}\r\n              condition={sellingPost.condition}\r\n              title={sellingPost.title}\r\n              buttonText=\"View order details\"\r\n              appointmentbuttonText=\"Make an appointment\"\r\n              RespondToCaseButton=\"Respond to case\"\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Row>\r\n          <Grid.Column width={10} textAlign=\"left\">\r\n            <Tab\r\n              menu={{ secondary: true, pointing: true }}\r\n              panes={this.panes}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { sellingOrders, sellingPosts } = state.order;\r\n  return {\r\n    sellingOrders,\r\n    sellingPosts,\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  handelviewSellingOrders: orderActions.viewSellingOrders,\r\n  handelviewSellingPosts: orderActions.viewSellingPosts,\r\n};\r\n\r\nconst connectedSellingOrders = connect(mapState, actionCreators)(SellingOrders);\r\n\r\nexport { connectedSellingOrders as SellingOrders };\r\n"]},"metadata":{},"sourceType":"module"}