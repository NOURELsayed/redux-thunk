{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/OrdersAsSeller.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Label } from 'semantic-ui-react';\nimport { OrderCard } from './OrderCard';\n\nclass OrdersAsSeller extends Component {\n  render() {\n    const {\n      ordersAsSeller,\n      returnRequestsSeller\n    } = this.props.orderHistory;\n    return /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: '1em 2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, \"Requested orders :\")), ordersAsSeller && ordersAsSeller.length > 0 ? ordersAsSeller.map(orderData => {\n      return /*#__PURE__*/React.createElement(OrderCard, {\n        viewAsSeller: true,\n        key: orderData._id,\n        orderData: orderData,\n        returnRequests: returnRequestsSeller && returnRequestsSeller.find(request => request.orderId === orderData._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }\n      });\n    }) : /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }, \"No orders requested till now\"));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    orderHistory\n  } = state.order;\n  return {\n    orderHistory\n  };\n}\n\nconst actionCreators = {};\nconst connectedOrderAsSeller = connect(mapState, actionCreators)(OrdersAsSeller);\nexport { connectedOrderAsSeller as OrdersAsSeller };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/OrdersAsSeller.jsx"],"names":["React","Component","connect","Grid","Label","OrderCard","OrdersAsSeller","render","ordersAsSeller","returnRequestsSeller","props","orderHistory","padding","length","map","orderData","_id","find","request","orderId","mapState","state","order","actionCreators","connectedOrderAsSeller"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAA2C,KAAKC,KAAL,CAAWC,YAA5D;AACA,wBAAQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADI,EAIFJ,cAAc,IAAIA,cAAc,CAACK,MAAf,GAAwB,CAA3C,GACGL,cAAc,CAACM,GAAf,CAAmBC,SAAS,IAAI;AAC5B,0BACE,oBAAC,SAAD;AACE,QAAA,YAAY,MADd;AAEE,QAAA,GAAG,EAAEA,SAAS,CAACC,GAFjB;AAGE,QAAA,SAAS,EAAED,SAHb;AAIE,QAAA,cAAc,EAAEN,oBAAoB,IAAIA,oBAAoB,CAACQ,IAArB,CAA0BC,OAAO,IAAIA,OAAO,CAACC,OAAR,KAAoBJ,SAAS,CAACC,GAAnE,CAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOC,KARL,CADH,gBAUM,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAdH,CAAR;AAgBH;;AAnBkC;;AAsBvC,SAASI,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEV,IAAAA;AAAF,MAAmBU,KAAK,CAACC,KAA/B;AACA,SAAO;AAAEX,IAAAA;AAAF,GAAP;AACH;;AAED,MAAMY,cAAc,GAAG,EAAvB;AAIA,MAAMC,sBAAsB,GAAGtB,OAAO,CAACkB,QAAD,EAAWG,cAAX,CAAP,CAAkCjB,cAAlC,CAA/B;AAGA,SAASkB,sBAAsB,IAAIlB,cAAnC","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Label } from 'semantic-ui-react';\r\nimport { OrderCard } from './OrderCard';\r\n\r\nclass OrdersAsSeller extends Component {\r\n    render() {\r\n        const { ordersAsSeller, returnRequestsSeller } = this.props.orderHistory;\r\n        return (<Grid style={{ padding: '1em 2em' }}>\r\n            <Grid.Row >\r\n                <Label size='big'>Requested orders :</Label>\r\n            </Grid.Row>\r\n            {(ordersAsSeller && ordersAsSeller.length > 0) ?\r\n                ordersAsSeller.map(orderData => { \r\n                    return (\r\n                      <OrderCard \r\n                        viewAsSeller \r\n                        key={orderData._id} \r\n                        orderData={orderData}  \r\n                        returnRequests={returnRequestsSeller && returnRequestsSeller.find(request => request.orderId === orderData._id)}\r\n                      />) \r\n                    })\r\n                : (<Label>No orders requested till now</Label>)}\r\n        </Grid>);\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { orderHistory } = state.order;\r\n    return { orderHistory };\r\n}\r\n\r\nconst actionCreators = {\r\n\r\n}\r\n\r\nconst connectedOrderAsSeller = connect(mapState, actionCreators)(OrdersAsSeller);\r\n\r\n\r\nexport { connectedOrderAsSeller as OrdersAsSeller };"]},"metadata":{},"sourceType":"module"}