{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReturnRequest/ReturnRequest.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { orderActions } from \"../../actions\";\nimport { Grid, Image, Checkbox, Button, Label, TextArea, Popup } from \"semantic-ui-react\";\nimport { backendUrl } from \"../../config\";\nimport { orderConstants } from \"../../constants\";\n\nclass ReturnRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedItems: {}\n    };\n\n    this.itemChecked = (e, {\n      checked,\n      item_id\n    }) => {\n      const checkedItems = { ...this.state.checkedItems\n      };\n      checkedItems[item_id] = {\n        selected: checked,\n        reason: \"\",\n        error: false\n      };\n      this.setState({\n        checkedItems\n      });\n    };\n\n    this.itemReturnReasonUpdated = (e, {\n      value,\n      item_id\n    }) => {\n      const checkedItems = { ...this.state.checkedItems\n      };\n      checkedItems[item_id] = { ...checkedItems[item_id],\n        reason: value\n      };\n      this.setState({\n        checkedItems\n      });\n    };\n\n    this.submitReturnRequest = () => {\n      this.props.submitReturnRequest(this.props.orderDetailsData._id, this.state.checkedItems);\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.viewOrder(this.props.match.params.orderid);\n  }\n\n  render() {\n    const {\n      items\n    } = this.props.orderDetailsData;\n    const {\n      returnRequestsOrder\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: \"1em 3em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Please select items to be returned\")), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Item\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Selected\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Reason\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Status\"))), items.map(item => {\n      let image = \"\";\n\n      if (item.post.images && item.post.images.length > 0) {\n        image = item.post.images[0];\n      }\n\n      return /*#__PURE__*/React.createElement(Grid.Row, {\n        key: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        size: \"tiny\",\n        src: `${backendUrl}/${image}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, item.post.title), returnRequestsOrder.find(e => e.item._id === item._id) === undefined ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        disabled: item.status === orderConstants.ITEM_STATUS_REJECTED_BY_BUYER,\n        item_id: item._id,\n        onChange: this.itemChecked,\n        checked: this.state.checkedItems[item._id] && this.state.checkedItems[item._id].selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      })), item.status !== orderConstants.ITEM_STATUS_REJECTED_BY_BUYER ? /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 80\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        content: \"Reason Length must be at least 6 letters\",\n        trigger: /*#__PURE__*/React.createElement(TextArea, {\n          item_id: item._id,\n          disabled: !this.state.checkedItems[item._id] || !this.state.checkedItems[item._id].selected,\n          value: this.state.checkedItems[item._id] && this.state.checkedItems[item._id].reason,\n          onChange: this.itemReturnReasonUpdated,\n          style: {\n            minHeight: 70\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      })) : /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 34\n        }\n      }, \"You already rejected to pick up this item\")) : 'Return Request Submitted');\n    }), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submitReturnRequest,\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    orderDetailsData,\n    returnRequestsOrder\n  } = state.order;\n  return {\n    orderDetailsData,\n    returnRequestsOrder,\n    user\n  };\n}\n\nconst actionCreators = {\n  viewOrder: orderActions.viewOrder,\n  submitReturnRequest: orderActions.returnOrderRequestSent\n};\nconst connectedReturnRequest = connect(mapState, actionCreators)(ReturnRequest);\nexport { connectedReturnRequest as ReturnRequest };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReturnRequest/ReturnRequest.jsx"],"names":["React","Component","connect","orderActions","Grid","Image","Checkbox","Button","Label","TextArea","Popup","backendUrl","orderConstants","ReturnRequest","state","checkedItems","itemChecked","e","checked","item_id","selected","reason","error","setState","itemReturnReasonUpdated","value","submitReturnRequest","props","orderDetailsData","_id","componentDidMount","viewOrder","match","params","orderid","render","items","returnRequestsOrder","padding","map","item","image","post","images","length","title","find","undefined","status","ITEM_STATUS_REJECTED_BY_BUYER","minHeight","mapState","user","authentication","order","actionCreators","returnOrderRequestSent","connectedReturnRequest"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { orderActions } from \"../../actions\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Checkbox,\r\n  Button,\r\n  Label,\r\n  TextArea,\r\n  Popup,\r\n} from \"semantic-ui-react\";\r\nimport { backendUrl } from \"../../config\";\r\nimport { orderConstants } from \"../../constants\";\r\n\r\nclass ReturnRequest extends Component {\r\n  state = {\r\n    checkedItems: {},\r\n  };\r\n\r\n  itemChecked = (e, { checked, item_id }) => {\r\n    const checkedItems = { ...this.state.checkedItems };\r\n    checkedItems[item_id] = {\r\n      selected: checked,\r\n      reason: \"\",\r\n      error: false,\r\n    };\r\n    this.setState({ checkedItems });\r\n  };\r\n\r\n  itemReturnReasonUpdated = (e, { value, item_id }) => {\r\n    const checkedItems = { ...this.state.checkedItems };\r\n\r\n    checkedItems[item_id] = {\r\n      ...checkedItems[item_id],\r\n      reason: value,\r\n    };\r\n    this.setState({ checkedItems });\r\n  };\r\n\r\n  submitReturnRequest = () => {\r\n    this.props.submitReturnRequest(\r\n      this.props.orderDetailsData._id,\r\n      this.state.checkedItems\r\n    );\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.viewOrder(this.props.match.params.orderid);\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.props.orderDetailsData;\r\n    const { returnRequestsOrder } = this.props;\r\n    \r\n\r\n    return (\r\n      <Grid style={{ padding: \"1em 3em\" }}>\r\n        <Grid.Row>\r\n          <Label size='large'>Please select items to be returned</Label>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <strong>Item</strong>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <strong>Title</strong>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <strong>Selected</strong>\r\n          </Grid.Column>\r\n          <Grid.Column width={3}>\r\n            <strong>Reason</strong>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <strong>Status</strong>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        {items.map(\r\n          (item) => {\r\n            let image = \"\";\r\n            if (item.post.images && item.post.images.length > 0) {\r\n              image = item.post.images[0];\r\n            }\r\n\r\n            return (\r\n              <Grid.Row key={item._id}>\r\n                <Grid.Column>\r\n                  <Image size='tiny' src={`${backendUrl}/${image}`} />\r\n                </Grid.Column>\r\n                <Grid.Column>{item.post.title}</Grid.Column>\r\n                {returnRequestsOrder.find(e => e.item._id === item._id) === undefined ?\r\n                (<React.Fragment>\r\n                <Grid.Column>\r\n                  <Checkbox\r\n                    disabled={item.status===orderConstants.ITEM_STATUS_REJECTED_BY_BUYER}\r\n                    item_id={item._id}\r\n                    onChange={this.itemChecked}\r\n                    checked={\r\n                      this.state.checkedItems[item._id] &&\r\n                      this.state.checkedItems[item._id].selected\r\n                    }\r\n                  />\r\n                </Grid.Column>\r\n                {item.status!==orderConstants.ITEM_STATUS_REJECTED_BY_BUYER ? (<Grid.Column width={3}>\r\n                  <Popup\r\n                    content='Reason Length must be at least 6 letters'\r\n                    trigger={\r\n                      <TextArea\r\n                        item_id={item._id}\r\n                        disabled={\r\n                          !this.state.checkedItems[item._id] ||\r\n                          !this.state.checkedItems[item._id].selected\r\n                        }\r\n                        value={\r\n                          this.state.checkedItems[item._id] &&\r\n                          this.state.checkedItems[item._id].reason\r\n                        }\r\n                        onChange={this.itemReturnReasonUpdated}\r\n                        style={{ minHeight: 70 }}\r\n                      ></TextArea>\r\n                    }\r\n                  />\r\n                </Grid.Column>):(<Label>You already rejected to pick up this item</Label>)}\r\n                </React.Fragment>) : ('Return Request Submitted')}\r\n              </Grid.Row>\r\n            );\r\n          }\r\n        )}\r\n\r\n        <Grid.Row>\r\n          <Button onClick={this.submitReturnRequest} positive>\r\n            Submit\r\n          </Button>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const { orderDetailsData, returnRequestsOrder } = state.order;\r\n  return { orderDetailsData, returnRequestsOrder, user };\r\n}\r\n\r\nconst actionCreators = {\r\n  viewOrder: orderActions.viewOrder,\r\n  submitReturnRequest: orderActions.returnOrderRequestSent,\r\n};\r\n\r\nconst connectedReturnRequest = connect(mapState, actionCreators)(ReturnRequest);\r\n\r\nexport { connectedReturnRequest as ReturnRequest };\r\n"]},"metadata":{},"sourceType":"module"}