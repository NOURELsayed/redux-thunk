{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/OrderItemAsSeller.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Card, Label, Button, Image, Segment, Form } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { getFormatedDate } from \"../../components/_shared/DateTimeFormat\";\nimport { orderConstants } from \"../../constants\";\nimport { imageUrl } from \"../../config\";\nimport { orderActions } from \"../../actions\";\nimport { returnRequestsActions } from \"../../actions\";\nimport { sellerRespondPeriod } from \"../../config/development\";\nimport { validatorActions } from \"../../actions\"; // const frontendUrl = 'http://localhost:5000'; // TODO: NEED TO RETRIEVE IT FROM CONFOG FILE\n\nconst addDays = (date, days) => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\nclass OrderItemAsSeller extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getReturnNote = () => {\n      const now = new Date();\n      const returnWindow = new Date(this.props.returnWindow);\n\n      if (now < returnWindow) {\n        return \"Return window will close at : \" + this.props.combinedDate;\n      }\n\n      return \"Return window closed at : \" + this.props.combinedDate;\n    };\n\n    this.dropOffTimeAndSPClicked = () => {\n      this.props.sellerChooseDropOffDetails(this.props.orderData._id, this.props.itemData._id);\n    };\n\n    this.arrivedAtSPBtnClicked = () => {\n      this.props.arrivedAtSPBtnClicked(this.props.orderData._id);\n    };\n\n    this.handleSellerDecision = async (e, {\n      value\n    }) => {\n      this.props.returnRequest && (await this.props.sellerDecision(value, this.props.returnRequest._id));\n      window.location.reload(false);\n    };\n\n    this.schemaRejectReason = {\n      required: [\"rejectReason\"],\n      properties: {\n        rejectReason: {\n          title: \"rejectReason\",\n          type: \"string\",\n          minLength: 1,\n          maxLength: 500\n        }\n      }\n    };\n\n    this.handleChangeReason = (e, {\n      name,\n      value\n    }) => {\n      this.props.validateInput(this.schemaRejectReason, name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleRejectRequest = async () => {\n      const {\n        rejectReason\n      } = this.state;\n      await this.props.validateForm(this.schemaRejectReason, {\n        rejectReason\n      });\n      if (!this.props.validation.valid) return;\n      const body = {\n        reason: rejectReason\n      };\n      await this.props.sellerDecision(\"reject\", this.props.returnRequest._id, body);\n      window.location.reload();\n    };\n\n    this.state = {\n      flag: true,\n      rejectReason: \"\"\n    };\n  }\n\n  getSellerWindowNote(returnRequest) {\n    const sellerPeriodWindow = addDays(returnRequest.createdAt, sellerRespondPeriod) + \"\";\n    const dividedDate = sellerPeriodWindow.split(\" \");\n    const day = dividedDate[0];\n    const month = dividedDate[1];\n    const dayNumber = dividedDate[2];\n    const year = dividedDate[3];\n    const combinedDate = day + \" \" + dayNumber + \" \" + month + \" \" + year;\n    const now = new Date();\n    const compareThisDateObject = new Date(sellerPeriodWindow);\n\n    if (now < compareThisDateObject) {\n      return \"Your response window will close at : \" + combinedDate;\n    } else {\n      if (now > compareThisDateObject) {\n        if (returnRequest.sellerData.decision === undefined) {\n          return \"Your reponse window closed at : \" + combinedDate;\n        }\n\n        return \"Your reponse window closed at : \" + combinedDate;\n      }\n    }\n  }\n\n  render() {\n    const {\n      itemData,\n      orderStatus,\n      orderData,\n      returnRequest\n    } = this.props;\n    const reviewBuyer = orderData.reviews.filter(review => review.revieweeType === \"buyer\");\n    const canReview = orderStatus === orderConstants.ORDER_STATUS_ORDER_PICKED_UP || orderStatus === orderConstants.ORDER_STATUS_REJECTED_SOME_BY_BUYER;\n    let image = \"\";\n\n    if (itemData.post) {\n      image = itemData.post.images[0];\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      floated: \"left\",\n      size: \"tiny\",\n      src: `${imageUrl}/${image}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/post/${itemData.post._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, itemData.post.title)), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"Condition : \"), \" \", itemData.post.condition), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, \"Status : \"), \" \", itemData.status)))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, reviewBuyer.length === 1 ? /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      as: Link,\n      disabled: !canReview,\n      to: {\n        pathname: `/review/details`,\n        review: reviewBuyer[0]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"View Review\")) : /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, itemData.status === orderConstants.ITEM_STATUS_RETURN_REQUESTED ? /*#__PURE__*/React.createElement(Button, {\n      disabled: orderStatus === orderConstants.ORDER_STATUS_ORDER_PICKED_UP || orderStatus === orderConstants.ORDER_STATUS_REJECTED_SOME_BY_BUYER,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, \"Accept Return Item\") : itemData.status === orderConstants.ITEM_STATUS_WAITING_DROP_OFF ? orderData.sellerData.SP && orderData.sellerData.timeslot ? /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \"DropOff Time : \"), getFormatedDate(orderData.sellerData.timeslot)), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.dropOffTimeAndSPClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 27\n      }\n    }, \" \", \"Update\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      onClick: this.arrivedAtSPBtnClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 27\n      }\n    }, \" \", \"Arrived SP\")))) : /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      onClick: this.dropOffTimeAndSPClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \" \", \"Drop off time and Service point\") : /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, \"Item arrived service point\")), itemData.status === orderConstants.ITEM_STATUS_SOLD ? returnRequest && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    }, this.getReturnNote(this.props.returnWindow), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }), returnRequest && returnRequest.reason && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 27\n      }\n    }, \"Buyer's Return Reason: \"), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 27\n      }\n    }, returnRequest.reason)), returnRequest && !returnRequest.sellerData.decision && /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, this.getSellerWindowNote(returnRequest))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }), returnRequest && !returnRequest.sellerData.decision && returnRequest.status === \"open\" ? /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, \"Buyer has requested a return request\", \" \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      onClick: e => {\n        this.props.sellerDecision(\"accept\", this.props.returnRequest._id);\n      },\n      value: \"accept\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, \"Accept\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      onClick: this.handleRejectRequest,\n      value: \"reject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, \"Reject\")), \" \", /*#__PURE__*/React.createElement(Label, {\n      style: {\n        marginTop: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 27\n      }\n    }, \"Rejection Reason\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Form.TextArea, {\n      name: \"rejectReason\",\n      type: \"string\",\n      placeholder: \"type reason here ...\",\n      onChange: this.handleChangeReason,\n      value: this.state.rejectReason,\n      error: this.props.validation.errors && this.props.validation.errors.rejectReason,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }\n    })))) : /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    }, returnRequest && returnRequest.sellerData.decision && returnRequest.sellerData.decision === 'reject' && \"You Rejected the return request\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, returnRequest && returnRequest.sellerData.decision && returnRequest.sellerData.decision === 'accept' && \"You Accepted the return request\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, returnRequest && returnRequest.status === \"canceled\" && \"Request Canceled\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }, returnRequest && returnRequest.status === \"closed\" && \"Request Closed\"))) : /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nfunction mapState(state) {\n  return { ...state\n  };\n}\n\nconst actionCreators = {\n  sellerChooseDropOffDetails: orderActions.sellerChooseDropOffDetails,\n  arrivedAtSPBtnClicked: orderActions.arrivedAtSPBtnClicked,\n  sellerDecision: returnRequestsActions.sellerDecision,\n  validateInput: validatorActions.validateInput,\n  validateForm: validatorActions.validateForm\n};\nconst connectedOrderItemAsSeller = connect(mapState, actionCreators)(OrderItemAsSeller);\nexport { connectedOrderItemAsSeller as OrderItemAsSeller };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/OrderItemAsSeller.jsx"],"names":["React","Component","connect","Grid","Card","Label","Button","Image","Segment","Form","Link","getFormatedDate","orderConstants","imageUrl","orderActions","returnRequestsActions","sellerRespondPeriod","validatorActions","addDays","date","days","result","Date","setDate","getDate","OrderItemAsSeller","constructor","props","getReturnNote","now","returnWindow","combinedDate","dropOffTimeAndSPClicked","sellerChooseDropOffDetails","orderData","_id","itemData","arrivedAtSPBtnClicked","handleSellerDecision","e","value","returnRequest","sellerDecision","window","location","reload","schemaRejectReason","required","properties","rejectReason","title","type","minLength","maxLength","handleChangeReason","name","validateInput","setState","handleRejectRequest","state","validateForm","validation","valid","body","reason","flag","getSellerWindowNote","sellerPeriodWindow","createdAt","dividedDate","split","day","month","dayNumber","year","compareThisDateObject","sellerData","decision","undefined","render","orderStatus","reviewBuyer","reviews","filter","review","revieweeType","canReview","ORDER_STATUS_ORDER_PICKED_UP","ORDER_STATUS_REJECTED_SOME_BY_BUYER","image","post","images","condition","status","length","pathname","ITEM_STATUS_RETURN_REQUESTED","ITEM_STATUS_WAITING_DROP_OFF","SP","timeslot","ITEM_STATUS_SOLD","marginTop","errors","mapState","actionCreators","connectedOrderItemAsSeller"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Label,\r\n  Button,\r\n  Image,\r\n  Segment,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getFormatedDate } from \"../../components/_shared/DateTimeFormat\";\r\nimport { orderConstants } from \"../../constants\";\r\nimport { imageUrl } from \"../../config\";\r\nimport { orderActions } from \"../../actions\";\r\nimport { returnRequestsActions } from \"../../actions\";\r\nimport { sellerRespondPeriod } from \"../../config/development\";\r\nimport { validatorActions } from \"../../actions\";\r\n// const frontendUrl = 'http://localhost:5000'; // TODO: NEED TO RETRIEVE IT FROM CONFOG FILE\r\n\r\nconst addDays = (date, days) => {\r\n  const result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n};\r\n\r\nclass OrderItemAsSeller extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      flag: true,\r\n      rejectReason: \"\",\r\n    };\r\n  }\r\n\r\n  getSellerWindowNote(returnRequest) {\r\n    const sellerPeriodWindow =\r\n      addDays(returnRequest.createdAt, sellerRespondPeriod) + \"\";\r\n    const dividedDate = sellerPeriodWindow.split(\" \");\r\n    const day = dividedDate[0];\r\n    const month = dividedDate[1];\r\n    const dayNumber = dividedDate[2];\r\n    const year = dividedDate[3];\r\n    const combinedDate = day + \" \" + dayNumber + \" \" + month + \" \" + year;\r\n\r\n    const now = new Date();\r\n\r\n    const compareThisDateObject = new Date(sellerPeriodWindow);\r\n\r\n    if (now < compareThisDateObject) {\r\n      return \"Your response window will close at : \" + combinedDate;\r\n    } else {\r\n      if (now > compareThisDateObject) {\r\n        if (returnRequest.sellerData.decision === undefined) {\r\n          return \"Your reponse window closed at : \" + combinedDate;\r\n        }\r\n\r\n        return \"Your reponse window closed at : \" + combinedDate;\r\n      }\r\n    }\r\n  }\r\n\r\n  getReturnNote = () => {\r\n    const now = new Date();\r\n\r\n    const returnWindow = new Date(this.props.returnWindow);\r\n\r\n    if (now < returnWindow) {\r\n      return \"Return window will close at : \" + this.props.combinedDate;\r\n    }\r\n\r\n    return \"Return window closed at : \" + this.props.combinedDate;\r\n  };\r\n\r\n  dropOffTimeAndSPClicked = () => {\r\n    this.props.sellerChooseDropOffDetails(\r\n      this.props.orderData._id,\r\n      this.props.itemData._id\r\n    );\r\n  };\r\n\r\n  arrivedAtSPBtnClicked = () => {\r\n    this.props.arrivedAtSPBtnClicked(this.props.orderData._id);\r\n  };\r\n\r\n  handleSellerDecision = async (e, { value }) => {\r\n    this.props.returnRequest &&\r\n      (await this.props.sellerDecision(value, this.props.returnRequest._id));\r\n    window.location.reload(false);\r\n  };\r\n  schemaRejectReason = {\r\n    required: [\"rejectReason\"],\r\n    properties: {\r\n      rejectReason: {\r\n        title: \"rejectReason\",\r\n        type: \"string\",\r\n        minLength: 1,\r\n        maxLength: 500,\r\n      },\r\n    },\r\n  };\r\n  handleChangeReason = (e, { name, value }) => {\r\n    this.props.validateInput(this.schemaRejectReason, name, value);\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleRejectRequest = async () => {\r\n    const { rejectReason } = this.state;\r\n    await this.props.validateForm(this.schemaRejectReason, {\r\n      rejectReason,\r\n    });\r\n    if (!this.props.validation.valid) return;\r\n    const body = { reason: rejectReason };\r\n    await this.props.sellerDecision(\r\n      \"reject\",\r\n      this.props.returnRequest._id,\r\n      body\r\n    );\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const { itemData, orderStatus, orderData, returnRequest } = this.props;\r\n    const reviewBuyer = orderData.reviews.filter(\r\n      (review) => review.revieweeType === \"buyer\"\r\n    );\r\n    const canReview =\r\n      orderStatus === orderConstants.ORDER_STATUS_ORDER_PICKED_UP ||\r\n      orderStatus === orderConstants.ORDER_STATUS_REJECTED_SOME_BY_BUYER;\r\n\r\n    let image = \"\";\r\n    if (itemData.post) {\r\n      image = itemData.post.images[0];\r\n    }\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column width={6}>\r\n            <Card>\r\n              <Card.Content>\r\n                <Image\r\n                  floated='left'\r\n                  size='tiny'\r\n                  src={`${imageUrl}/${image}`}\r\n                />\r\n                <Card.Header>\r\n                  <a href={`/post/${itemData.post._id}`}>\r\n                    {itemData.post.title}\r\n                  </a>\r\n                </Card.Header>\r\n\r\n                <Card.Description>\r\n                  <strong>Condition : </strong> {itemData.post.condition}\r\n                </Card.Description>\r\n                <Card.Description>\r\n                  <strong>Status : </strong> {itemData.status}\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Grid>\r\n              {reviewBuyer.length === 1 ? (\r\n                <Grid.Row>\r\n                  <Button\r\n                    as={Link}\r\n                    disabled={!canReview}\r\n                    to={{ pathname: `/review/details`, review: reviewBuyer[0] }}\r\n                  >\r\n                    View Review\r\n                  </Button>\r\n                </Grid.Row>\r\n              ) : (\r\n                <Grid.Row></Grid.Row>\r\n              )}\r\n              <Grid.Row>\r\n                {itemData.status ===\r\n                orderConstants.ITEM_STATUS_RETURN_REQUESTED ? (\r\n                  <Button\r\n                    disabled={\r\n                      orderStatus ===\r\n                        orderConstants.ORDER_STATUS_ORDER_PICKED_UP ||\r\n                      orderStatus ===\r\n                        orderConstants.ORDER_STATUS_REJECTED_SOME_BY_BUYER\r\n                    }\r\n                  >\r\n                    Accept Return Item\r\n                  </Button>\r\n                ) : itemData.status ===\r\n                  orderConstants.ITEM_STATUS_WAITING_DROP_OFF ? (\r\n                  orderData.sellerData.SP && orderData.sellerData.timeslot ? (\r\n                    <Grid>\r\n                      <Grid.Row>\r\n                        <strong>DropOff Time : </strong>\r\n                        {getFormatedDate(orderData.sellerData.timeslot)}\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Button onClick={this.dropOffTimeAndSPClicked}>\r\n                            {\" \"}\r\n                            Update\r\n                          </Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={4}>\r\n                          <Button positive onClick={this.arrivedAtSPBtnClicked}>\r\n                            {\" \"}\r\n                            Arrived SP\r\n                          </Button>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  ) : (\r\n                    <Button positive onClick={this.dropOffTimeAndSPClicked}>\r\n                      {\" \"}\r\n                      Drop off time and Service point\r\n                    </Button>\r\n                  )\r\n                ) : (\r\n                  <Label>Item arrived service point</Label>\r\n                )}\r\n              </Grid.Row>\r\n              {itemData.status === orderConstants.ITEM_STATUS_SOLD ? (\r\n                returnRequest && (\r\n                  <div>\r\n                    <Grid.Row>\r\n                      <Label>\r\n                        {this.getReturnNote(this.props.returnWindow)}{\" \"}\r\n                      </Label>\r\n                      <br />\r\n                      <br />\r\n                      {returnRequest && returnRequest.reason && (\r\n                        <>\r\n                          <Label>Buyer's Return Reason: </Label>\r\n                          <Segment>{returnRequest.reason}</Segment>\r\n                        </>\r\n                      )}\r\n                      {returnRequest && !returnRequest.sellerData.decision && (\r\n                        <Label>{this.getSellerWindowNote(returnRequest)}</Label>\r\n                      )}\r\n                    </Grid.Row>\r\n                    <br />\r\n                    {returnRequest &&\r\n                    !returnRequest.sellerData.decision &&\r\n                    returnRequest.status === \"open\" ? (\r\n                      <Grid.Row>\r\n                        <Segment>\r\n                          Buyer has requested a return request{\" \"}\r\n                          <div>\r\n                            <Button\r\n                              color='green'\r\n                              onClick={(e) => {\r\n                                this.props.sellerDecision(\r\n                                  \"accept\",\r\n                                  this.props.returnRequest._id\r\n                                );\r\n                              }}\r\n                              value='accept'\r\n                            >\r\n                              Accept\r\n                            </Button>\r\n                            <Button\r\n                              color='red'\r\n                              onClick={this.handleRejectRequest}\r\n                              value='reject'\r\n                            >\r\n                              Reject\r\n                            </Button>\r\n                          </div>{\" \"}\r\n                          <Label style={{ marginTop: \"5%\" }}>\r\n                            Rejection Reason\r\n                          </Label>\r\n                          <Form>\r\n                            <Form.TextArea\r\n                              name='rejectReason'\r\n                              type='string'\r\n                              placeholder='type reason here ...'\r\n                              onChange={this.handleChangeReason}\r\n                              value={this.state.rejectReason}\r\n                              error={\r\n                                this.props.validation.errors &&\r\n                                this.props.validation.errors.rejectReason\r\n                              }\r\n                            />\r\n                          </Form>\r\n                        </Segment>\r\n                      </Grid.Row>\r\n                    ) : (\r\n                      <Label>\r\n                        <div style={{ marginTop: \"3%\"}} >\r\n                          {returnRequest &&\r\n                            returnRequest.sellerData.decision &&\r\n                            returnRequest.sellerData.decision === 'reject' &&\r\n                            \"You Rejected the return request\"}\r\n                        </div>\r\n                        <div style={{ marginTop: \"3%\" }}>\r\n                          {returnRequest &&\r\n                            returnRequest.sellerData.decision &&\r\n                            returnRequest.sellerData.decision === 'accept' &&\r\n                            \"You Accepted the return request\"}\r\n                        </div>\r\n                        <div style={{ marginTop: \"3%\" }}>\r\n                          {returnRequest &&\r\n                            returnRequest.status === \"canceled\" &&\r\n                            \"Request Canceled\"}\r\n                        </div>\r\n                        <div style={{ marginTop: \"3%\" }}>\r\n                          {returnRequest &&\r\n                            returnRequest.status === \"closed\" &&\r\n                            \"Request Closed\"}\r\n                        </div>\r\n                      </Label>\r\n                    )}\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <Grid.Row></Grid.Row>\r\n              )}\r\n            </Grid>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  return { ...state };\r\n}\r\n\r\nconst actionCreators = {\r\n  sellerChooseDropOffDetails: orderActions.sellerChooseDropOffDetails,\r\n  arrivedAtSPBtnClicked: orderActions.arrivedAtSPBtnClicked,\r\n  sellerDecision: returnRequestsActions.sellerDecision,\r\n  validateInput: validatorActions.validateInput,\r\n  validateForm: validatorActions.validateForm,\r\n};\r\n\r\nconst connectedOrderItemAsSeller = connect(\r\n  mapState,\r\n  actionCreators\r\n)(OrderItemAsSeller);\r\n\r\nexport { connectedOrderItemAsSeller as OrderItemAsSeller };\r\n"]},"metadata":{},"sourceType":"module"}