{"ast":null,"code":"import { httpService } from './';\nimport { apiUrl } from '../config';\nconst baseUrl = `${apiUrl}/question`;\nexport const questionService = {\n  postQuestion,\n  postAnswer,\n  fetchQuestionsToUserRequest,\n  fetchPostQuestion\n};\n\nasync function postQuestion(questionObj) {\n  return httpService.post(`${baseUrl}/ask`, questionObj);\n}\n\nasync function postAnswer(answerObj) {\n  return httpService.post(`${baseUrl}/answer`, answerObj);\n}\n\nasync function fetchQuestionsToUserRequest(options) {\n  return httpService.get(`${baseUrl}/user/to`, options);\n}\n\nasync function fetchPostQuestion(postId) {\n  return httpService.get(`${baseUrl}/post/${postId}`);\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/services/question.service.js"],"names":["httpService","apiUrl","baseUrl","questionService","postQuestion","postAnswer","fetchQuestionsToUserRequest","fetchPostQuestion","questionObj","post","answerObj","options","get","postId"],"mappings":"AAAA,SAASA,WAAT,QAA4B,IAA5B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,MAAMC,OAAO,GAAG,GAAED,MAAO,WAAzB;AAEA,OAAO,MAAME,eAAe,GAAG;AAC3BC,EAAAA,YAD2B;AACdC,EAAAA,UADc;AACHC,EAAAA,2BADG;AAE3BC,EAAAA;AAF2B,CAAxB;;AAIP,eAAeH,YAAf,CAA4BI,WAA5B,EAAwC;AACpC,SAAOR,WAAW,CAACS,IAAZ,CAAkB,GAAEP,OAAQ,MAA5B,EAAmCM,WAAnC,CAAP;AACH;;AAED,eAAeH,UAAf,CAA0BK,SAA1B,EAAoC;AAChC,SAAOV,WAAW,CAACS,IAAZ,CAAkB,GAAEP,OAAQ,SAA5B,EAAqCQ,SAArC,CAAP;AACH;;AAED,eAAeJ,2BAAf,CAA2CK,OAA3C,EAAmD;AAC/C,SAAOX,WAAW,CAACY,GAAZ,CAAiB,GAAEV,OAAQ,UAA3B,EAAqCS,OAArC,CAAP;AACH;;AAED,eAAeJ,iBAAf,CAAiCM,MAAjC,EAAwC;AACpC,SAAOb,WAAW,CAACY,GAAZ,CAAiB,GAAEV,OAAQ,SAAQW,MAAO,EAA1C,CAAP;AACH","sourcesContent":["import { httpService } from './';\r\nimport { apiUrl } from '../config';\r\nconst baseUrl= `${apiUrl}/question`\r\n\r\nexport const questionService = {\r\n    postQuestion,postAnswer,fetchQuestionsToUserRequest,\r\n    fetchPostQuestion\r\n}\r\nasync function postQuestion(questionObj){\r\n    return httpService.post(`${baseUrl}/ask`, questionObj);\r\n}\r\n\r\nasync function postAnswer(answerObj){\r\n    return httpService.post(`${baseUrl}/answer`,answerObj);\r\n}\r\n\r\nasync function fetchQuestionsToUserRequest(options){\r\n    return httpService.get(`${baseUrl}/user/to`,options);\r\n}\r\n\r\nasync function fetchPostQuestion(postId){\r\n    return httpService.get(`${baseUrl}/post/${postId}`);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}