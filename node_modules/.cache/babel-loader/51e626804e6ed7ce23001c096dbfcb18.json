{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/moneyWithdrawalContainer/createMoneyWithdrawalPage.jsx\";\nimport React, { Component } from \"react\";\nimport { ChooseSPAndTime } from \"../ServicePoint\";\nimport { Input, Grid, Form, Button } from \"semantic-ui-react\";\nimport { moneyWithdrawalActions } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport \"./style.css\";\n\nclass CreateWithdrawal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setAmount = e => {\n      if (isNaN(e.target.value)) {\n        return;\n      } else {\n        this.props.amountChange(e.target.value);\n      }\n    };\n\n    this.handleSubmit = async () => {\n      const {\n        withdrawalRequests\n      } = this.props;\n      const {\n        servicePoint\n      } = this.props;\n      const withdrawalObj = {\n        amount: Number(withdrawalRequests.amount),\n        SP: servicePoint.servicePointId,\n        timeslot: this.formatDate(servicePoint.arrivalDate, servicePoint.arrivalTime)\n      };\n      await this.props.saveRequest(withdrawalObj);\n    };\n  }\n\n  formatDate(date, time) {\n    const Time = time + \":00\";\n    return new Date(date + \"T\" + Time).toISOString();\n  }\n\n  enableConfirmPickup() {\n    const {\n      withdrawalRequests\n    } = this.props;\n    const {\n      servicePoint\n    } = this.props;\n\n    if (servicePoint.servicePointId && servicePoint.arrivalDate && withdrawalRequests.amount && servicePoint.arrivalTime) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"amountClass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Amount\",\n      placeholder: \"\",\n      defaultValue: \"\",\n      type: \"number\",\n      size: \"mini\",\n      min: 1,\n      onChange: e => this.setAmount(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      disabled: !this.enableConfirmPickup(),\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Confirm Withdrawal Request\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(ChooseSPAndTime, {\n      renderType: \"withdrawal\",\n      next: this.pickupInfoConfirmed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    withdrawalRequests\n  } = state.moneyWithdrawal;\n  const {\n    servicePoint\n  } = state;\n  return {\n    user,\n    withdrawalRequests,\n    servicePoint\n  };\n}\n\nconst actionCreators = {\n  getOneRequest: moneyWithdrawalActions.getOneRequest,\n  amountChange: moneyWithdrawalActions.amountChange,\n  timeSlotChange: moneyWithdrawalActions.timeSlotChange,\n  SPChange: moneyWithdrawalActions.SPChange,\n  editRequest: moneyWithdrawalActions.editRequest,\n  saveRequest: moneyWithdrawalActions.saveRequest\n};\nconst connectedCreateWithdrawal = connect(mapState, actionCreators)(CreateWithdrawal);\nexport { connectedCreateWithdrawal as createWithdrawal };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/moneyWithdrawalContainer/createMoneyWithdrawalPage.jsx"],"names":["React","Component","ChooseSPAndTime","Input","Grid","Form","Button","moneyWithdrawalActions","connect","CreateWithdrawal","setAmount","e","isNaN","target","value","props","amountChange","handleSubmit","withdrawalRequests","servicePoint","withdrawalObj","amount","Number","SP","servicePointId","timeslot","formatDate","arrivalDate","arrivalTime","saveRequest","date","time","Time","Date","toISOString","enableConfirmPickup","render","pickupInfoConfirmed","mapState","state","user","authentication","moneyWithdrawal","actionCreators","getOneRequest","timeSlotChange","SPChange","editRequest","connectedCreateWithdrawal","createWithdrawal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ChooseSPAndTime } from \"../ServicePoint\";\r\nimport { Input, Grid, Form, Button } from \"semantic-ui-react\";\r\nimport { moneyWithdrawalActions } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.css\";\r\nclass CreateWithdrawal extends Component {\r\n  setAmount = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      return;\r\n    } else {\r\n      this.props.amountChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { withdrawalRequests } = this.props;\r\n    const { servicePoint } = this.props;\r\n    const withdrawalObj = {\r\n      amount: Number(withdrawalRequests.amount),\r\n      SP: servicePoint.servicePointId,\r\n      timeslot: this.formatDate(\r\n        servicePoint.arrivalDate,\r\n        servicePoint.arrivalTime\r\n      ),\r\n    };\r\n\r\n    await this.props.saveRequest(withdrawalObj);\r\n  };\r\n  formatDate(date, time) {\r\n    const Time = time + \":00\";\r\n    return new Date(date + \"T\" + Time).toISOString();\r\n  }\r\n  enableConfirmPickup() {\r\n    const { withdrawalRequests } = this.props;\r\n    const { servicePoint } = this.props;\r\n    if (\r\n      servicePoint.servicePointId &&\r\n      servicePoint.arrivalDate &&\r\n      withdrawalRequests.amount &&\r\n      servicePoint.arrivalTime\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={4}>\r\n              <Form className=\"amountClass\">\r\n                <Form.Field>\r\n                  <Input\r\n                    label={\"Amount\"}\r\n                    placeholder={\"\"}\r\n                    defaultValue={\"\"}\r\n                    type=\"number\"\r\n                    size={\"mini\"}\r\n                    min={1}\r\n                    onChange={(e) => this.setAmount(e)}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column width={8}></Grid.Column>\r\n            <Button\r\n              positive\r\n              disabled={!this.enableConfirmPickup()}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Confirm Withdrawal Request\r\n            </Button>\r\n            <Grid.Column width={4}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <ChooseSPAndTime\r\n          renderType={\"withdrawal\"}\r\n          next={this.pickupInfoConfirmed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const { withdrawalRequests } = state.moneyWithdrawal;\r\n  const { servicePoint } = state;\r\n  return {\r\n    user,\r\n    withdrawalRequests,\r\n    servicePoint,\r\n  };\r\n}\r\nconst actionCreators = {\r\n  getOneRequest: moneyWithdrawalActions.getOneRequest,\r\n  amountChange: moneyWithdrawalActions.amountChange,\r\n  timeSlotChange: moneyWithdrawalActions.timeSlotChange,\r\n  SPChange: moneyWithdrawalActions.SPChange,\r\n  editRequest: moneyWithdrawalActions.editRequest,\r\n  saveRequest: moneyWithdrawalActions.saveRequest,\r\n};\r\nconst connectedCreateWithdrawal = connect(\r\n  mapState,\r\n  actionCreators\r\n)(CreateWithdrawal);\r\nexport { connectedCreateWithdrawal as createWithdrawal };\r\n"]},"metadata":{},"sourceType":"module"}