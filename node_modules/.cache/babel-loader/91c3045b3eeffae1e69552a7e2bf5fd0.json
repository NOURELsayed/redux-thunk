{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/CreatePostPage/Step4.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListToArray } from \"../../helpers\";\nimport { Button, Divider, Grid, List, Image } from \"semantic-ui-react\";\nimport \"./Step4.css\";\nimport { postActions } from \"../../actions\";\nimport { imageUrl } from \"../../config\";\n\nclass Step4 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = () => {\n      if (this.props.loading) return;\n      this.fileInputRef.current.click();\n    };\n\n    this.onFilesAdded = e => {\n      if (this.props.loading) return;\n      const oldFiles = this.props.files; // if (oldFiles.length >= 10) return;\n\n      const newFiles = ListToArray(e.target.files);\n      const files = this.uniqueFilesArray([...newFiles, ...oldFiles]); // if (files.length >= 10) return;\n\n      this.props.filesAdded(files);\n    };\n\n    this.uniqueFilesArray = function (files) {\n      let names = [];\n      return files.filter(file => {\n        if (!names.includes(file.name)) {\n          names.push(file.name);\n          return file;\n        }\n      });\n    };\n\n    this.onFileRemoved = (e, file) => {\n      this.props.fileRemoved(file);\n    };\n\n    this.onOldImageRemoved = (e, file) => {\n      this.props.oldImageRemoved(file);\n    };\n  }\n\n  render() {\n    const {\n      currentStep,\n      loading,\n      files,\n      edit,\n      postOldImages\n    } = this.props;\n    return currentStep !== 4 ? null : /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      style: {\n        padding: \"2em\",\n        minHeight: 500\n      },\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      centered: true,\n      columns: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"***\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: loading ? \"default\" : \"pointer\"\n      },\n      className: \"Dropzone\",\n      onClick: this.openFileDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.fileInputRef,\n      className: \"FileInput\",\n      type: \"file\",\n      multiple: true,\n      onChange: this.onFilesAdded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"upload\",\n      className: \"Icon\",\n      src: \"img/baseline-cloud_upload-24px.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Upload Files\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      divided: true,\n      verticalAlign: \"middle\",\n      style: {\n        padding: \"0 2em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, files.map(file => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: file.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(List.Content, {\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"red\",\n        onClick: e => {\n          this.onFileRemoved(e, file);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }\n      }, \"Remove\")), /*#__PURE__*/React.createElement(List.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, file.name));\n    }), postOldImages.map(file => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: file,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(List.Content, {\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, edit && /*#__PURE__*/React.createElement(Image, {\n        src: `${imageUrl}/${file}`,\n        rounded: true,\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"red\",\n        onClick: e => {\n          this.onOldImageRemoved(e, file);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }\n      }, \"Remove\")), /*#__PURE__*/React.createElement(List.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, file.name));\n    })))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    currentStep,\n    loading,\n    files,\n    postOldImages\n  } = state.post;\n  return {\n    currentStep,\n    loading,\n    files,\n    postOldImages\n  };\n}\n\nconst actionCreators = {\n  filesAdded: postActions.filesAdded,\n  fileRemoved: postActions.fileRemoved,\n  oldImageRemoved: postActions.oldImageRemoved\n};\nconst connectedStep4 = connect(mapState, actionCreators)(Step4);\nexport { connectedStep4 as Step4 };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/CreatePostPage/Step4.jsx"],"names":["React","Component","connect","ListToArray","Button","Divider","Grid","List","Image","postActions","imageUrl","Step4","fileInputRef","createRef","openFileDialog","props","loading","current","click","onFilesAdded","e","oldFiles","files","newFiles","target","uniqueFilesArray","filesAdded","names","filter","file","includes","name","push","onFileRemoved","fileRemoved","onOldImageRemoved","oldImageRemoved","render","currentStep","edit","postOldImages","padding","minHeight","cursor","map","mapState","state","post","actionCreators","connectedStep4"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ListToArray } from \"../../helpers\";\r\nimport { Button, Divider, Grid, List, Image } from \"semantic-ui-react\";\r\nimport \"./Step4.css\";\r\n\r\nimport { postActions } from \"../../actions\";\r\nimport { imageUrl } from \"../../config\";\r\n\r\nclass Step4 extends Component {\r\n  fileInputRef = React.createRef();\r\n\r\n  openFileDialog = () => {\r\n    if (this.props.loading) return;\r\n    this.fileInputRef.current.click();\r\n  };\r\n\r\n  onFilesAdded = (e) => {\r\n    if (this.props.loading) return;\r\n    const oldFiles = this.props.files;\r\n    // if (oldFiles.length >= 10) return;\r\n    const newFiles = ListToArray(e.target.files);\r\n    const files = this.uniqueFilesArray([...newFiles, ...oldFiles]);\r\n    // if (files.length >= 10) return;\r\n    this.props.filesAdded(files);\r\n  };\r\n\r\n  uniqueFilesArray = function (files) {\r\n    let names = [];\r\n    return files.filter((file) => {\r\n      if (!names.includes(file.name)) {\r\n        names.push(file.name);\r\n        return file;\r\n      }\r\n    });\r\n  };\r\n\r\n  onFileRemoved = (e, file) => {\r\n    this.props.fileRemoved(file);\r\n  };\r\n\r\n  onOldImageRemoved = (e, file) => {\r\n    this.props.oldImageRemoved(file);\r\n  };\r\n\r\n  render() {\r\n    const { currentStep, loading, files, edit, postOldImages } = this.props;\r\n\r\n    return currentStep !== 4 ? null : (\r\n      <Grid\r\n        centered\r\n        columns={2}\r\n        style={{ padding: \"2em\", minHeight: 500 }}\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Row centered columns={3}>\r\n          <Divider vertical>***</Divider>\r\n          <Grid.Column>\r\n            <div\r\n              style={{ cursor: loading ? \"default\" : \"pointer\" }}\r\n              className={\"Dropzone\"}\r\n              onClick={this.openFileDialog}\r\n            >\r\n              <input\r\n                ref={this.fileInputRef}\r\n                className=\"FileInput\"\r\n                type=\"file\"\r\n                multiple\r\n                onChange={this.onFilesAdded}\r\n              />\r\n\r\n              <img\r\n                alt=\"upload\"\r\n                className=\"Icon\"\r\n                src=\"img/baseline-cloud_upload-24px.svg\"\r\n              />\r\n              <span>Upload Files</span>\r\n            </div>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <List divided verticalAlign=\"middle\" style={{ padding: \"0 2em\" }}>\r\n              {files.map((file) => {\r\n                return (\r\n                  <List.Item key={file.name}>\r\n                    <List.Content floated=\"right\">\r\n                      <Button\r\n                        color=\"red\"\r\n                        onClick={(e) => {\r\n                          this.onFileRemoved(e, file);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </List.Content>\r\n                    <List.Content>{file.name}</List.Content>\r\n                  </List.Item>\r\n                );\r\n              })}\r\n              {postOldImages.map((file) => {\r\n                return (\r\n                  <List.Item key={file}>\r\n                    <List.Content floated=\"right\">\r\n                      {edit && <Image src={`${imageUrl}/${file}`} rounded fluid/>}\r\n                      <Button\r\n                        color=\"red\"\r\n                        onClick={(e) => {\r\n                          this.onOldImageRemoved(e, file);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </List.Content>\r\n                    <List.Content>{file.name}</List.Content>\r\n                  </List.Item>\r\n                );\r\n              })}\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { currentStep, loading, files, postOldImages } = state.post;\r\n  return { currentStep, loading, files, postOldImages };\r\n}\r\n\r\nconst actionCreators = {\r\n  filesAdded: postActions.filesAdded,\r\n  fileRemoved: postActions.fileRemoved,\r\n  oldImageRemoved: postActions.oldImageRemoved,\r\n};\r\n\r\nconst connectedStep4 = connect(mapState, actionCreators)(Step4);\r\nexport { connectedStep4 as Step4 };\r\n"]},"metadata":{},"sourceType":"module"}