{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/PostCard/Post.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Label, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { imageUrl } from \"../../config\";\nimport \"../PostCard/PostCard.css\";\nimport { watchListActions } from \"../../actions\";\nimport socket from \"../../socket/socket\";\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      auctionInfo: \"\"\n    };\n\n    this.isChecked = () => {\n      if (this.props.watchListData.length > 0) {\n        this.props.watchListData.map(obj => {\n          if (obj._id === this.props.post._id) this.setState({\n            clicked: !this.state.clicked\n          });\n        });\n      }\n    };\n\n    this.addToWatchList = async post => {\n      await this.props.addItemToWatchList(post._id, post);\n      this.setState({\n        watchlistData: this.props.watchListData\n      });\n    };\n\n    this.removeFromWatchList = async id => {\n      await this.props.removeItemFromWatchList(id, true);\n    };\n\n    this.handleClick = post => {\n      this.setState({ ...this.state,\n        clicked: !this.state.clicked\n      });\n      this.state.clicked ? this.removeFromWatchList(post._id) : this.addToWatchList(post);\n    };\n\n    this.renderImages = post => {\n      const settings = {\n        dots: false,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false,\n        adaptiveHeight: false\n      };\n      return /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }), post.images.map(image => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          centered: true,\n          src: `${imageUrl}/${image}`,\n          size: \"small\",\n          rounded: true,\n          wrapped: true,\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }));\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.isChecked();\n\n    if (this.props.post && this.props.post.sellingMethod !== \"buyNow\") {\n      var _this$props$post, _this$props$post$auct;\n\n      socket.emit(\"join auction\", {\n        auctionId: (_this$props$post = this.props.post) === null || _this$props$post === void 0 ? void 0 : (_this$props$post$auct = _this$props$post.auction) === null || _this$props$post$auct === void 0 ? void 0 : _this$props$post$auct._id\n      }, ack => {\n        console.log(\"ack\", ack);\n      });\n    }\n\n    socket.on(\"auction info\", data => {\n      var _this$props, _this$props$post2, _this$props$post2$auc;\n\n      if ((data === null || data === void 0 ? void 0 : data.auctionId) === ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$post2 = _this$props.post) === null || _this$props$post2 === void 0 ? void 0 : (_this$props$post2$auc = _this$props$post2.auction) === null || _this$props$post2$auc === void 0 ? void 0 : _this$props$post2$auc._id)) {\n        this.setState({\n          auctionInfo: {\n            auctionId: data.auctionId,\n            availableQuantity: data.availableQuantity,\n            bids: data.bids,\n            currentBidAmount: data.currentBidAmount,\n            endDate: data.endDate,\n            postId: data.postId\n          }\n        });\n      }\n    });\n  } //  check the length of watchList and map over them then\n  // check if the clicked post in watchList or not if yes change the state value\n\n\n  render() {\n    const {\n      endAuctionDate,\n      renderImages\n    } = this.props;\n    const watchList = this.props.watchListData; // colors of watchList icon\n\n    var isLiked = this.state.clicked ? \"base-state\" : \"click-state\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uicard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imagestyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/post/${this.props.post._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, renderImages), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"auctionorexpirydata\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, endAuctionDate), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: \"#0f3333\",\n      ribbon: true,\n      className: \"cardlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Used\")), /*#__PURE__*/React.createElement(Icon, {\n      name: \"heart outline\",\n      className: \"HeartIcon\",\n      onClick: () => this.handleClick(this.props.post),\n      className: isLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, `${this.props.post.title}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"(\", this.state.auctionInfo.bids, \"Bids)\", this.state.auctionInfo.currentBidAmount, \"current Bid Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardBtns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"priceBtn\",\n      disabled: !this.props.post.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, `${this.props.post.price || \"-.-\"}`, \" \"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"priceBtn\",\n      disabled: !this.props.post.auction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Bid now\"))));\n  }\n\n}\n\nfunction mapState(state, ownProps) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    watchListData\n  } = state.watchList;\n  return {\n    watchListData,\n    status: {\n      user\n    }\n  };\n}\n\nconst actionCreators = {\n  addItemToWatchList: watchListActions.addItemToWatchList,\n  getUserwatchListData: watchListActions.viewWatchList,\n  removeItemFromWatchList: watchListActions.removeItem\n};\nconst connectedPostCard = connect(mapState, actionCreators)(Post);\nexport { connectedPostCard as PostCard };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/PostCard/Post.jsx"],"names":["React","Component","connect","Icon","Label","Image","Link","Slider","imageUrl","watchListActions","socket","Post","state","clicked","auctionInfo","isChecked","props","watchListData","length","map","obj","_id","post","setState","addToWatchList","addItemToWatchList","watchlistData","removeFromWatchList","id","removeItemFromWatchList","handleClick","renderImages","settings","dots","autoplay","autoplaySpeed","infinite","speed","slidesToShow","slidesToScroll","arrows","adaptiveHeight","images","image","componentDidMount","sellingMethod","emit","auctionId","auction","ack","console","log","on","data","availableQuantity","bids","currentBidAmount","endDate","postId","render","endAuctionDate","watchList","isLiked","title","price","mapState","ownProps","user","authentication","status","actionCreators","getUserwatchListData","viewWatchList","removeItem","connectedPostCard","PostCard"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Label, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport { imageUrl } from \"../../config\";\r\nimport \"../PostCard/PostCard.css\";\r\nimport { watchListActions } from \"../../actions\";\r\nimport socket from \"../../socket/socket\";\r\nclass Post extends Component {\r\n  state = {\r\n    clicked: false,\r\n    auctionInfo: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.isChecked();\r\n    if (this.props.post && this.props.post.sellingMethod !== \"buyNow\") {\r\n      socket.emit(\r\n        \"join auction\",\r\n        { auctionId: this.props.post?.auction?._id },\r\n\r\n        (ack) => {\r\n          console.log(\"ack\", ack);\r\n        }\r\n      );\r\n    }\r\n    socket.on(\"auction info\", (data) => {\r\n      if (data?.auctionId === this.props?.post?.auction?._id) {\r\n        this.setState({\r\n          auctionInfo: {\r\n            auctionId: data.auctionId,\r\n            availableQuantity: data.availableQuantity,\r\n            bids: data.bids,\r\n            currentBidAmount: data.currentBidAmount,\r\n            endDate: data.endDate,\r\n            postId: data.postId,\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //  check the length of watchList and map over them then\r\n  // check if the clicked post in watchList or not if yes change the state value\r\n  isChecked = () => {\r\n    if (this.props.watchListData.length > 0) {\r\n      this.props.watchListData.map((obj) => {\r\n        if (obj._id === this.props.post._id)\r\n          this.setState({ clicked: !this.state.clicked });\r\n      });\r\n    }\r\n  };\r\n\r\n  addToWatchList = async (post) => {\r\n    await this.props.addItemToWatchList(post._id, post);\r\n    this.setState({ watchlistData: this.props.watchListData });\r\n  };\r\n\r\n  removeFromWatchList = async (id) => {\r\n    await this.props.removeItemFromWatchList(id, true);\r\n  };\r\n\r\n  handleClick = (post) => {\r\n    this.setState({ ...this.state, clicked: !this.state.clicked });\r\n    this.state.clicked\r\n      ? this.removeFromWatchList(post._id)\r\n      : this.addToWatchList(post);\r\n  };\r\n\r\n  renderImages = (post) => {\r\n    const settings = {\r\n      dots: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 5000,\r\n      infinite: true,\r\n      speed: 1000,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      arrows: false,\r\n      adaptiveHeight: false,\r\n    };\r\n    return (\r\n      <Slider {...settings}>\r\n        {post.images.map((image) => {\r\n          return (\r\n            <div>\r\n              <Image\r\n                centered\r\n                src={`${imageUrl}/${image}`}\r\n                size=\"small\"\r\n                rounded\r\n                wrapped\r\n                fluid\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  };\r\n  render() {\r\n    const { endAuctionDate, renderImages } = this.props;\r\n    const watchList = this.props.watchListData;\r\n\r\n    // colors of watchList icon\r\n    var isLiked = this.state.clicked ? \"base-state\" : \"click-state\";\r\n    return (\r\n      <div className=\"uicard\">\r\n        <div className=\"box\">\r\n          <div className=\"imagestyle\">\r\n            <Link to={`/post/${this.props.post._id}`}>{renderImages}</Link>\r\n            <p className=\"auctionorexpirydata\">{endAuctionDate}</p>\r\n            <div className=\"card__info\">\r\n              <Label color=\"#0f3333\" ribbon className=\"cardlabel\">\r\n                <span>Used</span>\r\n              </Label>\r\n              <Icon\r\n                name=\"heart outline\"\r\n                className=\"HeartIcon\"\r\n                onClick={() => this.handleClick(this.props.post)}\r\n                className={isLiked}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"header\">{`${this.props.post.title}`}</div>\r\n          <div className=\"meta\">\r\n            ({this.state.auctionInfo.bids}Bids)\r\n            {this.state.auctionInfo.currentBidAmount}current Bid Amount\r\n          </div>\r\n        </div>\r\n        <div className=\"cardBtns\">\r\n          <button className=\"priceBtn\" disabled={!this.props.post.price}>\r\n            <span className=\"btn\">\r\n              <span>{`${this.props.post.price || \"-.-\"}`} </span>\r\n            </span>\r\n          </button>\r\n          <button className=\"priceBtn\" disabled={!this.props.post.auction}>\r\n            <span className=\"btn\">Bid now</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state, ownProps) {\r\n  const { user } = state.authentication;\r\n  const { watchListData } = state.watchList;\r\n  return {\r\n    watchListData,\r\n    status: { user },\r\n  };\r\n}\r\nconst actionCreators = {\r\n  addItemToWatchList: watchListActions.addItemToWatchList,\r\n  getUserwatchListData: watchListActions.viewWatchList,\r\n  removeItemFromWatchList: watchListActions.removeItem,\r\n};\r\n\r\nconst connectedPostCard = connect(mapState, actionCreators)(Post);\r\nexport { connectedPostCard as PostCard };\r\n"]},"metadata":{},"sourceType":"module"}