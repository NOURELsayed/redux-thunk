{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/ProfilePage.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { userActions } from \"../../actions\";\nimport { Header, Segment, Image, Grid, Button } from \"semantic-ui-react\";\nimport { UserSettings } from \"./UserSettings\";\nimport { FeedBack } from \"./Feedback\";\nimport { Reviews } from \"./Reviews\";\nimport { SendInvitationPage } from \"./SendInvitationPage\";\nimport { AuctionList } from \"./AuctionList\";\nimport { Badges } from \"./Badges\";\nimport { AvatarPage } from \"./AvatarPage\";\nimport { ProfileCard } from \"./ProfileCard\";\nimport { UserSettingsData } from \"./UserSettingsData\";\nimport { UserProfilePage } from \"./UserProfilePage\";\nimport \"./UserProfilePage.css\";\nimport { QuestionComponent } from '../../components/Question/index';\n\nclass ProfilePage extends Component {\n  componentDidMount() {\n    this.props.getUserProfileData();\n  }\n\n  render() {\n    const {\n      userProfile\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userImageAndUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: this.props.userProfile.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, this.props.userProfile.username)), /*#__PURE__*/React.createElement(Button, {\n      basic: true,\n      as: Link,\n      to: \"/usersetting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Settings\")), /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ProfileCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UserProfilePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    userProfile,\n    display\n  } = state.users;\n  return {\n    user,\n    userProfile,\n    display\n  };\n}\n\nconst actionCreators = {\n  getUserProfileData: userActions.viewProfile,\n  handleDisplayUserSettingsClicked: userActions.viewUserSettings,\n  handleDisplayFeedbackClicked: userActions.viewFeedBack,\n  handleDisplayReviewsClicked: userActions.viewReviewsAsSeller,\n  handleDisplayInvitationsClicked: userActions.viewInvitations,\n  handleDisplayAuctionListClicked: userActions.viewAuctionList,\n  handleDisplayBadgesClicked: userActions.viewBadges,\n  handleDisplayAvatarPageClicked: userActions.viewAvatar\n};\nconst connectedProfilePage = connect(mapState, actionCreators)(ProfilePage);\nexport { connectedProfilePage as ProfilePage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/ProfilePage.jsx"],"names":["React","Component","connect","Link","userActions","Header","Segment","Image","Grid","Button","UserSettings","FeedBack","Reviews","SendInvitationPage","AuctionList","Badges","AvatarPage","ProfileCard","UserSettingsData","UserProfilePage","QuestionComponent","ProfilePage","componentDidMount","props","getUserProfileData","render","userProfile","avatar","username","mapState","state","user","authentication","display","users","actionCreators","viewProfile","handleDisplayUserSettingsClicked","viewUserSettings","handleDisplayFeedbackClicked","viewFeedBack","handleDisplayReviewsClicked","viewReviewsAsSeller","handleDisplayInvitationsClicked","viewInvitations","handleDisplayAuctionListClicked","viewAuctionList","handleDisplayBadgesClicked","viewBadges","handleDisplayAvatarPageClicked","viewAvatar","connectedProfilePage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userActions } from \"../../actions\";\r\nimport { Header, Segment, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport { UserSettings } from \"./UserSettings\";\r\nimport { FeedBack } from \"./Feedback\";\r\nimport { Reviews } from \"./Reviews\";\r\nimport { SendInvitationPage } from \"./SendInvitationPage\";\r\nimport { AuctionList } from \"./AuctionList\";\r\nimport { Badges } from \"./Badges\";\r\nimport { AvatarPage } from \"./AvatarPage\";\r\nimport { ProfileCard } from \"./ProfileCard\";\r\nimport { UserSettingsData } from \"./UserSettingsData\";\r\nimport {UserProfilePage} from \"./UserProfilePage\";\r\nimport \"./UserProfilePage.css\";\r\nimport {QuestionComponent} from '../../components/Question/index'\r\nclass ProfilePage extends Component {\r\n  componentDidMount() {\r\n    this.props.getUserProfileData();\r\n  }\r\n  render() {\r\n    const { userProfile } = this.props;\r\n    return (\r\n      <Segment>\r\n        <Header textAlign=\"center\" >\r\n          <div className=\"userImageAndUsername\">\r\n            <Image src={this.props.userProfile.avatar} />\r\n            <h4>{this.props.userProfile.username}</h4>\r\n          </div>\r\n          <Button basic as={Link} to=\"/usersetting\">\r\n            Settings\r\n          </Button>\r\n        </Header>\r\n        <Grid textAlign=\"center\">\r\n          <ProfileCard />\r\n          <Grid.Row>\r\n            <Grid.Column width={2}>\r\n              {/* <Menu fluid vertical>\r\n                                <Menu.Item\r\n                                    active={\r\n                                        this.props.display !== 'FEEDBACK' &&\r\n                                        this.props.display !== 'REVIEWS' &&\r\n                                        this.props.display !== 'INVITATIONS' &&\r\n                                        this.props.display !== 'BADGES' &&\r\n                                        this.props.display !== 'AVATAR'\r\n                                    }\r\n                                    onClick={\r\n                                        this.props\r\n                                            .handleDisplayUserSettingsClicked\r\n                                    }\r\n                                >\r\n                                    User Settings\r\n                                </Menu.Item>\r\n                                <Menu.Item\r\n                                    active={this.props.display === 'FEEDBACK'}\r\n                                    onClick={\r\n                                        this.props.handleDisplayFeedbackClicked\r\n                                    }\r\n                                >\r\n                                    Feedback\r\n                                </Menu.Item>\r\n                                <Menu.Item\r\n                                    active={this.props.display === 'REVIEWS'}\r\n                                    onClick={() => {\r\n                                        this.props.handleDisplayReviewsClicked(\r\n                                            this.props.user.id,\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Reviews\r\n                                </Menu.Item>\r\n                                <Menu.Item\r\n                                    active={this.props.display === 'INVITATIONS'}\r\n                                    onClick={() => {\r\n                                        this.props.handleDisplayInvitationsClicked(\r\n                                            this.props.user.id,\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Invitations\r\n                                </Menu.Item>\r\n                                <Menu.Item\r\n                                    active={this.props.display === 'AUCTIONLIST'}\r\n                                    onClick={\r\n                                        this.props.handleDisplayAuctionListClicked\r\n                                    }\r\n                                >\r\n                                    Auction List\r\n                                </Menu.Item>\r\n                                <Menu.Item\r\n                                    active={this.props.display === 'BADGES'}\r\n                                    onClick={\r\n                                        this.props.handleDisplayBadgesClicked\r\n                                    }\r\n                                >\r\n                                    Badges\r\n                                </Menu.Item>\r\n                                <Menu.Item\r\n                                    active={this.props.display === 'AVATAR'}\r\n                                    onClick={\r\n                                        this.props.handleDisplayAvatarPageClicked\r\n                                    }\r\n                                >\r\n                                    Avatar\r\n                                </Menu.Item>\r\n                            </Menu> */}\r\n            </Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <UserProfilePage />\r\n              {/* {this.props.display === 'REVIEWS' ? (\r\n                                <Reviews />\r\n                            ) : this.props.display === 'AUCTIONLIST' ? (\r\n                                <AuctionList />\r\n                            ) : this.props.display === 'FEEDBACK' ? (\r\n                                <FeedBack />\r\n                            ) : this.props.display === 'INVITATIONS' ? (\r\n                                <SendInvitationPage />\r\n                            ) : this.props.display === 'BADGES' ? (\r\n                                <Badges />\r\n                            ) : this.props.display === 'AVATAR' ? (\r\n                                <AvatarPage />\r\n                            ) : <UserSettings />\r\n                            } */}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const { userProfile, display } = state.users;\r\n  return { user, userProfile, display };\r\n}\r\n\r\nconst actionCreators = {\r\n  getUserProfileData: userActions.viewProfile,\r\n  handleDisplayUserSettingsClicked: userActions.viewUserSettings,\r\n  handleDisplayFeedbackClicked: userActions.viewFeedBack,\r\n  handleDisplayReviewsClicked: userActions.viewReviewsAsSeller,\r\n  handleDisplayInvitationsClicked: userActions.viewInvitations,\r\n  handleDisplayAuctionListClicked: userActions.viewAuctionList,\r\n  handleDisplayBadgesClicked: userActions.viewBadges,\r\n  handleDisplayAvatarPageClicked: userActions.viewAvatar,\r\n};\r\n\r\nconst connectedProfilePage = connect(mapState, actionCreators)(ProfilePage);\r\nexport { connectedProfilePage as ProfilePage };\r\n"]},"metadata":{},"sourceType":"module"}