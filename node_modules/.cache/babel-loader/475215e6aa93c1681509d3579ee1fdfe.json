{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/VerificationPage/Navbar.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Image, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { Link } from \"react-router-dom\";\nimport { userActions } from \"../../actions\";\nimport { imageUrl } from \"../LandingPage/config\";\nimport \"./EmailVerification.css\";\n\nclass VerificatioNavBar extends Component {\n  componentDidMount() {\n    document.body.dir = i18n.dir();\n  }\n\n  changeLanguage(language) {\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\n  }\n\n  render() {\n    const language = localStorage.getItem(\"i18nextLng\");\n    const {\n      t,\n      alert\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Segment, {\n      className: `VerificationNavbarContainer ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `basicVerificationNavbar ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: language === \"ar\" ? `${imageUrl}/landing-page/ar-header-logo@3x-min.png` : `${imageUrl}/landing-page/Header-Logo-min.png`,\n      className: `Navbarlogo ${language}`,\n      alt: \"Navbarlogo\",\n      as: Link,\n      to: \"/welcome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: `navbarMobileButton ${language}`,\n      onClick: () => this.changeLanguage(this.props.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, t(\"otherlang\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: alert && alert.type === \"success\" ? `VerificationNavbartitlesSuccess ${language}` : `VerificationNavbartitles ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: `VerificationNavbartitle ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: `failedVerificationSubtitle  ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, alert && alert.type === \"success\" ? /*#__PURE__*/React.createElement(Image, {\n      src: `${imageUrl}/landing-page/check-circle-outline-round@3x-min.png`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Image, {\n      src: `${imageUrl}/landing-page/Cross%20Circle@3x.png`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: `VerificationNavbarsubtitle ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, this.props.subtitle)), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"verficationLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  const {\n    language\n  } = state.users;\n  return {\n    language,\n    alert\n  };\n}\n\nconst actionCreators = {\n  changeLanguage: userActions.setLanguage,\n  verifyUpdatedEmail: userActions.verifyUpdatedEmail\n};\nconst connectedNavBar = connect(mapState, actionCreators)(withTranslation(\"landingPage\")(VerificatioNavBar));\nexport { connectedNavBar as VerificatioNavBar };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/VerificationPage/Navbar.jsx"],"names":["React","Component","Segment","Image","Button","connect","withTranslation","i18n","Link","userActions","imageUrl","VerificatioNavBar","componentDidMount","document","body","dir","changeLanguage","language","props","render","localStorage","getItem","t","alert","type","title","subtitle","mapState","state","users","actionCreators","setLanguage","verifyUpdatedEmail","connectedNavBar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userActions } from \"../../actions\";\r\nimport { imageUrl } from \"../LandingPage/config\";\r\nimport \"./EmailVerification.css\";\r\n\r\n\r\nclass VerificatioNavBar extends Component {\r\n  componentDidMount() {\r\n    document.body.dir = i18n.dir();\r\n  }\r\n  changeLanguage(language) {\r\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\r\n  }\r\n  render() {\r\n    const language = localStorage.getItem(\"i18nextLng\");\r\n    const { t, alert } = this.props;\r\n    return (\r\n      <Segment className={`VerificationNavbarContainer ${language}`}>\r\n        <div className={`basicVerificationNavbar ${language}`}>\r\n          <Image\r\n            src={\r\n              language === \"ar\"\r\n                ? `${imageUrl}/landing-page/ar-header-logo@3x-min.png`\r\n                : `${imageUrl}/landing-page/Header-Logo-min.png`\r\n            }\r\n            className={`Navbarlogo ${language}`}\r\n            alt=\"Navbarlogo\"\r\n            as={Link}\r\n            to=\"/welcome\"\r\n          />\r\n          <Button\r\n            className={`navbarMobileButton ${language}`}\r\n            onClick={() => this.changeLanguage(this.props.language)}\r\n          >\r\n            {t(\"otherlang\")}\r\n          </Button>\r\n        </div>\r\n        <div\r\n          className={\r\n            alert && alert.type === \"success\"\r\n              ? `VerificationNavbartitlesSuccess ${language}`\r\n              : `VerificationNavbartitles ${language}`\r\n          }\r\n        >\r\n          <h4 className={`VerificationNavbartitle ${language}`}>\r\n            {this.props.title}\r\n          </h4>\r\n          <div className={`failedVerificationSubtitle  ${language}`}>\r\n            {alert && alert.type === \"success\" ? (\r\n              <Image src={`${imageUrl}/landing-page/check-circle-outline-round@3x-min.png`} />\r\n            ) : ( \r\n              <Image src={`${imageUrl}/landing-page/Cross%20Circle@3x.png`} />\r\n            )}\r\n            <span className={`VerificationNavbarsubtitle ${language}`}>\r\n              {this.props.subtitle}\r\n            </span>\r\n          </div>\r\n          <hr className=\"verficationLine\"></hr>\r\n        </div>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state) {\r\n  const { alert } = state;\r\n  const { language } = state.users;\r\n  return { language, alert };\r\n}\r\n\r\nconst actionCreators = {\r\n  changeLanguage: userActions.setLanguage,\r\n  verifyUpdatedEmail: userActions.verifyUpdatedEmail,\r\n};\r\nconst connectedNavBar = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withTranslation(\"landingPage\")(VerificatioNavBar));\r\nexport { connectedNavBar as VerificatioNavBar };\r\n"]},"metadata":{},"sourceType":"module"}