{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/CreatePostPage/Step3.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Grid, Select, TextArea, Message } from \"semantic-ui-react\";\nimport { postActions, validatorActions } from \"../../actions\";\n\nclass Step3 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.schema = {\n      required: [\"description\"],\n      properties: {\n        description: {\n          title: \"description\",\n          type: \"string\",\n          maxLength: 500,\n          minLength: 40\n        }\n      }\n    };\n\n    this.generateFormInputs = (fields, data, handleItemDataChange) => {\n      return fields.map(({\n        name,\n        options\n      }) => {\n        const {\n          english\n        } = name;\n        const fieldOptions = options.map(({\n          _id: id,\n          english\n        }) => ({\n          key: id,\n          value: english,\n          text: english\n        }));\n        return /*#__PURE__*/React.createElement(Form.Field, {\n          key: english,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }, english), /*#__PURE__*/React.createElement(Form.Input, {\n          key: english,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Select, {\n          fluid: true,\n          name: english,\n          placeholder: english,\n          options: fieldOptions,\n          value: data[english] || \"\",\n          onChange: handleItemDataChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        })));\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      dataType,\n      value\n    }) => {\n      const itemData = { ...this.props.itemData\n      };\n\n      if (dataType === \"Number\") {\n        itemData[name] = parseInt(value);\n      } else {\n        itemData[name] = value;\n        if (name === \"description\") this.props.validateInput(this.schema, name, value);\n      }\n\n      this.props.itemDataChanged(itemData);\n    };\n  }\n\n  render() {\n    const {\n      currentStep,\n      categoryFields,\n      itemData,\n      valid,\n      errors\n    } = this.props;\n    return currentStep !== 3 ? null : /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      style: {\n        padding: \"2em\",\n        minHeight: 500\n      },\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.generateFormInputs(categoryFields, itemData, this.handleChange), /*#__PURE__*/React.createElement(Form.Field, {\n      control: TextArea,\n      name: \"description\",\n      label: \"Description\",\n      value: itemData.description,\n      placeholder: \"Tell us more about your item...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), errors && errors.description && /*#__PURE__*/React.createElement(Message, {\n      negative: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, errors.description))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    currentStep,\n    categoryFields,\n    itemData\n  } = state.post;\n  const {\n    valid,\n    errors\n  } = state.validation;\n  return {\n    currentStep,\n    categoryFields,\n    itemData,\n    valid,\n    errors\n  };\n}\n\nconst actionCreators = {\n  itemDataChanged: postActions.itemDataChanged,\n  validateInput: validatorActions.validateInput\n};\nconst connectedStep3 = connect(mapState, actionCreators)(Step3);\nexport { connectedStep3 as Step3 };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/CreatePostPage/Step3.jsx"],"names":["React","Component","connect","Form","Grid","Select","TextArea","Message","postActions","validatorActions","Step3","schema","required","properties","description","title","type","maxLength","minLength","generateFormInputs","fields","data","handleItemDataChange","map","name","options","english","fieldOptions","_id","id","key","value","text","handleChange","e","dataType","itemData","props","parseInt","validateInput","itemDataChanged","render","currentStep","categoryFields","valid","errors","padding","minHeight","mapState","state","post","validation","actionCreators","connectedStep3"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Grid, Select, TextArea, Message } from \"semantic-ui-react\";\r\nimport { postActions, validatorActions } from \"../../actions\";\r\n\r\nclass Step3 extends Component {\r\n  schema = {\r\n    required: [\"description\"],\r\n    properties: {\r\n      description: {\r\n        title: \"description\",\r\n        type: \"string\",\r\n        maxLength: 500,\r\n        minLength: 40,\r\n      },\r\n    },\r\n  };\r\n  generateFormInputs = (fields, data, handleItemDataChange) => {\r\n    return fields.map(({ name, options }) => {\r\n      const { english } = name;\r\n      const fieldOptions = options.map(({ _id: id, english }) => ({\r\n        key: id,\r\n        value: english,\r\n        text: english,\r\n      }));\r\n      return (\r\n        <Form.Field key={english}>\r\n          <label>{english}</label>\r\n          <Form.Input key={english}>\r\n            <Select\r\n              fluid\r\n              name={english}\r\n              placeholder={english}\r\n              options={fieldOptions}\r\n              value={data[english] || \"\"}\r\n              onChange={handleItemDataChange}\r\n            />\r\n          </Form.Input>\r\n        </Form.Field>\r\n      );\r\n    });\r\n  };\r\n\r\n  handleChange = (e, { name, dataType, value }) => {\r\n    const itemData = { ...this.props.itemData };\r\n    if (dataType === \"Number\") {\r\n      itemData[name] = parseInt(value);\r\n    } else {\r\n      itemData[name] = value;\r\n      if (name === \"description\")\r\n        this.props.validateInput(this.schema, name, value);\r\n    }\r\n\r\n    this.props.itemDataChanged(itemData);\r\n  };\r\n\r\n  render() {\r\n    const { currentStep, categoryFields, itemData, valid, errors } = this.props;\r\n\r\n    return currentStep !== 3 ? null : (\r\n      <Grid\r\n        centered\r\n        columns={2}\r\n        style={{ padding: \"2em\", minHeight: 500 }}\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column>\r\n          {this.generateFormInputs(categoryFields, itemData, this.handleChange)}\r\n\r\n          <Form.Field\r\n            control={TextArea}\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            value={itemData.description}\r\n            placeholder=\"Tell us more about your item...\"\r\n            onChange={this.handleChange}\r\n          />\r\n          {errors && errors.description && (\r\n            <Message negative>\r\n              <Message.Header>{errors.description}</Message.Header>\r\n            </Message>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { currentStep, categoryFields, itemData } = state.post;\r\n  const { valid, errors } = state.validation;\r\n\r\n  return { currentStep, categoryFields, itemData, valid, errors };\r\n}\r\n\r\nconst actionCreators = {\r\n  itemDataChanged: postActions.itemDataChanged,\r\n  validateInput: validatorActions.validateInput,\r\n};\r\n\r\nconst connectedStep3 = connect(mapState, actionCreators)(Step3);\r\nexport { connectedStep3 as Step3 };\r\n"]},"metadata":{},"sourceType":"module"}