{"ast":null,"code":"import { returnRequestsConstants } from \"../constants\";\nimport { returnRequestsService } from \"./../services\";\nimport { alertActions } from \"./alert.actions\";\nimport { history } from '../helpers';\nexport const returnRequestsActions = {\n  loadAllReturnRequests,\n  sellerDecision,\n  openInvestigation,\n  cancelReturnRequest,\n  editReturnRequest,\n  confirmReturnRequestDropOffInfo,\n  viewReturnRequest,\n  confirmReturnRequestPickUpInfo\n};\n\nfunction editReturnRequest(requestId, body) {\n  return async dispatch => {\n    try {\n      await dispatch(request());\n      await returnRequestsService.editReturnRequest(requestId, body);\n      dispatch(loadAllReturnRequests());\n      dispatch(alertActions.success({}));\n    } catch {\n      dispatch(alertActions.error({\n        header: \"Something went wrong\",\n        content: \"Something went wrong\"\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: returnRequestsConstants.EDIT_RETURN_REQUEST\n    };\n  }\n}\n\nfunction cancelReturnRequest(requestId) {\n  return async dispatch => {\n    try {\n      await dispatch(request());\n      await returnRequestsService.cancelReturnRequest(requestId);\n      dispatch(loadAllReturnRequests());\n      dispatch(alertActions.success({}));\n    } catch {\n      dispatch(alertActions.error({\n        header: \"Something went wrong\",\n        content: \"Something went wrong\"\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: returnRequestsConstants.CANCEL_RETURN_REQUEST\n    };\n  }\n}\n\nfunction openInvestigation(decision, requestId, body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      await returnRequestsService.openInvestigation(decision, requestId, body);\n      dispatch(alertActions.success({\n        header: \"Response Sent\",\n        content: \"Response Sent\"\n      }));\n      window.location.reload();\n    } catch {\n      dispatch(alertActions.error({\n        header: \"Investigation Response faced a problem\",\n        content: \"Investigation Response faced a problem\"\n      }));\n    }\n  };\n\n  function request() {\n    if (decision === \"request\") {\n      return {\n        type: returnRequestsConstants.OPEN_INVESTIGATION_REQUEST\n      };\n    } else {\n      if (decision === \"ignore\") return {\n        type: returnRequestsConstants.DO_NOT_OPEN_INVESTIGATION_REQUEST\n      };\n    }\n  }\n}\n\nfunction loadAllReturnRequests() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await returnRequestsService.viewAllReturnRequests();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't get return requests\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: returnRequestsConstants.LOAD_ALL_RETURN_REQS_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: returnRequestsConstants.LOAD_ALL_RETURN_REQS_SUCCESS,\n      sellerReturnRequests: data.sellerReturnRequests,\n      buyerReturnRequests: data.buyerReturnRequests\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: returnRequestsConstants.LOAD_ALL_RETURN_REQS_FAILURE,\n      error\n    };\n  }\n}\n\nfunction sellerDecision(decision, requestId, body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      await returnRequestsService.sellerDecision(decision, requestId, body);\n      dispatch(alertActions.success({\n        header: \"Response Sent\",\n        content: \"Response Sent\"\n      }));\n      window.location.reload();\n    } catch {\n      dispatch(alertActions.error({\n        header: \"Seller Decision Request Failed\",\n        content: \"Seller Decision Request Failed\"\n      }));\n    }\n\n    function request() {\n      if (decision === \"accept\") {\n        return {\n          type: returnRequestsConstants.SELLER_DECISION_ACCEPT_REQUEST\n        };\n      } else {\n        return {\n          type: returnRequestsConstants.SELLER_DECISION_REJECT_REQUEST\n        };\n      }\n    }\n  };\n}\n\nfunction confirmReturnRequestDropOffInfo(returnRequestId, returnReqDropOffInfo) {\n  const arrivalDateTime = new Date(returnReqDropOffInfo.arrivalDate);\n  arrivalDateTime.setHours(returnReqDropOffInfo.arrivalTime);\n  const dropOffInfo = {\n    buyerData: {\n      SP: returnReqDropOffInfo.servicePointId,\n      timeslot: arrivalDateTime\n    }\n  };\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await returnRequestsService.confirmReturnRequestDropOffInfo(returnRequestId, dropOffInfo);\n      dispatch(success(data));\n      history.push(\"/myReturnRequests/view\");\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't confirm drop off info\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: returnRequestsConstants.CONFIRM_DROP_OFF_RETURN_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: returnRequestsConstants.CONFIRM_DROP_OFF_RETURN_SUCCESS,\n      returnRequest: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: returnRequestsConstants.CONFIRM_DROP_OFF_RETURN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction confirmReturnRequestPickUpInfo(returnRequestId, returnReqPickUpInfo) {\n  const arrivalDateTime = new Date(returnReqPickUpInfo.arrivalDate);\n  arrivalDateTime.setHours(returnReqPickUpInfo.arrivalTime);\n  const pickUpInfo = {\n    sellerData: {\n      SP: returnReqPickUpInfo.servicePointId,\n      timeslot: arrivalDateTime\n    }\n  };\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await returnRequestsService.confirmReturnRequestPickUpInfo(returnRequestId, pickUpInfo);\n      dispatch(success(data));\n      history.push(\"/myReturnRequests/view\");\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't confirm pick up info\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: returnRequestsConstants.CONFIRM_PICK_UP_RETURN_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: returnRequestsConstants.CONFIRM_PICK_UP_RETURN_SUCCESS,\n      returnRequest: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: returnRequestsConstants.CONFIRM_PICK_UP_RETURN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction viewReturnRequest(returnRequestId) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await returnRequestsService.viewReturnRequest(returnRequestId);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't view return request\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: returnRequestsConstants.VIEW_RETURN_REQUEST_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: returnRequestsConstants.VIEW_RETURN_REQUEST_SUCCESS,\n      returnRequest: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: returnRequestsConstants.VIEW_RETURN_REQUEST_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/returnRequests.actions.js"],"names":["returnRequestsConstants","returnRequestsService","alertActions","history","returnRequestsActions","loadAllReturnRequests","sellerDecision","openInvestigation","cancelReturnRequest","editReturnRequest","confirmReturnRequestDropOffInfo","viewReturnRequest","confirmReturnRequestPickUpInfo","requestId","body","dispatch","request","success","error","header","content","type","EDIT_RETURN_REQUEST","CANCEL_RETURN_REQUEST","decision","window","location","reload","OPEN_INVESTIGATION_REQUEST","DO_NOT_OPEN_INVESTIGATION_REQUEST","data","viewAllReturnRequests","ex","failure","message","LOAD_ALL_RETURN_REQS_REQUEST","LOAD_ALL_RETURN_REQS_SUCCESS","sellerReturnRequests","buyerReturnRequests","LOAD_ALL_RETURN_REQS_FAILURE","SELLER_DECISION_ACCEPT_REQUEST","SELLER_DECISION_REJECT_REQUEST","returnRequestId","returnReqDropOffInfo","arrivalDateTime","Date","arrivalDate","setHours","arrivalTime","dropOffInfo","buyerData","SP","servicePointId","timeslot","push","CONFIRM_DROP_OFF_RETURN_REQUEST","CONFIRM_DROP_OFF_RETURN_SUCCESS","returnRequest","CONFIRM_DROP_OFF_RETURN_FAILURE","returnReqPickUpInfo","pickUpInfo","sellerData","CONFIRM_PICK_UP_RETURN_REQUEST","CONFIRM_PICK_UP_RETURN_SUCCESS","CONFIRM_PICK_UP_RETURN_FAILURE","VIEW_RETURN_REQUEST_REQUEST","VIEW_RETURN_REQUEST_SUCCESS","VIEW_RETURN_REQUEST_FAILURE"],"mappings":"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","sourcesContent":["import { returnRequestsConstants } from \"../constants\";\r\nimport { returnRequestsService } from \"./../services\";\r\nimport { alertActions } from \"./alert.actions\";\r\nimport { history } from '../helpers';\r\n\r\n\r\nexport const returnRequestsActions = {\r\n  loadAllReturnRequests,\r\n  sellerDecision,\r\n  openInvestigation,\r\n  cancelReturnRequest,\r\n  editReturnRequest,\r\n  confirmReturnRequestDropOffInfo,\r\n  viewReturnRequest,\r\n  confirmReturnRequestPickUpInfo,\r\n};\r\n\r\nfunction editReturnRequest(requestId, body) {\r\n  return async (dispatch) => {\r\n    try {\r\n      await dispatch(request());\r\n      await returnRequestsService.editReturnRequest(requestId, body);\r\n\r\n      dispatch(loadAllReturnRequests());\r\n      dispatch(alertActions.success({}));\r\n    } catch {\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Something went wrong\",\r\n          content: \"Something went wrong\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {\r\n      type: returnRequestsConstants.EDIT_RETURN_REQUEST,\r\n    };\r\n  }\r\n}\r\n\r\nfunction cancelReturnRequest(requestId) {\r\n  return async (dispatch) => {\r\n    try {\r\n      await dispatch(request());\r\n      await returnRequestsService.cancelReturnRequest(requestId);\r\n      dispatch(loadAllReturnRequests());\r\n      dispatch(alertActions.success({}));\r\n    } catch {\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Something went wrong\",\r\n          content: \"Something went wrong\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {\r\n      type: returnRequestsConstants.CANCEL_RETURN_REQUEST,\r\n    };\r\n  }\r\n}\r\n\r\nfunction openInvestigation(decision, requestId,body) {\r\n  return async (dispatch) => {\r\n    await dispatch(request());\r\n\r\n    try {\r\n      await returnRequestsService.openInvestigation(decision, requestId,body);\r\n      dispatch(\r\n        alertActions.success({\r\n          header: \"Response Sent\",\r\n          content: \"Response Sent\",\r\n        })\r\n      );\r\n      window.location.reload();\r\n    } catch {\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Investigation Response faced a problem\",\r\n          content: \"Investigation Response faced a problem\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n  \r\n  function request() {\r\n    if (decision === \"request\") {\r\n      return {\r\n        type: returnRequestsConstants.OPEN_INVESTIGATION_REQUEST,\r\n      };\r\n    } else {\r\n      if (decision === \"ignore\")\r\n        return {\r\n          type: returnRequestsConstants.DO_NOT_OPEN_INVESTIGATION_REQUEST,\r\n        };\r\n    }\r\n  }\r\n}\r\n\r\nfunction loadAllReturnRequests() {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await returnRequestsService.viewAllReturnRequests();\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't get return requests\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: returnRequestsConstants.LOAD_ALL_RETURN_REQS_REQUEST,\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: returnRequestsConstants.LOAD_ALL_RETURN_REQS_SUCCESS,\r\n      sellerReturnRequests: data.sellerReturnRequests,\r\n      buyerReturnRequests: data.buyerReturnRequests,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: returnRequestsConstants.LOAD_ALL_RETURN_REQS_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction sellerDecision(decision, requestId,body) {\r\n  return async (dispatch) => {\r\n    await dispatch(request());\r\n    try {\r\n      await returnRequestsService.sellerDecision(decision, requestId,body);\r\n      dispatch(\r\n        alertActions.success({\r\n          header: \"Response Sent\",\r\n          content: \"Response Sent\",\r\n        })\r\n      );\r\n      window.location.reload();\r\n    } catch {\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Seller Decision Request Failed\",\r\n          content: \"Seller Decision Request Failed\",\r\n        })\r\n      );\r\n    }\r\n\r\n    function request() {\r\n      if (decision === \"accept\") {\r\n        return {\r\n          type: returnRequestsConstants.SELLER_DECISION_ACCEPT_REQUEST,\r\n        };\r\n      } else {\r\n        return {\r\n          type: returnRequestsConstants.SELLER_DECISION_REJECT_REQUEST,\r\n        };\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n\r\nfunction confirmReturnRequestDropOffInfo(returnRequestId,returnReqDropOffInfo) {\r\n  const arrivalDateTime = new Date(returnReqDropOffInfo.arrivalDate);\r\n    arrivalDateTime.setHours(returnReqDropOffInfo.arrivalTime);\r\n    const dropOffInfo = {\r\n      buyerData: {\r\n        SP: returnReqDropOffInfo.servicePointId,\r\n        timeslot: arrivalDateTime\r\n      }\r\n    };\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await returnRequestsService.confirmReturnRequestDropOffInfo(returnRequestId,dropOffInfo);\r\n      dispatch(success(data));\r\n      history.push(\"/myReturnRequests/view\");\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't confirm drop off info\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: returnRequestsConstants.CONFIRM_DROP_OFF_RETURN_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: returnRequestsConstants.CONFIRM_DROP_OFF_RETURN_SUCCESS,\r\n      returnRequest: data,\r\n      };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: returnRequestsConstants.CONFIRM_DROP_OFF_RETURN_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction confirmReturnRequestPickUpInfo(returnRequestId,returnReqPickUpInfo) {\r\n  const arrivalDateTime = new Date(returnReqPickUpInfo.arrivalDate);\r\n    arrivalDateTime.setHours(returnReqPickUpInfo.arrivalTime);\r\n    const pickUpInfo = {\r\n      sellerData: {\r\n        SP: returnReqPickUpInfo.servicePointId,\r\n        timeslot: arrivalDateTime\r\n      }\r\n    };\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await returnRequestsService.confirmReturnRequestPickUpInfo(returnRequestId,pickUpInfo);\r\n      dispatch(success(data));\r\n      history.push(\"/myReturnRequests/view\");\r\n\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't confirm pick up info\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: returnRequestsConstants.CONFIRM_PICK_UP_RETURN_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: returnRequestsConstants.CONFIRM_PICK_UP_RETURN_SUCCESS,\r\n      returnRequest: data,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: returnRequestsConstants.CONFIRM_PICK_UP_RETURN_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\nfunction viewReturnRequest(returnRequestId) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await returnRequestsService.viewReturnRequest(returnRequestId);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't view return request\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: returnRequestsConstants.VIEW_RETURN_REQUEST_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: returnRequestsConstants.VIEW_RETURN_REQUEST_SUCCESS,\r\n      returnRequest: data,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: returnRequestsConstants.VIEW_RETURN_REQUEST_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}