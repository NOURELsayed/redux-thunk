{"ast":null,"code":"import { reviewConstants } from '../constants';\nimport { reviewService } from './../services';\nimport { alertActions } from './';\nimport { history } from '../helpers';\nexport const reviewActions = {\n  postReview,\n  updateReview\n}; //--------------------------------------Post A Review--------------------------------------\n\nfunction postReview(body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await reviewService.postReview(body);\n      dispatch(success(data));\n      history.push(`/order/${body.order}`);\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: 'can\\'t post review',\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: reviewConstants.POST_REVIEW_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: reviewConstants.POST_REVIEW_SUCCESS\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: reviewConstants.POST_REVIEW_FAILURE,\n      error\n    };\n  }\n} //--------------------------------------Update A Review--------------------------------------\n\n\nfunction updateReview(reviewId, orderId, body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await reviewService.updateReview(reviewId, body);\n      dispatch(success(data));\n      history.push(`/order/${orderId}`);\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: 'can\\'t update review',\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: reviewConstants.UPDATE_REVIEW_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: reviewConstants.UPDATE_REVIEW_SUCCESS\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: reviewConstants.UPDATE_REVIEW_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/review.actions.js"],"names":["reviewConstants","reviewService","alertActions","history","reviewActions","postReview","updateReview","body","dispatch","request","data","success","push","order","ex","failure","error","header","content","message","type","POST_REVIEW_REQUEST","POST_REVIEW_SUCCESS","POST_REVIEW_FAILURE","reviewId","orderId","UPDATE_REVIEW_REQUEST","UPDATE_REVIEW_SUCCESS","UPDATE_REVIEW_FAILURE"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,SAAQC,OAAR,QAAsB,YAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,UAD2B;AAE3BC,EAAAA;AAF2B,CAAtB,C,CAKP;;AACA,SAASD,UAAT,CAAoBE,IAApB,EAA0B;AACtB,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMA,QAAQ,CAACC,OAAO,EAAR,CAAd;;AACA,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMT,aAAa,CAACI,UAAd,CAAyBE,IAAzB,CAAvB;AACAC,MAAAA,QAAQ,CAACG,OAAO,CAACD,IAAD,CAAR,CAAR;AACAP,MAAAA,OAAO,CAACS,IAAR,CAAc,UAASL,IAAI,CAACM,KAAM,EAAlC;AACH,KAJD,CAIE,OAAOC,EAAP,EAAW;AACTN,MAAAA,QAAQ,CAACO,OAAO,CAACD,EAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAACN,YAAY,CAACc,KAAb,CAAmB;AAAEC,QAAAA,MAAM,EAAE,oBAAV;AAAgCC,QAAAA,OAAO,EAAEJ,EAAE,CAACK;AAA5C,OAAnB,CAAD,CAAR;AACH;AACJ,GAVD;;AAYA,WAASV,OAAT,GAAmB;AACf,WAAO;AACHW,MAAAA,IAAI,EAAEpB,eAAe,CAACqB;AADnB,KAAP;AAGH;;AAED,WAASV,OAAT,CAAiBD,IAAjB,EAAuB;AACnB,WAAO;AACHU,MAAAA,IAAI,EAAEpB,eAAe,CAACsB;AADnB,KAAP;AAGH;;AAED,WAASP,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,WAAO;AACHI,MAAAA,IAAI,EAAEpB,eAAe,CAACuB,mBADnB;AAEHP,MAAAA;AAFG,KAAP;AAIH;AACJ,C,CAED;;;AACA,SAASV,YAAT,CAAsBkB,QAAtB,EAAgCC,OAAhC,EAAyClB,IAAzC,EAA+C;AAC3C,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMA,QAAQ,CAACC,OAAO,EAAR,CAAd;;AACA,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMT,aAAa,CAACK,YAAd,CAA2BkB,QAA3B,EAAqCjB,IAArC,CAAvB;AACAC,MAAAA,QAAQ,CAACG,OAAO,CAACD,IAAD,CAAR,CAAR;AACAP,MAAAA,OAAO,CAACS,IAAR,CAAc,UAASa,OAAQ,EAA/B;AACH,KAJD,CAIE,OAAOX,EAAP,EAAW;AACTN,MAAAA,QAAQ,CAACO,OAAO,CAACD,EAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAACN,YAAY,CAACc,KAAb,CAAmB;AAAEC,QAAAA,MAAM,EAAE,sBAAV;AAAkCC,QAAAA,OAAO,EAAEJ,EAAE,CAACK;AAA9C,OAAnB,CAAD,CAAR;AACH;AACJ,GAVD;;AAYA,WAASV,OAAT,GAAmB;AACf,WAAO;AACHW,MAAAA,IAAI,EAAEpB,eAAe,CAAC0B;AADnB,KAAP;AAGH;;AAED,WAASf,OAAT,CAAiBD,IAAjB,EAAuB;AACnB,WAAO;AACHU,MAAAA,IAAI,EAAEpB,eAAe,CAAC2B;AADnB,KAAP;AAGH;;AAED,WAASZ,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,WAAO;AACHI,MAAAA,IAAI,EAAEpB,eAAe,CAAC4B,qBADnB;AAEHZ,MAAAA;AAFG,KAAP;AAIH;AACJ","sourcesContent":["import { reviewConstants } from '../constants';\r\nimport { reviewService } from './../services';\r\nimport { alertActions } from './';\r\nimport {history} from '../helpers';\r\n\r\nexport const reviewActions = {\r\n  postReview,\r\n  updateReview,\r\n};\r\n\r\n//--------------------------------------Post A Review--------------------------------------\r\nfunction postReview(body) {    \r\n    return async dispatch => {\r\n        await dispatch(request());\r\n        try {\r\n            const { data } = await reviewService.postReview(body);\r\n            dispatch(success(data));\r\n            history.push(`/order/${body.order}`);\r\n        } catch (ex) {\r\n            dispatch(failure(ex));\r\n            dispatch(alertActions.error({ header: 'can\\'t post review', content: ex.message }));\r\n        }\r\n    };\r\n\r\n    function request() {\r\n        return {\r\n            type: reviewConstants.POST_REVIEW_REQUEST\r\n        };\r\n    }\r\n  \r\n    function success(data) {\r\n        return {\r\n            type: reviewConstants.POST_REVIEW_SUCCESS,\r\n        };\r\n    }\r\n  \r\n    function failure(error) {\r\n        return {\r\n            type: reviewConstants.POST_REVIEW_FAILURE,\r\n            error\r\n        };\r\n    }\r\n}\r\n\r\n//--------------------------------------Update A Review--------------------------------------\r\nfunction updateReview(reviewId, orderId, body) {    \r\n    return async dispatch => {\r\n        await dispatch(request());\r\n        try {\r\n            const { data } = await reviewService.updateReview(reviewId, body);\r\n            dispatch(success(data));\r\n            history.push(`/order/${orderId}`);\r\n        } catch (ex) {\r\n            dispatch(failure(ex));\r\n            dispatch(alertActions.error({ header: 'can\\'t update review', content: ex.message }));\r\n        }\r\n    };\r\n\r\n    function request() {\r\n        return {\r\n            type: reviewConstants.UPDATE_REVIEW_REQUEST\r\n        };\r\n    }\r\n  \r\n    function success(data) {\r\n        return {\r\n            type: reviewConstants.UPDATE_REVIEW_SUCCESS,\r\n        };\r\n    }\r\n  \r\n    function failure(error) {\r\n        return {\r\n            type: reviewConstants.UPDATE_REVIEW_FAILURE,\r\n            error\r\n        };\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}