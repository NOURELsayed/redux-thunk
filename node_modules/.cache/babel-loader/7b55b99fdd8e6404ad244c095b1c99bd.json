{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UserSettings.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Segment, Grid, Icon, Button } from 'semantic-ui-react';\nimport { UpdatePasswordModal } from './UpdatePasswordModal';\nimport { UpdateEmailModal } from './UpdateEmailModal';\nimport { UpdateMobileModal } from './UpdateMobileModal';\nimport { UpdateAddressModal } from './UpdateAddressModal';\nimport { userActions } from '../../actions';\n\nclass UserSettings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleUserAccountStatus = async (userId, accountStatus) => {\n      if (accountStatus === \"activate\") {\n        const body = {\n          accountStatus: \"deactivate\"\n        };\n        await this.props.updateUserAccountStatus(userId, body);\n      } else {\n        const body = {\n          accountStatus: \"activate\"\n        };\n        await this.props.updateUserAccountStatus(userId, body);\n      }\n    };\n  }\n\n  handleEditEmailButtonClicked() {}\n\n  handleEditPasswordButtonClicked() {}\n\n  handleEditPhoneNumberButtonClicked() {}\n\n  handleEditPersonalInfoButtonClicked() {}\n\n  getAddressAsString(address) {\n    if (address) {\n      let addressAsString = ' ';\n\n      if (address.building) {\n        addressAsString += address.building;\n      }\n\n      if (address.street) {\n        if (addressAsString !== ' ') {\n          addressAsString += ' ';\n        }\n\n        addressAsString += address.street;\n      }\n\n      if (address.district) {\n        if (addressAsString !== ' ') {\n          addressAsString += ' ';\n        }\n\n        addressAsString += address.district;\n      }\n\n      if (address.city) {\n        if (addressAsString !== ' ') {\n          addressAsString += ', ';\n        }\n\n        addressAsString += address.city;\n      }\n\n      if (address.country) {\n        if (addressAsString !== ' ') {\n          addressAsString += ', ';\n        }\n\n        addressAsString += address.country;\n      }\n\n      if (address.floor) {\n        if (addressAsString !== ' ') {\n          addressAsString += ', ';\n        }\n\n        addressAsString += 'floor #: ' + address.floor;\n      }\n\n      if (address.apartment) {\n        if (addressAsString !== ' ') {\n          addressAsString += ', ';\n        }\n\n        addressAsString += 'apartment #: ' + address.apartment;\n      }\n\n      return addressAsString;\n    }\n\n    return 'not setted yet';\n  }\n\n  getVerifiedIcon(isVerified) {\n    if (isVerified) {\n      return /*#__PURE__*/React.createElement(Icon, {\n        color: \"green\",\n        name: \"checkmark\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Icon, {\n      color: \"yellow\",\n      name: \"warning\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    const {\n      userProfile\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"center\",\n      as: \"h2\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: '1em 2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, userProfile.accountStatus === 'deactivate' ? /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleUserAccountStatus(userProfile._id, userProfile.accountStatus),\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 36\n      }\n    }, \"Reactivate Account\")) : /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleUserAccountStatus(userProfile._id, userProfile.accountStatus),\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 35\n      }\n    }, \"Deactivate Account\")), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Account Information :\"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, \"username : \", userProfile.username))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, \"Name : \", userProfile.name))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, this.getVerifiedIcon(userProfile.email.isVerified), \"Email :\", userProfile.email.address)), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UpdateEmailModal, {\n      userEmail: userProfile.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, \"Password : ********\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UpdatePasswordModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, this.getVerifiedIcon(userProfile.phone.isVerified), \"Phone Number :\", `(${userProfile.phone.code}) ${userProfile.phone.number}`)), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UpdateMobileModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h2\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: '1em 2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Wallet Details :\"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, \"Available Credits : \", userProfile.wallet.amount))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, \"Locked Credits : \", userProfile.wallet.locked))))), /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h2\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: '1em 2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, \"Personal Information :\"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, \"Current address :\", this.getAddressAsString(userProfile.permanentAddress))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UpdateAddressModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h2\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: '1em 2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \"Legal Information :\"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, \"National ID : \", userProfile.nationalId || 'No Data Yet'))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, \"Gender : \", userProfile.gender))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }, \"BirthDate : \", new Date(userProfile.dob).toLocaleDateString()))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, \"Address :\", this.getAddressAsString(userProfile.legalAddress)))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    userProfile\n  } = state.users;\n  return {\n    user,\n    userProfile\n  };\n}\n\nconst actionCreators = {\n  updateUserAccountStatus: userActions.updateUserAccountStatus\n};\nconst connectedUserSettings = connect(mapState, actionCreators)(UserSettings);\nexport { connectedUserSettings as UserSettings };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UserSettings.jsx"],"names":["React","Component","connect","Header","Segment","Grid","Icon","Button","UpdatePasswordModal","UpdateEmailModal","UpdateMobileModal","UpdateAddressModal","userActions","UserSettings","state","handleUserAccountStatus","userId","accountStatus","body","props","updateUserAccountStatus","handleEditEmailButtonClicked","handleEditPasswordButtonClicked","handleEditPhoneNumberButtonClicked","handleEditPersonalInfoButtonClicked","getAddressAsString","address","addressAsString","building","street","district","city","country","floor","apartment","getVerifiedIcon","isVerified","render","userProfile","padding","_id","username","name","email","phone","code","number","wallet","amount","locked","permanentAddress","nationalId","gender","Date","dob","toLocaleDateString","legalAddress","mapState","user","authentication","users","actionCreators","connectedUserSettings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Header, Segment, Grid, Icon, Button } from 'semantic-ui-react';\r\nimport { UpdatePasswordModal } from './UpdatePasswordModal';\r\nimport { UpdateEmailModal } from './UpdateEmailModal';\r\nimport { UpdateMobileModal } from './UpdateMobileModal';\r\nimport { UpdateAddressModal } from './UpdateAddressModal';\r\nimport { userActions } from '../../actions';\r\n\r\nclass UserSettings extends Component {\r\n    state = {};\r\n\r\n    handleEditEmailButtonClicked() {}\r\n\r\n    handleEditPasswordButtonClicked() {}\r\n\r\n    handleEditPhoneNumberButtonClicked() {}\r\n\r\n    handleEditPersonalInfoButtonClicked() {}\r\n\r\n    getAddressAsString(address) {\r\n        if (address) {\r\n            let addressAsString = ' ';\r\n            if (address.building) {\r\n                addressAsString += address.building;\r\n            }\r\n            if (address.street) {\r\n                if (addressAsString !== ' ') {\r\n                    addressAsString += ' ';\r\n                }\r\n                addressAsString += address.street;\r\n            }\r\n\r\n            if (address.district) {\r\n                if (addressAsString !== ' ') {\r\n                    addressAsString += ' ';\r\n                }\r\n                addressAsString += address.district;\r\n            }\r\n\r\n            if (address.city) {\r\n                if (addressAsString !== ' ') {\r\n                    addressAsString += ', ';\r\n                }\r\n                addressAsString += address.city;\r\n            }\r\n\r\n            if (address.country) {\r\n                if (addressAsString !== ' ') {\r\n                    addressAsString += ', ';\r\n                }\r\n                addressAsString += address.country;\r\n            }\r\n\r\n            if (address.floor) {\r\n                if (addressAsString !== ' ') {\r\n                    addressAsString += ', ';\r\n                }\r\n                addressAsString += 'floor #: ' + address.floor;\r\n            }\r\n\r\n            if (address.apartment) {\r\n                if (addressAsString !== ' ') {\r\n                    addressAsString += ', ';\r\n                }\r\n                addressAsString += 'apartment #: ' + address.apartment;\r\n            }\r\n\r\n            return addressAsString;\r\n        }\r\n        return 'not setted yet';\r\n    }\r\n\r\n    getVerifiedIcon(isVerified) {\r\n        if (isVerified) {\r\n            return <Icon color='green' name='checkmark' size='small' />;\r\n        }\r\n        return <Icon color='yellow' name='warning' size='small' />;\r\n    }\r\n\r\n    handleUserAccountStatus = async (userId, accountStatus) => {\r\n        if (accountStatus === \"activate\") {\r\n          const body = { accountStatus: \"deactivate\" };\r\n          await this.props.updateUserAccountStatus(userId, body);\r\n        } else {\r\n          const body = { accountStatus: \"activate\" };\r\n          await this.props.updateUserAccountStatus(userId, body);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { userProfile } = this.props;\r\n        return (\r\n            <Segment>\r\n                <Header textAlign='center' as='h2' block>\r\n                    <Grid style={{ padding: '1em 2em' }}>\r\n                        {userProfile.accountStatus === 'deactivate' ? \r\n                        (<Grid.Row><Button onClick={() => this.handleUserAccountStatus(userProfile._id, userProfile.accountStatus)} color='green'>Reactivate Account</Button></Grid.Row>) : (\r\n                        <Grid.Row><Button onClick={() => this.handleUserAccountStatus(userProfile._id, userProfile.accountStatus)} color='red'>Deactivate Account</Button></Grid.Row>)}\r\n                        <Grid.Row>Account Information :</Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header textAlign='left' as='h4'>\r\n                                    username : {userProfile.username}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header textAlign='left' as='h4'>\r\n                                    Name : {userProfile.name}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={8}>\r\n                                <Header textAlign='left' as='h4'>\r\n                                    {this.getVerifiedIcon(\r\n                                        userProfile.email.isVerified,\r\n                                    )}\r\n                                    Email :{userProfile.email.address}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={1}>\r\n                                <UpdateEmailModal userEmail={userProfile.email} />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                        <Grid.Row>\r\n                            <Grid.Column width={8}>\r\n                                <Header textAlign='left' as='h4'>\r\n                                    Password : ********\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={1}>\r\n                                <UpdatePasswordModal />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={8}>\r\n                                <Header textAlign='left' as='h4'>\r\n                                    {this.getVerifiedIcon(\r\n                                        userProfile.phone.isVerified,\r\n                                    )}\r\n                                    Phone Number :\r\n                                    {`(${userProfile.phone.code}) ${userProfile.phone.number}`}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={1}>\r\n                                <UpdateMobileModal />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Header>\r\n                <Header textAlign='left' as='h2' block>\r\n                    <Grid style={{ padding: '1em 2em' }}>\r\n                        <Grid.Row>Wallet Details :</Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as='h4'>\r\n                                    Available Credits : {userProfile.wallet.amount}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as='h4'>\r\n                                    Locked Credits : {userProfile.wallet.locked}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Header>\r\n                <Header textAlign='left' as='h2' block>\r\n                    <Grid style={{ padding: '1em 2em' }}>\r\n                        <Grid.Row>Personal Information :</Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={8}>\r\n                                <Header as='h4'>\r\n                                    Current address :\r\n                                    {this.getAddressAsString(\r\n                                        userProfile.permanentAddress,\r\n                                    )}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <UpdateAddressModal />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Header>\r\n\r\n                <Header textAlign='left' as='h2' block>\r\n                    <Grid style={{ padding: '1em 2em' }}>\r\n                        <Grid.Row>Legal Information :</Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as='h4'>\r\n                                    National ID : {userProfile.nationalId || 'No Data Yet'}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as='h4'>\r\n                                    Gender : {userProfile.gender}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as='h4'>\r\n                                    BirthDate : {new Date(userProfile.dob).toLocaleDateString()}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as='h4'>\r\n                                    Address :\r\n                                    {this.getAddressAsString(\r\n                                        userProfile.legalAddress,\r\n                                    )}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Header>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { user } = state.authentication;\r\n    const { userProfile } = state.users;\r\n    return { user, userProfile };\r\n}\r\n\r\nconst actionCreators = {\r\n    updateUserAccountStatus: userActions.updateUserAccountStatus,\r\n};\r\n\r\nconst connectedUserSettings = connect(mapState, actionCreators)(UserSettings);\r\n\r\nexport { connectedUserSettings as UserSettings };\r\n"]},"metadata":{},"sourceType":"module"}