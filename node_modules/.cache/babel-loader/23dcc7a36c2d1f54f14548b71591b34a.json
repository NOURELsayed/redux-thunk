{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/SubmitBuyerPickupInfoPage.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Step, Grid, GridColumn } from \"semantic-ui-react\";\nimport { ChooseSPAndTime } from \"../ServicePoint\";\nimport { orderActions, servicePointActions } from \"../../actions\";\nimport { isPickUpDataValid } from \"../ServicePoint/shared\";\n\nclass SubmitBuyerPickupInfoPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.pickupInfoConfirmed = (picker, arrivalDate, arrivalTime, servicePointId) => {\n      const orderId = this.props.match.params.id;\n      this.props.submitBuyerPickupInfo({\n        arrivalDate,\n        arrivalTime,\n        servicePointId,\n        personInCharge: picker.personInCharge,\n        authorizedName: picker.authorizedName,\n        authorizedNationalID: picker.authorizedID,\n        authorisedUserId: picker.authorisedUserId\n      }, orderId);\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.clearSPState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      padded: \"horizontally\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Step.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Step, {\n      completed: isPickUpDataValid(this.props.pickUpInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"dolly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Step.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Step.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Pickup Info\"), /*#__PURE__*/React.createElement(Step.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Please Select Pickup Info\"))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GridColumn, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GridColumn, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ChooseSPAndTime, {\n      next: this.pickupInfoConfirmed,\n      orderId: this.props.match.params.id,\n      seller: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    personInCharge,\n    authorizedDataConfirmed,\n    authorizedName,\n    authorizedID,\n    authorisedUserId,\n    servicePoints,\n    servicePointId,\n    arrivalDate,\n    arrivalTime\n  } = state.servicePoint;\n  return {\n    user,\n    pickUpInfo: {\n      personInCharge,\n      authorizedDataConfirmed,\n      authorizedName,\n      authorizedID,\n      authorisedUserId,\n      servicePoints,\n      servicePointId,\n      arrivalDate,\n      arrivalTime\n    }\n  };\n}\n\nconst actionCreators = {\n  submitBuyerPickupInfo: orderActions.submitBuyerPickupInfo,\n  clearSPState: servicePointActions.clearSPState\n};\nconst connectedSubmitBuyerPickupInfoPage = connect(mapState, actionCreators)(SubmitBuyerPickupInfoPage);\nexport { connectedSubmitBuyerPickupInfoPage as SubmitBuyerPickupInfoPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/SubmitBuyerPickupInfoPage.jsx"],"names":["React","Component","connect","Icon","Step","Grid","GridColumn","ChooseSPAndTime","orderActions","servicePointActions","isPickUpDataValid","SubmitBuyerPickupInfoPage","pickupInfoConfirmed","picker","arrivalDate","arrivalTime","servicePointId","orderId","props","match","params","id","submitBuyerPickupInfo","personInCharge","authorizedName","authorizedNationalID","authorizedID","authorisedUserId","componentWillUnmount","clearSPState","render","pickUpInfo","mapState","state","user","authentication","authorizedDataConfirmed","servicePoints","servicePoint","actionCreators","connectedSubmitBuyerPickupInfoPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Step, Grid, GridColumn } from \"semantic-ui-react\";\r\nimport { ChooseSPAndTime } from \"../ServicePoint\";\r\nimport { orderActions, servicePointActions } from \"../../actions\";\r\nimport { isPickUpDataValid } from \"../ServicePoint/shared\";\r\n\r\nclass SubmitBuyerPickupInfoPage extends Component {\r\n  pickupInfoConfirmed = (picker, arrivalDate, arrivalTime, servicePointId) => {\r\n    const orderId = this.props.match.params.id;\r\n    this.props.submitBuyerPickupInfo({\r\n      arrivalDate,\r\n      arrivalTime,\r\n      servicePointId,\r\n      personInCharge: picker.personInCharge,\r\n      authorizedName: picker.authorizedName,\r\n      authorizedNationalID: picker.authorizedID,\r\n      authorisedUserId: picker.authorisedUserId,\r\n    }, orderId);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n\t\tthis.props.clearSPState();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Grid padded=\"horizontally\">\r\n        <Grid.Row centered>\r\n          <Step.Group>\r\n            <Step\r\n              completed={isPickUpDataValid(this.props.pickUpInfo)}\r\n            >\r\n              <Icon name=\"dolly\" />\r\n              <Step.Content>\r\n                <Step.Title>Pickup Info</Step.Title>\r\n                <Step.Description>Please Select Pickup Info</Step.Description>\r\n              </Step.Content>\r\n            </Step>\r\n          </Step.Group>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <GridColumn width={4}></GridColumn>\r\n          <GridColumn width={6}>\r\n            <ChooseSPAndTime next={this.pickupInfoConfirmed} orderId={this.props.match.params.id} seller={false}/>\r\n          </GridColumn>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const {\r\n    personInCharge,\r\n    authorizedDataConfirmed,\r\n    authorizedName,\r\n    authorizedID,\r\n    authorisedUserId,\r\n    servicePoints,\r\n    servicePointId,\r\n    arrivalDate,\r\n    arrivalTime,\r\n  } = state.servicePoint;\r\n  return {\r\n    user,\r\n    pickUpInfo: {\r\n      personInCharge,\r\n      authorizedDataConfirmed,\r\n      authorizedName,\r\n      authorizedID,\r\n      authorisedUserId,\r\n      servicePoints,\r\n      servicePointId,\r\n      arrivalDate,\r\n      arrivalTime,\r\n    },\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  submitBuyerPickupInfo: orderActions.submitBuyerPickupInfo,\r\n  clearSPState: servicePointActions.clearSPState,\r\n};\r\n\r\nconst connectedSubmitBuyerPickupInfoPage = connect(mapState, actionCreators)(SubmitBuyerPickupInfoPage);\r\n\r\nexport { connectedSubmitBuyerPickupInfoPage as SubmitBuyerPickupInfoPage };\r\n"]},"metadata":{},"sourceType":"module"}