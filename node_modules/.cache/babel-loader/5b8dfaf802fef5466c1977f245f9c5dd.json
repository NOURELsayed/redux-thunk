{"ast":null,"code":"import { authConstants } from '../constants';\nimport { authService } from '../services';\nconst user = authService.getCurrentUser();\nconst initialState = user ? {\n  loggedIn: true,\n  user\n} : {};\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case authConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user\n      };\n\n    case authConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user\n      };\n\n    case authConstants.LOGIN_FAILURE:\n      return { ...state,\n        loggingIn: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/reducers/auth.reducer.js"],"names":["authConstants","authService","user","getCurrentUser","initialState","loggedIn","authentication","state","action","type","LOGIN_REQUEST","loggingIn","LOGIN_SUCCESS","LOGIN_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,IAAI,GAAGD,WAAW,CAACE,cAAZ,EAAb;AACA,MAAMC,YAAY,GAAGF,IAAI,GAAG;AAAEG,EAAAA,QAAQ,EAAE,IAAZ;AAAkBH,EAAAA;AAAlB,CAAH,GAA8B,EAAvD;AAEA,OAAO,SAASI,cAAT,CAAwBC,KAAK,GAAGH,YAAhC,EAA8CI,MAA9C,EAAsD;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAa,CAACU,aAAnB;AACI,aAAO;AACHC,QAAAA,SAAS,EAAE,IADR;AAEHT,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAFV,OAAP;;AAIJ,SAAKF,aAAa,CAACY,aAAnB;AACI,aAAO;AACHP,QAAAA,QAAQ,EAAE,IADP;AAEHH,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAFV,OAAP;;AAIJ,SAAKF,aAAa,CAACa,aAAnB;AACI,aAAO,EACH,GAAGN,KADA;AAEHI,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAjBR;AAmBH","sourcesContent":["import { authConstants } from '../constants';\r\nimport { authService } from '../services';\r\n\r\nconst user = authService.getCurrentUser();\r\nconst initialState = user ? { loggedIn: true, user } : {};\r\n\r\nexport function authentication(state = initialState, action) {\r\n    switch (action.type) {\r\n        case authConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user,\r\n            };\r\n        case authConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user,\r\n            };\r\n        case authConstants.LOGIN_FAILURE:\r\n            return {\r\n                ...state,                \r\n                loggingIn: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}