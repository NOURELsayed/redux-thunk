{"ast":null,"code":"import { categoryConstants } from '../constants';\nimport { categoryService } from '../services';\nimport { createOptions } from \"../helpers\";\nimport { postActions } from \"./post.actions\";\nexport const categoryActions = {\n  getAll,\n  getDetails,\n  getFields,\n  getAllCategories,\n  getUserFavoriteCategories,\n  unFavoriteCategory,\n  favoriteCategory\n}; // getAll is used to get all categories to be used in posts\n\nfunction getAll() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const level = -1;\n      const {\n        data: categories\n      } = await categoryService.getAll();\n      const options = await createOptions(categories);\n      dispatch(success());\n      await dispatch(postActions.categoriesNotLeafUpdated(categories, options, level));\n    } catch (ex) {\n      dispatch(failure(ex.message));\n    }\n  };\n\n  function request() {\n    return {\n      type: categoryConstants.GET_ALL_REQUEST\n    };\n  }\n\n  function success() {\n    return {\n      type: categoryConstants.GET_ALL_SUCCESS\n    };\n  }\n\n  function failure(errors) {\n    return {\n      type: categoryConstants.GET_ALL_FAILURE,\n      errors\n    };\n  }\n}\n\nfunction getDetails(id) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await categoryService.getDetails(id);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex.message));\n    }\n  };\n\n  function request() {\n    return {\n      type: categoryConstants.GET_CATEGORY_DETAILS_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: categoryConstants.GET_CATEGORY_DETAILS_SUCCESS,\n      data\n    };\n  }\n\n  function failure(errors) {\n    return {\n      type: categoryConstants.GET_CATEGORY_DETAILS_FAILURE,\n      errors\n    };\n  }\n}\n\nfunction getFields(id) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data: fields\n      } = await categoryService.getFields(id);\n      dispatch(success(fields));\n    } catch (ex) {\n      dispatch(failure(ex.message));\n    }\n  };\n\n  function request() {\n    return {\n      type: categoryConstants.GET_ALL_FIELDS_REQUEST\n    };\n  }\n\n  function success(fields) {\n    return {\n      type: categoryConstants.GET_ALL_FIELDS_SUCCESS,\n      fields\n    };\n  }\n\n  function failure(errors) {\n    return {\n      type: categoryConstants.GET_ALL_FIELDS_FAILURE,\n      errors\n    };\n  }\n}\n\nfunction getAllCategories() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await categoryService.getAll();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex.message));\n    }\n  };\n\n  function request() {\n    return {\n      type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n    };\n  }\n\n  function success(categories) {\n    return {\n      type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n      categories\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getUserFavoriteCategories() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await categoryService.viewFavoriteCategories();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex.message));\n    }\n  };\n\n  function request() {\n    return {\n      type: categoryConstants.GET_FAVORITE_CATEGORIES_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: categoryConstants.GET_FAVORITE_CATEGORIES_SUCCESS,\n      favoriteCategories: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: categoryConstants.GET_FAVORITE_CATEGORIES_FAILURE,\n      error\n    };\n  }\n}\n\nfunction unFavoriteCategory(categoryId) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await categoryService.unFavoriteCategory(categoryId);\n      dispatch(success(data.favoriteCategories));\n    } catch (ex) {\n      dispatch(failure(ex.message));\n    }\n  };\n\n  function request() {\n    return {\n      type: categoryConstants.UNFAVORITE_CATEGORY_REQUEST\n    };\n  }\n\n  function success(favoriteCategories) {\n    return {\n      type: categoryConstants.UNFAVORITE_CATEGORY_SUCCESS,\n      favoriteCategories\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: categoryConstants.UNFAVORITE_CATEGORY_FAILURE,\n      error\n    };\n  }\n}\n\nfunction favoriteCategory(categoryId) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await categoryService.favoriteCategory(categoryId);\n      dispatch(success(data.favoriteCategories));\n    } catch (ex) {\n      dispatch(failure(ex.message));\n    }\n  };\n\n  function request() {\n    return {\n      type: categoryConstants.FAVORITE_CATEGORY_REQUEST\n    };\n  }\n\n  function success(favoriteCategories) {\n    return {\n      type: categoryConstants.FAVORITE_CATEGORY_SUCCESS,\n      favoriteCategories\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: categoryConstants.FAVORITE_CATEGORY_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/category.actions.js"],"names":["categoryConstants","categoryService","createOptions","postActions","categoryActions","getAll","getDetails","getFields","getAllCategories","getUserFavoriteCategories","unFavoriteCategory","favoriteCategory","dispatch","request","level","data","categories","options","success","categoriesNotLeafUpdated","ex","failure","message","type","GET_ALL_REQUEST","GET_ALL_SUCCESS","errors","GET_ALL_FAILURE","id","GET_CATEGORY_DETAILS_REQUEST","GET_CATEGORY_DETAILS_SUCCESS","GET_CATEGORY_DETAILS_FAILURE","fields","GET_ALL_FIELDS_REQUEST","GET_ALL_FIELDS_SUCCESS","GET_ALL_FIELDS_FAILURE","GET_ALL_CATEGORIES_REQUEST","GET_ALL_CATEGORIES_SUCCESS","error","GET_ALL_CATEGORIES_FAILURE","viewFavoriteCategories","GET_FAVORITE_CATEGORIES_REQUEST","GET_FAVORITE_CATEGORIES_SUCCESS","favoriteCategories","GET_FAVORITE_CATEGORIES_FAILURE","categoryId","UNFAVORITE_CATEGORY_REQUEST","UNFAVORITE_CATEGORY_SUCCESS","UNFAVORITE_CATEGORY_FAILURE","FAVORITE_CATEGORY_REQUEST","FAVORITE_CATEGORY_SUCCESS","FAVORITE_CATEGORY_FAILURE"],"mappings":"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","sourcesContent":["import {categoryConstants} from '../constants';\r\nimport {categoryService} from '../services';\r\nimport {createOptions} from \"../helpers\";\r\nimport {postActions} from \"./post.actions\";\r\n\r\nexport const categoryActions = {\r\n  getAll,\r\n  getDetails,\r\n  getFields,\r\n  getAllCategories,\r\n  getUserFavoriteCategories,\r\n  unFavoriteCategory,\r\n  favoriteCategory,\r\n};\r\n\r\n// getAll is used to get all categories to be used in posts\r\nfunction getAll() {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const level = -1;\r\n      const {data: categories} = await categoryService.getAll();\r\n      const options = await createOptions(categories);\r\n      dispatch(success());\r\n      await dispatch(postActions.categoriesNotLeafUpdated(categories, options, level))\r\n    } catch (ex) {\r\n      dispatch(failure(ex.message));\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {type: categoryConstants.GET_ALL_REQUEST}\r\n  }\r\n\r\n  function success() {\r\n    return {type: categoryConstants.GET_ALL_SUCCESS}\r\n  }\r\n\r\n  function failure(errors) {\r\n    return {type: categoryConstants.GET_ALL_FAILURE, errors}\r\n  }\r\n}\r\n\r\nfunction getDetails(id) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const {data} = await categoryService.getDetails(id);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex.message));\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {type: categoryConstants.GET_CATEGORY_DETAILS_REQUEST}\r\n  }\r\n\r\n  function success(data) {\r\n    return {type: categoryConstants.GET_CATEGORY_DETAILS_SUCCESS, data}\r\n  }\r\n\r\n  function failure(errors) {\r\n    return {type: categoryConstants.GET_CATEGORY_DETAILS_FAILURE, errors}\r\n  }\r\n}\r\n\r\nfunction getFields(id) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const {data: fields} = await categoryService.getFields(id);\r\n      dispatch(success(fields));\r\n    } catch (ex) {\r\n      dispatch(failure(ex.message));\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {type: categoryConstants.GET_ALL_FIELDS_REQUEST}\r\n  }\r\n\r\n  function success(fields) {\r\n    return {type: categoryConstants.GET_ALL_FIELDS_SUCCESS, fields}\r\n  }\r\n\r\n  function failure(errors) {\r\n    return {type: categoryConstants.GET_ALL_FIELDS_FAILURE, errors}\r\n  }\r\n}\r\n\r\nfunction getAllCategories() {\r\n  return async dispatch => {\r\n      await dispatch(request());\r\n      try {\r\n          const { data } = await categoryService.getAll();            \r\n          dispatch(success(data));\r\n      } catch (ex) {\r\n          dispatch(failure(ex.message));\r\n      }\r\n  };\r\n\r\n  function request() {\r\n      return {type: categoryConstants.GET_ALL_CATEGORIES_REQUEST}\r\n  }\r\n\r\n  function success(categories) {\r\n      return {type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS, categories}\r\n  }\r\n\r\n  function failure(error) {\r\n      return {type: categoryConstants.GET_ALL_CATEGORIES_FAILURE, error}\r\n  }\r\n}\r\n\r\nfunction getUserFavoriteCategories() {\r\n  return async dispatch => {\r\n      await dispatch(request());\r\n      try {\r\n          const { data } = await categoryService.viewFavoriteCategories();            \r\n          dispatch(success(data));\r\n      } catch (ex) {\r\n          dispatch(failure(ex.message));\r\n      }\r\n  };\r\n\r\n  function request() {\r\n      return {type: categoryConstants.GET_FAVORITE_CATEGORIES_REQUEST}\r\n  }\r\n\r\n  function success(data) {\r\n      return {type: categoryConstants.GET_FAVORITE_CATEGORIES_SUCCESS, favoriteCategories: data}\r\n  }\r\n\r\n  function failure(error) {\r\n      return {type: categoryConstants.GET_FAVORITE_CATEGORIES_FAILURE, error}\r\n  }\r\n}\r\n\r\nfunction unFavoriteCategory(categoryId) {\r\n  return async dispatch => {\r\n      await dispatch(request());\r\n      try {\r\n          const { data } = await categoryService.unFavoriteCategory(categoryId);            \r\n          dispatch(success(data.favoriteCategories));\r\n      } catch (ex) {\r\n          dispatch(failure(ex.message));\r\n      }\r\n  };\r\n\r\n  function request() {\r\n      return {type: categoryConstants.UNFAVORITE_CATEGORY_REQUEST}\r\n  }\r\n\r\n  function success(favoriteCategories) {\r\n      return {type: categoryConstants.UNFAVORITE_CATEGORY_SUCCESS, favoriteCategories}\r\n  }\r\n\r\n  function failure(error) {\r\n      return {type: categoryConstants.UNFAVORITE_CATEGORY_FAILURE, error}\r\n  }\r\n}\r\n\r\nfunction favoriteCategory(categoryId) {\r\n  return async dispatch => {\r\n      await dispatch(request());\r\n      try {\r\n          const { data } = await categoryService.favoriteCategory(categoryId);            \r\n          dispatch(success(data.favoriteCategories));\r\n      } catch (ex) {\r\n          dispatch(failure(ex.message));\r\n      }\r\n  };\r\n\r\n  function request() {\r\n      return {type: categoryConstants.FAVORITE_CATEGORY_REQUEST}\r\n  }\r\n\r\n  function success(favoriteCategories) {\r\n      return {type: categoryConstants.FAVORITE_CATEGORY_SUCCESS, favoriteCategories}\r\n  }\r\n\r\n  function failure(error) {\r\n      return {type: categoryConstants.FAVORITE_CATEGORY_FAILURE, error}\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}