{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/SendInvitationPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../actions';\nimport { Grid, Label, Button, Input, Card, Icon } from 'semantic-ui-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nclass SendInvitationPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      invitations: [],\n      copySuccess: ''\n    };\n\n    this.sendInvitationClicked = () => {\n      this.props.sendInvitation(this.state.email.toLowerCase());\n    };\n\n    this.emailChanged = (e, {\n      value\n    }) => {\n      this.setState({\n        email: value\n      });\n    };\n\n    this.handleResendInvitation = async (e, {\n      invitation_id\n    }) => {\n      await this.props.resendInvitation(invitation_id);\n      this.setState({\n        invitations: this.props.invitations\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.generateShareableLink();\n    await this.props.getMyInvitations(this.props.user.id);\n    this.setState({\n      invitations: this.props.invitations\n    });\n  }\n\n  render() {\n    const {\n      invitations,\n      shareableLink\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, shareableLink && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"Shareable Link\"), /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: shareableLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: \"copy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Input, {\n      disabled: true,\n      value: shareableLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Email\",\n      onChange: this.emailChanged,\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      onClick: this.sendInvitationClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \" Send Invition\"))), invitations && invitations.length > 0 ? invitations.map(invitation => /*#__PURE__*/React.createElement(Grid.Row, {\n      key: invitation._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 47\n      }\n    }), invitation.inviteeEmail), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 47\n      }\n    }), new Date(invitation.createdAt).toLocaleDateString(), \" \", new Date(invitation.createdAt).toLocaleTimeString()), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, invitation.used ? 'User Accepted' : /*#__PURE__*/React.createElement(Button, {\n      animated: \"vertical\",\n      color: \"teal\",\n      disabled: invitation.resendCounter === 0,\n      invitation_id: invitation._id,\n      onClick: this.handleResendInvitation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button.Content, {\n      visible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 45\n      }\n    }, \"Resend Invitation\"), /*#__PURE__*/React.createElement(Button.Content, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"redo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 68\n      }\n    }))))))) : /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \" No Invitations Sent Yet \"))));\n  }\n\n}\n\nconst actionCreators = {\n  viewInvitations: userActions.viewInvitations,\n  getMyInvitations: userActions.getAllInvitations,\n  sendInvitation: userActions.sendInvitation,\n  resendInvitation: userActions.resendInvitation,\n  generateShareableLink: userActions.generateShareableLink\n};\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    invitations,\n    shareableLink\n  } = state.users;\n  return {\n    user,\n    invitations,\n    shareableLink\n  };\n}\n\nconst connectedSendInvitationPage = connect(mapState, actionCreators)(SendInvitationPage);\nexport { connectedSendInvitationPage as SendInvitationPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/SendInvitationPage.jsx"],"names":["React","Component","connect","userActions","Grid","Label","Button","Input","Card","Icon","CopyToClipboard","SendInvitationPage","state","email","invitations","copySuccess","sendInvitationClicked","props","sendInvitation","toLowerCase","emailChanged","e","value","setState","handleResendInvitation","invitation_id","resendInvitation","componentDidMount","generateShareableLink","getMyInvitations","user","id","render","shareableLink","length","map","invitation","_id","inviteeEmail","Date","createdAt","toLocaleDateString","toLocaleTimeString","used","resendCounter","actionCreators","viewInvitations","getAllInvitations","mapState","authentication","users","connectedSendInvitationPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userActions } from '../../actions'\r\nimport { Grid, Label, Button, Input, Card, Icon } from 'semantic-ui-react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nclass SendInvitationPage extends Component {\r\n    state = {\r\n        email: '',\r\n        invitations: [],\r\n        copySuccess: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.generateShareableLink();\r\n        await this.props.getMyInvitations(this.props.user.id);\r\n        this.setState({ invitations: this.props.invitations });\r\n    }\r\n\r\n    sendInvitationClicked = () => {\r\n        this.props.sendInvitation(this.state.email.toLowerCase())\r\n    }\r\n\r\n    emailChanged = (e, { value }) => {\r\n        this.setState({ email: value })\r\n    }\r\n\r\n    handleResendInvitation = async (e, { invitation_id }) => {\r\n        await this.props.resendInvitation(invitation_id);\r\n        this.setState({ invitations: this.props.invitations });\r\n    }\r\n\r\n    render() {\r\n        const { invitations, shareableLink } = this.props;\r\n        return (\r\n            <Grid>\r\n                <Grid.Row>\r\n                        {shareableLink && \r\n                        <React.Fragment>\r\n                            <Label>Shareable Link</Label>\r\n                            <CopyToClipboard text={shareableLink}>\r\n                                <Button icon='copy'></Button>\r\n                            </CopyToClipboard>\r\n                            <Input disabled value={shareableLink} />\r\n                        </React.Fragment>}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Input placeholder='Email' onChange={this.emailChanged} value={this.state.email}></Input>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Button positive onClick={this.sendInvitationClicked}> Send Invition</Button>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                {invitations && invitations.length > 0 ?\r\n                    invitations.map(invitation => (\r\n                        <Grid.Row key={invitation._id}>\r\n                            <Card>\r\n                                <Card.Content><Icon name='mail' />{invitation.inviteeEmail}</Card.Content>\r\n                                <Card.Content><Icon name='calendar'/>{new Date(invitation.createdAt).toLocaleDateString()} {new Date(invitation.createdAt).toLocaleTimeString()}</Card.Content>\r\n                                <Card.Content>\r\n                                    { \r\n                                        invitation.used ? 'User Accepted' :\r\n                                        <Button animated='vertical' color='teal' disabled={invitation.resendCounter === 0} invitation_id={invitation._id} onClick={this.handleResendInvitation}>\r\n                                            <Button.Content visible>Resend Invitation</Button.Content>\r\n                                            <Button.Content hidden><Icon name='redo' /></Button.Content>\r\n                                        </Button>\r\n                                    }\r\n                                    </Card.Content>\r\n                            </Card>\r\n                        </Grid.Row>\r\n                    ))\r\n                    : <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Label> No Invitations Sent Yet </Label>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                }\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst actionCreators = {\r\n    viewInvitations: userActions.viewInvitations,\r\n    getMyInvitations: userActions.getAllInvitations,\r\n    sendInvitation: userActions.sendInvitation,\r\n    resendInvitation: userActions.resendInvitation,\r\n    generateShareableLink: userActions.generateShareableLink,\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { user } = state.authentication;\r\n    const { invitations, shareableLink } = state.users;\r\n    return {\r\n        user,\r\n        invitations,\r\n        shareableLink,\r\n    };\r\n}\r\n\r\n\r\nconst connectedSendInvitationPage = connect(mapState, actionCreators)(SendInvitationPage);\r\nexport { connectedSendInvitationPage as SendInvitationPage };"]},"metadata":{},"sourceType":"module"}