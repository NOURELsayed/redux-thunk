{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/moneyWithdrawalContainer/editMoneyWithdrawalPage.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Dropdown, Grid, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { moneyWithdrawalActions } from \"../../actions\";\nimport DatePicker from \"react-datepicker\";\nimport * as moment from \"moment\";\nimport { getServicePoint } from \"../../helpers/utils\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EditWithdrawal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startDate: new Date()\n    };\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.formatDate = date => {\n      if (date) return new Date(moment(date).format(\"MM-DD-YYYY h:mm\"));\n    };\n\n    this.handleSubmit = () => {\n      const {\n        withdrawalRequests\n      } = this.props;\n      const timeslot = new Date(withdrawalRequests.timeslot).toISOString();\n      const withdrawalObj = {\n        amount: Number(withdrawalRequests.amount),\n        timeslot,\n        SP: withdrawalRequests.SP._id\n      };\n      this.props.editRequest(withdrawalRequests._id, withdrawalObj);\n    };\n\n    this.handleDropDownListChange = (e, {\n      value\n    }) => {\n      this.props.SPChange(value);\n    };\n\n    this.setDate = date => {\n      this.props.timeSlotChange(date);\n    };\n\n    this.setAmount = e => {\n      this.props.amountChange(e.target.value);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getOneRequest(id);\n    getServicePoint(id).then(data => {\n      this.setState({\n        sp: data\n      });\n    });\n  }\n\n  render() {\n    const {\n      withdrawalRequests\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: withdrawalRequests.amount,\n      defaultValue: withdrawalRequests.amount,\n      onChange: e => this.setAmount(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Time Slot\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.formatDate(withdrawalRequests.timeslot),\n      onChange: date => this.setDate(date),\n      className: \"red-border\",\n      timeFormat: \"HH:mm\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      showTimeSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Service Point\"), /*#__PURE__*/React.createElement(Dropdown, {\n      fluid: true,\n      selection: true,\n      options: this.state.sp || [],\n      onChange: this.handleDropDownListChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Sumbit\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    withdrawalRequests\n  } = state.moneyWithdrawal;\n  return {\n    user,\n    withdrawalRequests\n  };\n}\n\nconst actionCreators = {\n  getOneRequest: moneyWithdrawalActions.getOneRequest,\n  amountChange: moneyWithdrawalActions.amountChange,\n  timeSlotChange: moneyWithdrawalActions.timeSlotChange,\n  SPChange: moneyWithdrawalActions.SPChange,\n  editRequest: moneyWithdrawalActions.editRequest\n};\nconst connectedMoneyWithdrawal = connect(mapState, actionCreators)(EditWithdrawal);\nexport { connectedMoneyWithdrawal as editWithdrawal };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/moneyWithdrawalContainer/editMoneyWithdrawalPage.jsx"],"names":["React","Component","Button","Dropdown","Grid","Form","connect","moneyWithdrawalActions","DatePicker","moment","getServicePoint","EditWithdrawal","state","startDate","Date","handleChange","date","setState","formatDate","format","handleSubmit","withdrawalRequests","props","timeslot","toISOString","withdrawalObj","amount","Number","SP","_id","editRequest","handleDropDownListChange","e","value","SPChange","setDate","timeSlotChange","setAmount","amountChange","target","componentDidMount","id","match","params","getOneRequest","then","data","sp","render","bind","mapState","user","authentication","moneyWithdrawal","actionCreators","connectedMoneyWithdrawal","editWithdrawal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,IAAjC,QAA6C,mBAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAO,4CAAP;;AACA,MAAMC,cAAN,SAA6BV,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAWrCW,KAXqC,GAW7B;AACNC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AADL,KAX6B;;AAAA,SAerCC,YAfqC,GAetBC,IAAI,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAEG;AADC,OAAd;AAGD,KAnBoC;;AAAA,SAoBrCE,UApBqC,GAoBxBF,IAAI,IAAI;AACnB,UAAIA,IAAJ,EAAU,OAAO,IAAIF,IAAJ,CAASL,MAAM,CAACO,IAAD,CAAN,CAAaG,MAAb,CAAoB,iBAApB,CAAT,CAAP;AACX,KAtBoC;;AAAA,SAuBrCC,YAvBqC,GAuBtB,MAAM;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAyB,KAAKC,KAApC;AACA,YAAMC,QAAQ,GAAG,IAAIT,IAAJ,CAASO,kBAAkB,CAACE,QAA5B,EAAsCC,WAAtC,EAAjB;AACA,YAAMC,aAAa,GAAG;AACpBC,QAAAA,MAAM,EAAEC,MAAM,CAACN,kBAAkB,CAACK,MAApB,CADM;AAEpBH,QAAAA,QAFoB;AAGpBK,QAAAA,EAAE,EAAEP,kBAAkB,CAACO,EAAnB,CAAsBC;AAHN,OAAtB;AAKA,WAAKP,KAAL,CAAWQ,WAAX,CAAuBT,kBAAkB,CAACQ,GAA1C,EAA+CJ,aAA/C;AACD,KAhCoC;;AAAA,SAiCrCM,wBAjCqC,GAiCV,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAkB;AAC3C,WAAKX,KAAL,CAAWY,QAAX,CAAoBD,KAApB;AACD,KAnCoC;;AAAA,SAoCrCE,OApCqC,GAoC3BnB,IAAI,IAAI;AAChB,WAAKM,KAAL,CAAWc,cAAX,CAA0BpB,IAA1B;AACD,KAtCoC;;AAAA,SAuCrCqB,SAvCqC,GAuCzBL,CAAC,IAAI;AACf,WAAKV,KAAL,CAAWgB,YAAX,CAAwBN,CAAC,CAACO,MAAF,CAASN,KAAjC;AACD,KAzCoC;AAAA;;AACrCO,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKnB,KAAL,CAAWoB,KAAX,CAAiBC,MAAhC;AAEA,SAAKrB,KAAL,CAAWsB,aAAX,CAAyBH,EAAzB;AACA/B,IAAAA,eAAe,CAAC+B,EAAD,CAAf,CAAoBI,IAApB,CAAyBC,IAAI,IAAI;AAC/B,WAAK7B,QAAL,CAAc;AACZ8B,QAAAA,EAAE,EAAED;AADQ,OAAd;AAGD,KAJD;AAKD;;AAgCDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3B,MAAAA;AAAF,QAAyB,KAAKC,KAApC;AAEA,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKF,YAAL,CAAkB6B,IAAlB,CAAuB,IAAvB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,MAAA,WAAW,EAAE5B,kBAAkB,CAACK,MADlC;AAEE,MAAA,YAAY,EAAEL,kBAAkB,CAACK,MAFnC;AAGE,MAAA,QAAQ,EAAEM,CAAC,IAAI,KAAKK,SAAL,CAAeL,CAAf,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE,KAAKd,UAAL,CAAgBG,kBAAkB,CAACE,QAAnC,CADZ;AAEE,MAAA,QAAQ,EAAEP,IAAI,IAAI,KAAKmB,OAAL,CAAanB,IAAb,CAFpB;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,UAAU,EAAC,OAJb;AAKE,MAAA,UAAU,EAAC,sBALb;AAME,MAAA,cAAc,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,eAoBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,QAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWmC,EAAX,IAAiB,EAH5B;AAIE,MAAA,QAAQ,EAAE,KAAKhB,wBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,eA6BE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,CADF,CAFF,eAmCE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,CADF,CADF;AAyCD;;AAtFoC;;AAwFvC,SAASmB,QAAT,CAAkBtC,KAAlB,EAAyB;AACvB,QAAM;AAAEuC,IAAAA;AAAF,MAAWvC,KAAK,CAACwC,cAAvB;AACA,QAAM;AAAE/B,IAAAA;AAAF,MAAyBT,KAAK,CAACyC,eAArC;AACA,SAAO;AACLF,IAAAA,IADK;AAEL9B,IAAAA;AAFK,GAAP;AAID;;AACD,MAAMiC,cAAc,GAAG;AACrBV,EAAAA,aAAa,EAAErC,sBAAsB,CAACqC,aADjB;AAErBN,EAAAA,YAAY,EAAE/B,sBAAsB,CAAC+B,YAFhB;AAGrBF,EAAAA,cAAc,EAAE7B,sBAAsB,CAAC6B,cAHlB;AAIrBF,EAAAA,QAAQ,EAAE3B,sBAAsB,CAAC2B,QAJZ;AAKrBJ,EAAAA,WAAW,EAAEvB,sBAAsB,CAACuB;AALf,CAAvB;AAOA,MAAMyB,wBAAwB,GAAGjD,OAAO,CACtC4C,QADsC,EAEtCI,cAFsC,CAAP,CAG/B3C,cAH+B,CAAjC;AAIA,SAAS4C,wBAAwB,IAAIC,cAArC","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Dropdown, Grid, Form } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { moneyWithdrawalActions } from \"../../actions\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport * as moment from \"moment\";\r\nimport { getServicePoint } from \"../../helpers/utils\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nclass EditWithdrawal extends Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    this.props.getOneRequest(id);\r\n    getServicePoint(id).then(data => {\r\n      this.setState({\r\n        sp: data\r\n      });\r\n    });\r\n  }\r\n  state = {\r\n    startDate: new Date()\r\n  };\r\n\r\n  handleChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n  formatDate = date => {\r\n    if (date) return new Date(moment(date).format(\"MM-DD-YYYY h:mm\"));\r\n  };\r\n  handleSubmit = () => {\r\n    const { withdrawalRequests } = this.props;\r\n    const timeslot = new Date(withdrawalRequests.timeslot).toISOString();\r\n    const withdrawalObj = {\r\n      amount: Number(withdrawalRequests.amount),\r\n      timeslot,\r\n      SP: withdrawalRequests.SP._id\r\n    };\r\n    this.props.editRequest(withdrawalRequests._id, withdrawalObj);\r\n  };\r\n  handleDropDownListChange = (e, { value }) => {\r\n    this.props.SPChange(value);\r\n  };\r\n  setDate = date => {\r\n    this.props.timeSlotChange(date);\r\n  };\r\n  setAmount = e => {\r\n    this.props.amountChange(e.target.value);\r\n  };\r\n  render() {\r\n    const { withdrawalRequests } = this.props;\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Form onSubmit={this.handleSubmit.bind(this)}>\r\n              <Form.Field>\r\n                <label>Amount</label>\r\n                <input\r\n                  placeholder={withdrawalRequests.amount}\r\n                  defaultValue={withdrawalRequests.amount}\r\n                  onChange={e => this.setAmount(e)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Time Slot</label>\r\n                <DatePicker\r\n                  selected={this.formatDate(withdrawalRequests.timeslot)}\r\n                  onChange={date => this.setDate(date)}\r\n                  className=\"red-border\"\r\n                  timeFormat=\"HH:mm\"\r\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                  showTimeSelect\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Service Point</label>\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  options={this.state.sp || []}\r\n                  onChange={this.handleDropDownListChange}\r\n                />\r\n              </Form.Field>\r\n              <Button type=\"submit\">Sumbit</Button>\r\n            </Form>\r\n          </Grid.Column>\r\n          <Grid.Column width={2}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const { withdrawalRequests } = state.moneyWithdrawal;\r\n  return {\r\n    user,\r\n    withdrawalRequests\r\n  };\r\n}\r\nconst actionCreators = {\r\n  getOneRequest: moneyWithdrawalActions.getOneRequest,\r\n  amountChange: moneyWithdrawalActions.amountChange,\r\n  timeSlotChange: moneyWithdrawalActions.timeSlotChange,\r\n  SPChange: moneyWithdrawalActions.SPChange,\r\n  editRequest: moneyWithdrawalActions.editRequest\r\n};\r\nconst connectedMoneyWithdrawal = connect(\r\n  mapState,\r\n  actionCreators\r\n)(EditWithdrawal);\r\nexport { connectedMoneyWithdrawal as editWithdrawal };\r\n"]},"metadata":{},"sourceType":"module"}