{"ast":null,"code":"import { httpService } from './';\nimport { authService } from './auth.service';\nimport { apiUrl } from '../config';\nexport const postService = {\n  add,\n  getPostData,\n  getAll,\n  getUpTo,\n  getmostViewedPosts,\n  getdiscountedPosts,\n  getpostsWithMinQuantities,\n  getEndingSoon,\n  getHotAuctions,\n  getMyPosts,\n  deletePost,\n  editWholePost,\n  editPostQuantity,\n  checkPostOrders,\n  takePostOffline,\n  takePostOnline\n};\nconst apiEndpoint = apiUrl + '/post';\n\nfunction add(post) {\n  return httpService.post(apiEndpoint, post, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n}\n\nfunction getHotAuctions() {\n  const jwt = authService.getJwt();\n  return httpService.get(`${apiUrl}/activities/hotAuctions`, httpService.setJwt(jwt));\n}\n\nfunction getEndingSoon() {\n  const jwt = authService.getJwt();\n  return httpService.get(`${apiUrl}/home/postsEndingSoon?randomize=true`, httpService.setJwt(jwt));\n}\n\nfunction getpostsWithMinQuantities() {\n  const jwt = authService.getJwt();\n  return httpService.get(`${apiUrl}/activities/postsWithMinQuantities?randomize=true`, httpService.setJwt(jwt));\n}\n\nfunction getUpTo() {\n  const jwt = authService.getJwt();\n  return httpService.get(`${apiUrl}/home/upToX?randomize=true`, httpService.setJwt(jwt));\n}\n\nfunction getdiscountedPosts() {\n  const jwt = authService.getJwt();\n  return httpService.get(`${apiUrl}/activities/discountedPosts?randomize=true`, httpService.setJwt(jwt));\n}\n\nfunction getmostViewedPosts() {\n  const jwt = authService.getJwt();\n  return httpService.get(`${apiUrl}/activities/mostViewedPosts`, httpService.setJwt(jwt));\n}\n\nfunction getAll() {\n  const jwt = authService.getJwt();\n  return httpService.get(`${apiUrl}/home/featuredPosts?randomize=true`, httpService.setJwt(jwt));\n}\n\nfunction getMyPosts() {\n  return httpService.get(`${apiEndpoint}/myPosts`);\n}\n\nfunction getPostData(postId) {\n  return httpService.get(`${apiEndpoint}/${postId}`);\n}\n\nfunction deletePost(postId) {\n  return httpService.put(`${apiEndpoint}/cancel/${postId}`);\n}\n\nfunction editWholePost(post, postId) {\n  return httpService.put(`${apiEndpoint}/edit/whole/${postId}`, post, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n}\n\nfunction editPostQuantity(quantity, postId) {\n  return httpService.put(`${apiEndpoint}/edit/quantity/${postId}`, {\n    quantity\n  });\n}\n\nfunction checkPostOrders(postId) {\n  return httpService.put(`${apiEndpoint}/checkPostOrders/${postId}`);\n}\n\nfunction takePostOffline(postId) {\n  return httpService.put(`${apiEndpoint}/takeOffline/${postId}`);\n}\n\nfunction takePostOnline(postId) {\n  return httpService.put(`${apiEndpoint}/takeOnline/${postId}`);\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/services/post.service.js"],"names":["httpService","authService","apiUrl","postService","add","getPostData","getAll","getUpTo","getmostViewedPosts","getdiscountedPosts","getpostsWithMinQuantities","getEndingSoon","getHotAuctions","getMyPosts","deletePost","editWholePost","editPostQuantity","checkPostOrders","takePostOffline","takePostOnline","apiEndpoint","post","headers","jwt","getJwt","get","setJwt","postId","put","quantity"],"mappings":"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","sourcesContent":["import {httpService} from './';\r\nimport {authService} from './auth.service';\r\nimport {apiUrl} from '../config';\r\n\r\nexport const postService = {\r\n    add,\r\n    getPostData,\r\n    getAll,\r\n    getUpTo,\r\n    getmostViewedPosts,\r\n    getdiscountedPosts,\r\n    getpostsWithMinQuantities,\r\n    getEndingSoon,\r\n    getHotAuctions,\r\n    getMyPosts,\r\n    deletePost,\r\n    editWholePost,\r\n    editPostQuantity,\r\n    checkPostOrders,\r\n    takePostOffline,\r\n    takePostOnline,\r\n};\r\n\r\nconst apiEndpoint = apiUrl + '/post';\r\n\r\nfunction add(post) {\r\n    return httpService.post(apiEndpoint, post, {\r\n        headers: {'Content-Type': 'multipart/form-data'},\r\n    });\r\n}\r\n\r\nfunction getHotAuctions() {\r\n    const jwt = authService.getJwt();\r\n    return httpService.get(`${apiUrl}/activities/hotAuctions`,httpService.setJwt(jwt));\r\n}\r\n\r\nfunction getEndingSoon() {\r\n    const jwt = authService.getJwt();\r\n    return httpService.get(`${apiUrl}/home/postsEndingSoon?randomize=true`,httpService.setJwt(jwt));\r\n}\r\n\r\nfunction getpostsWithMinQuantities() {\r\n    const jwt = authService.getJwt();\r\n    return httpService.get(`${apiUrl}/activities/postsWithMinQuantities?randomize=true`,httpService.setJwt(jwt));\r\n}\r\n\r\nfunction getUpTo() {\r\n    const jwt = authService.getJwt();\r\n    return httpService.get(`${apiUrl}/home/upToX?randomize=true`,httpService.setJwt(jwt));\r\n}\r\n\r\nfunction getdiscountedPosts() {\r\n    const jwt = authService.getJwt();\r\n    return httpService.get(`${apiUrl}/activities/discountedPosts?randomize=true`,httpService.setJwt(jwt));\r\n}\r\n\r\nfunction getmostViewedPosts() {\r\n    const jwt = authService.getJwt();\r\n    return httpService.get(`${apiUrl}/activities/mostViewedPosts`,httpService.setJwt(jwt));\r\n}\r\n\r\nfunction getAll() {\r\n    const jwt = authService.getJwt();\r\n    return httpService.get(`${apiUrl}/home/featuredPosts?randomize=true`,httpService.setJwt(jwt));\r\n}\r\n\r\nfunction getMyPosts() {\r\n    return httpService.get(`${apiEndpoint}/myPosts`);\r\n}\r\n\r\nfunction getPostData(postId) {\r\n    return httpService.get(`${apiEndpoint}/${postId}`);\r\n}\r\n\r\nfunction deletePost(postId) {\r\n    return httpService.put(`${apiEndpoint}/cancel/${postId}`);\r\n}\r\n\r\nfunction editWholePost(post, postId) {\r\n    return httpService.put(`${apiEndpoint}/edit/whole/${postId}`, post, {\r\n        headers: {'Content-Type': 'multipart/form-data'},\r\n    });\r\n}\r\n\r\nfunction editPostQuantity(quantity, postId) {\r\n    return httpService.put(`${apiEndpoint}/edit/quantity/${postId}`, { quantity });\r\n}\r\n\r\nfunction checkPostOrders(postId) {\r\n    return httpService.put(`${apiEndpoint}/checkPostOrders/${postId}`);\r\n}\r\n\r\nfunction takePostOffline(postId) {\r\n    return httpService.put(`${apiEndpoint}/takeOffline/${postId}`);\r\n}\r\n\r\nfunction takePostOnline(postId) {\r\n    return httpService.put(`${apiEndpoint}/takeOnline/${postId}`);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}