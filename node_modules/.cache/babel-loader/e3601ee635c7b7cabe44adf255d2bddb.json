{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReportProblem/TicketsPage.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Container, Image, Header, Label, Button } from \"semantic-ui-react\";\nimport Slider from \"react-slick\";\nimport { backendUrl } from \"../../config\";\nimport { reportProblemActions } from \"../../actions\";\nimport { routeConstants } from '../../constants';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Link } from \"react-router-dom\";\n\nclass TicketsPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderImages = tickets => {\n      const settings = {\n        dots: false,\n        autoplay: true,\n        autoplaySpeed: 2000,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false,\n        adaptiveHeight: false\n      };\n      return /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }), tickets.images.map(image => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: image,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          src: `${backendUrl}/${image}`,\n          rounded: true,\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }\n        }));\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getMyTickets();\n  }\n\n  render() {\n    const {\n      tickets\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        padding: \"2em 10em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, tickets.length !== 0 ? /*#__PURE__*/React.createElement(Label, {\n      ribbon: true,\n      color: \"teal\",\n      size: \"huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"All Tickets\") : /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \" No Tickets Issued \"), /*#__PURE__*/React.createElement(Button, {\n      as: Link,\n      to: routeConstants.REPORT_PROBLEM,\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Report Problem\"), /*#__PURE__*/React.createElement(Card.Group, {\n      centered: true,\n      itemsPerRow: 2,\n      stackable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, tickets && tickets.map(ticket => /*#__PURE__*/React.createElement(Card, {\n      key: ticket._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, this.renderImages(ticket), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/ticket/${ticket._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }\n    }, ticket.subject)), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Status : \"), ticket.isResolved ? 'Resolved' : 'Pending Customer Service Reply'), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Issue Date : \"), ticket.issueDate), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Resolve Date : \"), ticket && ticket.resolveDate), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Description: \"), ticket.description)))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    tickets\n  } = state.reportProblem;\n  return {\n    tickets\n  };\n}\n\nconst actionCreators = {\n  getMyTickets: reportProblemActions.getMyTickets\n};\nconst connectedPostsPage = connect(mapState, actionCreators)(TicketsPage);\nexport { connectedPostsPage as TicketsPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReportProblem/TicketsPage.jsx"],"names":["React","Component","Fragment","connect","Card","Container","Image","Header","Label","Button","Slider","backendUrl","reportProblemActions","routeConstants","Link","TicketsPage","renderImages","tickets","settings","dots","autoplay","autoplaySpeed","infinite","speed","slidesToShow","slidesToScroll","arrows","adaptiveHeight","images","map","image","componentDidMount","props","getMyTickets","render","padding","length","REPORT_PROBLEM","ticket","_id","subject","isResolved","issueDate","resolveDate","description","mapState","state","reportProblem","actionCreators","connectedPostsPage"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Container, Image, Header, Label, Button } from \"semantic-ui-react\";\r\nimport Slider from \"react-slick\";\r\nimport { backendUrl } from \"../../config\";\r\nimport { reportProblemActions } from \"../../actions\";\r\nimport { routeConstants } from '../../constants';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass TicketsPage extends Component {\r\n  async componentDidMount() {\r\n    await this.props.getMyTickets();\r\n  }\r\n\r\n  renderImages = (tickets) => {\r\n    const settings = {\r\n      dots: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 2000,\r\n      infinite: true,\r\n      speed: 1000,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      arrows: false,\r\n      adaptiveHeight: false,\r\n    };\r\n    return (\r\n      <Slider {...settings}>\r\n        {tickets.images.map((image) => {\r\n          return (\r\n            <div key={image}>\r\n              <Image src={`${backendUrl}/${image}`} rounded fluid />\r\n            </div>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  };\r\n\r\n   render() {\r\n    const { tickets } = this.props;\r\n\r\n    return (\r\n      <Container fluid style={{ padding: \"2em 10em\" }}>\r\n      {tickets.length !== 0 ? (\r\n        <Label ribbon color=\"teal\" size=\"huge\">All Tickets</Label>\r\n      ) : (\r\n        <Header as='h2'> No Tickets Issued </Header>        \r\n      )}\r\n        <Button as={Link} to={routeConstants.REPORT_PROBLEM} floated=\"right\">\r\n          Report Problem\r\n        </Button>\r\n        <Card.Group centered itemsPerRow={2} stackable>\r\n          {tickets && tickets.map((ticket) => (\r\n            <Card key={ticket._id}>\r\n                {this.renderImages(ticket)}\r\n              <Card.Content>\r\n                <Fragment>\r\n                  <Card.Header><Link to={`/ticket/${ticket._id}`}>{ticket.subject}</Link></Card.Header>\r\n                  <Card.Meta>\r\n                    <strong>Status : </strong>\r\n                    {ticket.isResolved ? ('Resolved') : ('Pending Customer Service Reply')}\r\n                  </Card.Meta>\r\n                  <Card.Meta>\r\n                    <strong>Issue Date : </strong>\r\n                    {ticket.issueDate}\r\n                  </Card.Meta>\r\n                  <Card.Meta>\r\n                    <strong>Resolve Date : </strong>\r\n                    {ticket && ticket.resolveDate}\r\n                  </Card.Meta>\r\n                  <Card.Description>\r\n                    <strong>Description: </strong>\r\n                    {ticket.description}\r\n                  </Card.Description>\r\n                </Fragment>\r\n              </Card.Content>\r\n            </Card>)\r\n          )}\r\n        </Card.Group>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { tickets } = state.reportProblem;\r\n  return { tickets };\r\n}\r\n\r\nconst actionCreators = {\r\n    getMyTickets: reportProblemActions.getMyTickets,\r\n};\r\nconst connectedPostsPage = connect(mapState, actionCreators)(TicketsPage);\r\nexport { connectedPostsPage as TicketsPage };\r\n"]},"metadata":{},"sourceType":"module"}