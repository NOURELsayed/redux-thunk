{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UserSettingsData.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dropdown, Menu, Segment, Grid, Header, Icon, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport i18n from \"i18next\";\nimport { withTranslation } from \"react-i18next\";\nimport { userActions } from \"../../actions\";\nimport \"./UserProfilePage.css\";\nimport { UpdateEmailModal } from \"./UpdateEmailModal\";\nimport { UpdateMobileModal } from \"./UpdateMobileModal\";\nimport { UpdatePasswordModal } from \"./UpdatePasswordModal\";\n\nclass UserSettingsData extends Component {\n  componentDidMount() {\n    document.body.dir = i18n.dir();\n  }\n\n  getVerifiedIcon(isVerified) {\n    if (isVerified) {\n      return /*#__PURE__*/React.createElement(Icon, {\n        color: \"green\",\n        name: \"checkmark\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Icon, {\n      color: \"yellow\",\n      name: \"warning\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  changeLanguage(language) {\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\n  }\n\n  render() {\n    const {\n      userProfile,\n      t\n    } = this.props;\n    const language = localStorage.getItem(\"i18nextLng\");\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      className: \"userSettingsdataStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"left\",\n      className: \"userProfileSettings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, t(\"Personal Information\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userProfileForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userInputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, this.getVerifiedIcon(userProfile.email.isVerified), t(\"Name\"), \" : \", userProfile.username)), /*#__PURE__*/React.createElement(UpdateEmailModal, {\n      userEmail: userProfile.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userProfileForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userInputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, this.getVerifiedIcon(userProfile.email.isVerified), t(\"Email\"), \" :\", userProfile.email.address)), /*#__PURE__*/React.createElement(UpdateEmailModal, {\n      userEmail: userProfile.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userProfileForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userInputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, this.getVerifiedIcon(userProfile.email.isVerified), t(\"Phone\"), \" :\", `(${userProfile.phone.code}) ${userProfile.phone.number}`)), /*#__PURE__*/React.createElement(UpdateMobileModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userProfileForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userInputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      textAlign: \"left\",\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, t(\"Password\"), \" : ********\")), /*#__PURE__*/React.createElement(UpdatePasswordModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userProfileForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userInputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"navbarButton\",\n      onClick: () => this.changeLanguage(language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, t(\"otherlang\"))))), /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, t(\"Support\")), /*#__PURE__*/React.createElement(Menu, {\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      item: true,\n      text: t(\"FAQs\"),\n      pointing: \"left\",\n      className: \"link item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      item: true,\n      text: t(\"ContactUs\"),\n      pointing: \"left\",\n      className: \"link item\",\n      as: Link,\n      to: \"/contactUs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      item: true,\n      text: t(\"Give Feedback\"),\n      pointing: \"left\",\n      className: \"link item\",\n      as: Link,\n      to: \"/feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      item: true,\n      text: t(\"Privacy Policy\"),\n      pointing: \"left\",\n      className: \"link item\",\n      as: Link,\n      to: \"/legal/policy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      item: true,\n      text: t(\"Terms of Use\"),\n      pointing: \"left\",\n      className: \"link item\",\n      as: Link,\n      to: \"/legal/terms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    userProfile,\n    language\n  } = state.users;\n  return {\n    user,\n    userProfile,\n    language\n  };\n}\n\nconst actionCreators = {\n  updateUserAccountStatus: userActions.updateUserAccountStatus,\n  changeLanguage: userActions.setLanguage\n};\nconst connectedUserSettingsData = connect(mapState, actionCreators)(withTranslation()(UserSettingsData));\nexport { connectedUserSettingsData as UserSettingsData };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UserSettingsData.jsx"],"names":["React","Component","connect","Dropdown","Menu","Segment","Grid","Header","Icon","Button","Link","i18n","withTranslation","userActions","UpdateEmailModal","UpdateMobileModal","UpdatePasswordModal","UserSettingsData","componentDidMount","document","body","dir","getVerifiedIcon","isVerified","changeLanguage","language","props","render","userProfile","t","localStorage","getItem","email","username","address","phone","code","number","mapState","state","user","authentication","users","actionCreators","updateUserAccountStatus","setLanguage","connectedUserSettingsData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Dropdown,\r\n  Menu,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport i18n from \"i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { userActions } from \"../../actions\";\r\nimport \"./UserProfilePage.css\";\r\nimport { UpdateEmailModal } from \"./UpdateEmailModal\";\r\nimport { UpdateMobileModal } from \"./UpdateMobileModal\";\r\nimport { UpdatePasswordModal } from \"./UpdatePasswordModal\";\r\n\r\n\r\n\r\nclass UserSettingsData extends Component {\r\n  componentDidMount() {\r\n    document.body.dir = i18n.dir();\r\n  }\r\n  getVerifiedIcon(isVerified) {\r\n    if (isVerified) {\r\n      return <Icon color=\"green\" name=\"checkmark\" size=\"small\" />;\r\n    }\r\n    return <Icon color=\"yellow\" name=\"warning\" size=\"small\" />;\r\n  }\r\n  changeLanguage(language) {\r\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\r\n  }\r\n  render() {\r\n    const { userProfile, t } = this.props;\r\n    const language = localStorage.getItem(\"i18nextLng\");\r\n    return (\r\n      <Grid textAlign=\"center\" className=\"userSettingsdataStyle\">\r\n        <Grid.Row>\r\n          <Grid.Column width={12}>\r\n            <Segment textAlign=\"left\" className=\"userProfileSettings\">\r\n              <h2>{t(\"Personal Information\")}</h2>\r\n              <div className=\"userProfileForm\">\r\n                <div className=\"userInputForm\">\r\n                  <Header textAlign=\"left\" as=\"h4\">\r\n                    {this.getVerifiedIcon(userProfile.email.isVerified)}\r\n                    {t(\"Name\")} : {userProfile.username}\r\n                  </Header>\r\n                </div>\r\n                <UpdateEmailModal userEmail={userProfile.email} />\r\n              </div>\r\n\r\n              <div className=\"userProfileForm\">\r\n                <div className=\"userInputForm\">\r\n                  <Header textAlign=\"left\" as=\"h4\">\r\n                    {this.getVerifiedIcon(userProfile.email.isVerified)}\r\n                    {t(\"Email\")} :{userProfile.email.address}\r\n                  </Header>\r\n                </div>\r\n                <UpdateEmailModal userEmail={userProfile.email} />\r\n              </div>\r\n\r\n              <div className=\"userProfileForm\">\r\n                <div className=\"userInputForm\">\r\n                  <Header textAlign=\"left\" as=\"h4\">\r\n                    {this.getVerifiedIcon(userProfile.email.isVerified)}\r\n                    {t(\"Phone\")} :\r\n                    {`(${userProfile.phone.code}) ${userProfile.phone.number}`}\r\n                  </Header>\r\n                </div>\r\n                <UpdateMobileModal />\r\n              </div>\r\n\r\n              <div className=\"userProfileForm\">\r\n                <div className=\"userInputForm\">\r\n                  <Header textAlign=\"left\" as=\"h4\">\r\n                    {t(\"Password\")} : ********\r\n                  </Header>\r\n                </div>\r\n                <UpdatePasswordModal />\r\n              </div>\r\n              <div className=\"userProfileForm\">\r\n                <div className=\"userInputForm\">\r\n                  <Button\r\n                    className=\"navbarButton\"\r\n                    onClick={() => this.changeLanguage(language)}\r\n                  >\r\n                    {t(\"otherlang\")}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Segment>\r\n\r\n            <Segment textAlign=\"left\">\r\n              <h2>{t(\"Support\")}</h2>\r\n              <Menu vertical>\r\n                <Dropdown\r\n                  item\r\n                  text={t(\"FAQs\")}\r\n                  pointing=\"left\"\r\n                  className=\"link item\"\r\n                ></Dropdown>\r\n                <Dropdown\r\n                  item\r\n                  text={t(\"ContactUs\")}\r\n                  pointing=\"left\"\r\n                  className=\"link item\"\r\n                  as={Link}\r\n                  to=\"/contactUs\"\r\n                ></Dropdown>\r\n                <Dropdown\r\n                  item\r\n                  text={t(\"Give Feedback\")}\r\n                  pointing=\"left\"\r\n                  className=\"link item\"\r\n                  as={Link}\r\n                  to=\"/feedback\"\r\n                ></Dropdown>\r\n                <Dropdown\r\n                  item\r\n                  text={t(\"Privacy Policy\")}\r\n                  pointing=\"left\"\r\n                  className=\"link item\"\r\n                  as={Link}\r\n                  to=\"/legal/policy\"\r\n                ></Dropdown>\r\n                <Dropdown\r\n                  item\r\n                  text={t(\"Terms of Use\")}\r\n                  pointing=\"left\"\r\n                  className=\"link item\"\r\n                  as={Link}\r\n                  to=\"/legal/terms\"\r\n                ></Dropdown>\r\n              </Menu>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const { userProfile, language } = state.users;\r\n  return { user, userProfile, language };\r\n}\r\n\r\nconst actionCreators = {\r\n  updateUserAccountStatus: userActions.updateUserAccountStatus,\r\n  changeLanguage: userActions.setLanguage,\r\n};\r\n\r\nconst connectedUserSettingsData = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withTranslation()(UserSettingsData));\r\n\r\nexport { connectedUserSettingsData as UserSettingsData };\r\n"]},"metadata":{},"sourceType":"module"}