{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Review/PostReviewPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Header, Message, Segment, Rating, Card, Label } from \"semantic-ui-react\";\nimport { reviewActions } from '../../actions';\nimport { history } from '../../helpers';\nexport class PostReviewContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feedback: 0,\n      text: '',\n      rating: {},\n      reviewee: '',\n      revieweeType: ''\n    };\n\n    this.toggleThumb = feedback => {\n      this.setState({\n        feedback\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      // this.props.validateInput(this.schema, name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.checkRating = (e, {\n      name,\n      rating\n    }) => {\n      const ratingObj = { ...this.state.rating\n      };\n      ratingObj[name] = rating;\n      this.setState({\n        rating: ratingObj\n      });\n    };\n\n    this.handleSubmit = async () => {\n      const {\n        feedback,\n        rating,\n        text,\n        reviewee,\n        revieweeType\n      } = this.state;\n      const {\n        orderId\n      } = this.props.match.params;\n      const body = text === '' ? {\n        reviewee: reviewee._id,\n        feedback,\n        sellerRating: rating,\n        revieweeType,\n        order: orderId\n      } : {\n        reviewee: reviewee._id,\n        feedback,\n        sellerRating: rating,\n        text,\n        revieweeType,\n        order: orderId\n      };\n      await this.props.postReview(body);\n    };\n  }\n\n  async componentDidMount() {\n    let routeState;\n\n    if (this.props.location.query) {\n      localStorage.setItem('postReviewState', JSON.stringify(this.props.location.query));\n      routeState = this.props.location.query;\n    } else {\n      routeState = localStorage.getItem('postReviewState');\n      if (routeState) routeState = JSON.parse(routeState);else history.push('/orders');\n    }\n\n    this.setState(routeState);\n  }\n\n  componentWillUnmount() {\n    localStorage.removeItem('postReviewState');\n  }\n\n  render() {\n    const {\n      feedback,\n      text,\n      revieweeType\n    } = this.state;\n    console.log(revieweeType);\n    return this.props.loggedIn && revieweeType ? /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Review \", revieweeType), alert && alert.header && /*#__PURE__*/React.createElement(Message, {\n      error: alert.type === 'error',\n      success: alert.type === 'success',\n      header: alert.header,\n      content: alert.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `${feedback === 1 ? 'inverted' : ''} bordered green big thumbs up outline link icon`,\n      onClick: () => this.toggleThumb(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: `${feedback === -1 ? 'inverted' : ''} bordered red big thumbs down outline link icon`,\n      onClick: () => this.toggleThumb(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }), revieweeType === 'seller' && /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, \"Post Description: \"), /*#__PURE__*/React.createElement(Rating, {\n      icon: \"star\",\n      defaultRating: 0,\n      maxRating: 5,\n      size: \"large\",\n      name: \"postDescription\",\n      onRate: this.checkRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, \"Communication: \"), /*#__PURE__*/React.createElement(Rating, {\n      icon: \"star\",\n      defaultRating: 0,\n      maxRating: 5,\n      size: \"large\",\n      name: \"communication\",\n      onRate: this.checkRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.TextArea, {\n      name: \"text\",\n      value: text,\n      placeholder: \"Write a Review\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"Submit Review\"))))) : /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }\n    }, \"You are not authorized to view this page\");\n  }\n\n}\n\nfunction mapState(state, ownProps) {\n  const {\n    user,\n    loggedIn\n  } = state.authentication;\n  return {\n    user,\n    loggedIn,\n    cookies: ownProps.cookies\n  };\n}\n\nconst actionCreators = {\n  postReview: reviewActions.postReview\n};\nconst connectedPostReview = connect(mapState, actionCreators)(PostReviewContainer);\nexport { connectedPostReview as PostReview };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Review/PostReviewPage.jsx"],"names":["React","Component","connect","Button","Form","Grid","Header","Message","Segment","Rating","Card","Label","reviewActions","history","PostReviewContainer","state","feedback","text","rating","reviewee","revieweeType","toggleThumb","setState","handleChange","e","name","value","checkRating","ratingObj","handleSubmit","orderId","props","match","params","body","_id","sellerRating","order","postReview","componentDidMount","routeState","location","query","localStorage","setItem","JSON","stringify","getItem","parse","push","componentWillUnmount","removeItem","render","console","log","loggedIn","height","maxWidth","alert","header","type","content","mapState","ownProps","user","authentication","cookies","actionCreators","connectedPostReview","PostReview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, Grid, Header, Message, Segment, Rating, Card, Label } from \"semantic-ui-react\";\r\nimport { reviewActions } from '../../actions';\r\nimport { history } from '../../helpers';\r\n\r\nexport class PostReviewContainer extends Component {\r\n    state = {feedback: 0, text: '', rating: {}, reviewee: '', revieweeType:'' };\r\n\r\n    async componentDidMount() {\r\n        let routeState;\r\n        if(this.props.location.query){\r\n            localStorage.setItem('postReviewState', JSON.stringify(this.props.location.query));\r\n            routeState = this.props.location.query;\r\n        } else {\r\n            routeState = localStorage.getItem('postReviewState');\r\n            if(routeState) routeState = JSON.parse(routeState); else history.push('/orders');\r\n        }\r\n        this.setState(routeState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.removeItem('postReviewState');\r\n    }\r\n\r\n    toggleThumb = (feedback) => {\r\n        this.setState({ feedback })\r\n    }\r\n\r\n    handleChange = (e, {name, value}) => {\r\n        // this.props.validateInput(this.schema, name, value);\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    checkRating = (e, { name, rating }) => {\r\n        const ratingObj = { ...this.state.rating };\r\n        ratingObj[name] = rating;\r\n        this.setState({ rating: ratingObj });\r\n    }\r\n    \r\n    handleSubmit = async () => {\r\n        const { feedback, rating, text, reviewee, revieweeType } = this.state;\r\n        const { orderId } = this.props.match.params;\r\n        const body = text === '' ? {\r\n            reviewee: reviewee._id,\r\n            feedback,\r\n            sellerRating: rating,\r\n            revieweeType,\r\n            order: orderId            \r\n        } : {\r\n            reviewee: reviewee._id,\r\n            feedback,\r\n            sellerRating: rating,\r\n            text,\r\n            revieweeType,\r\n            order: orderId\r\n        }\r\n        await this.props.postReview(body);\r\n    }\r\n\r\n    render() {\r\n        const { feedback, text, revieweeType } = this.state;\r\n        console.log(revieweeType);\r\n        \r\n        return (\r\n            this.props.loggedIn && revieweeType ?\r\n                <Grid textAlign='center' style={{height: '100vh'}} verticalAlign='middle'>\r\n                    <Grid.Column style={{maxWidth: 450}}>\r\n                        <Header as='h2' color='teal' textAlign='center'>Review {revieweeType}</Header>\r\n                        {alert && alert.header &&\r\n                        <Message error={alert.type === 'error'} success={alert.type === 'success'}\r\n                            header={alert.header} content={alert.content}/>}\r\n                        <Form  size='large' onSubmit={this.handleSubmit}>\r\n                            <Segment>\r\n                                <i className={`${feedback === 1? 'inverted' : ''} bordered green big thumbs up outline link icon` }\r\n                                    onClick={() => this.toggleThumb(1)} \r\n                                />\r\n                                <i className={`${feedback === -1? 'inverted' : ''} bordered red big thumbs down outline link icon` }\r\n                                onClick={() => this.toggleThumb(-1)}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                {\r\n                                    revieweeType === 'seller' &&\r\n                                    <Card.Description>\r\n                                        <strong>Post Description: </strong>\r\n                                        <Rating icon='star' defaultRating={0} maxRating={5} size='large' name='postDescription' onRate={ this.checkRating }/>\r\n                                        <br />\r\n                                        <strong>Communication: </strong>\r\n                                        <Rating icon='star' defaultRating={0} maxRating={5} size='large' name='communication' onRate={ this.checkRating }/>\r\n                                    </Card.Description>\r\n                                }\r\n                                <br />\r\n                                <br />\r\n                                <Form.TextArea \r\n                                    name='text'\r\n                                    value={text} \r\n                                    placeholder='Write a Review'\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <Button color='teal'>Submit Review</Button>\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid> : <Label>You are not authorized to view this page</Label>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state, ownProps) {\r\n    const { user, loggedIn } = state.authentication;\r\n\r\n    return { user, loggedIn, cookies: ownProps.cookies };\r\n}\r\n\r\nconst actionCreators = {\r\n    postReview: reviewActions.postReview,\r\n};\r\n\r\nconst connectedPostReview = connect(mapState, actionCreators)(PostReviewContainer);\r\nexport { connectedPostReview as PostReview };\r\n"]},"metadata":{},"sourceType":"module"}