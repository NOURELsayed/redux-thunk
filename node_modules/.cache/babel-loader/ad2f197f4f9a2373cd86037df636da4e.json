{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Seller Decision/CreateNewBuyNow.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Segment, Label, Form, Button, Input, Message } from \"semantic-ui-react\";\nimport { orderActions, validatorActions } from \"../../actions\";\n\nclass CreateNewBuyNow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n\n    this.componentDidMount = async e => {\n      let items = [];\n      await this.props.viewOrder(this.props.urlOrderId);\n      (await this.props.orderDetailsData.items) && this.props.orderDetailsData.items.map(item => {\n        if (item.post._id === this.props.parentPostId.id && (item.status === \"rejectedByBuyer\" || item.status === \"waitingPickUp\")) {\n          items.push({\n            id: item._id\n          });\n        }\n      });\n      this.setState({\n        items\n      });\n    };\n\n    this.schema = {\n      required: [\"price\"],\n      properties: {\n        price: {\n          title: \"price\",\n          type: \"number\",\n          minimum: 1\n        }\n      }\n    };\n    this.auctionWithMinPriceSchema = {\n      required: [\"price\", \"bidIncrement\"],\n      properties: {\n        price: {\n          title: \"price\",\n          type: \"number\",\n          minimum: 1\n        },\n        bidIncrement: {\n          title: \"bidIncrement\",\n          type: \"number\",\n          minimum: 1\n        }\n      }\n    };\n    this.auctionWithoutMinPriceSchema = {\n      required: [\"bidIncrement\"],\n      properties: {\n        bidIncrement: {\n          title: \"bidIncrement\",\n          type: \"number\",\n          minimum: 1\n        }\n      }\n    };\n\n    this.handleChangeBuyNow = (e, {\n      name,\n      value\n    }) => {\n      let {\n        items\n      } = this.state;\n\n      if (name === \"price\") {\n        if (this.props.sellerDecision === \"BuyNow\") {\n          this.props.validateInput(this.schema, name, parseInt(value));\n        }\n\n        items.forEach(item => {\n          item[name] = parseInt(value);\n        });\n      }\n\n      this.setState({\n        items\n      });\n    };\n\n    this.handleBuyNowSubmit = async e => {\n      const {\n        items\n      } = this.state;\n      let flag = false;\n      const body = {\n        items: items,\n        userType: \"seller\"\n      };\n      await this.props.validateForm(this.schema, body);\n      items.forEach(item => {\n        if (item.price !== undefined || null) {\n          flag = true;\n        }\n      });\n      if (flag) await this.props.chooseBuyNow(this.props.urlOrderId, body);\n    };\n\n    this.handleErrorButton = errors => {\n      if (errors && errors.price) return true;\n      return false;\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: \"teal\",\n      size: \"big\",\n      style: {\n        marginBottom: \"2%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Create New BuyNow\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleBuyNowSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      control: Input,\n      name: \"price\",\n      type: \"number\",\n      onChange: this.handleChangeBuyNow,\n      label: \"Enter New Item(s) Price\",\n      placeholder: \"1000 EGP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      disabled: this.handleErrorButton(errors),\n      color: \"teal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Confirm\")), errors && errors.price && /*#__PURE__*/React.createElement(Message, {\n      negative: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, errors.price))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user,\n    loggedIn\n  } = state.authentication;\n  const {\n    orderDetailsData,\n    returnRequestsOrder,\n    displayedStep\n  } = state.order;\n  const {\n    valid,\n    errors\n  } = state.validation;\n  return {\n    orderDetailsData,\n    displayedStep,\n    user,\n    loggedIn,\n    returnRequestsOrder,\n    valid,\n    errors\n  };\n}\n\nconst actionCreators = {\n  validateInput: validatorActions.validateInput,\n  validateForm: validatorActions.validateForm,\n  viewOrderSeller: orderActions.viewOrderSeller,\n  viewOrder: orderActions.viewOrder,\n  chooseBuyNow: orderActions.chooseBuyNow\n};\nconst connectedCreateNewBuyNow = connect(mapState, actionCreators)(CreateNewBuyNow);\nexport { connectedCreateNewBuyNow as CreateNewBuyNow };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Seller Decision/CreateNewBuyNow.jsx"],"names":["React","Component","connect","Segment","Label","Form","Button","Input","Message","orderActions","validatorActions","CreateNewBuyNow","state","items","componentDidMount","e","props","viewOrder","urlOrderId","orderDetailsData","map","item","post","_id","parentPostId","id","status","push","setState","schema","required","properties","price","title","type","minimum","auctionWithMinPriceSchema","bidIncrement","auctionWithoutMinPriceSchema","handleChangeBuyNow","name","value","sellerDecision","validateInput","parseInt","forEach","handleBuyNowSubmit","flag","body","userType","validateForm","undefined","chooseBuyNow","handleErrorButton","errors","render","marginBottom","mapState","user","loggedIn","authentication","returnRequestsOrder","displayedStep","order","valid","validation","actionCreators","viewOrderSeller","connectedCreateNewBuyNow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Segment,\r\n  Label,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport { orderActions, validatorActions } from \"../../actions\";\r\n\r\nclass CreateNewBuyNow extends Component {\r\n  state = { items: [] };\r\n\r\n  componentDidMount = async (e) => {\r\n    let items = [];\r\n    await this.props.viewOrder(this.props.urlOrderId);\r\n\r\n    (await this.props.orderDetailsData.items) &&\r\n      this.props.orderDetailsData.items.map((item) => {\r\n        if (item.post._id === this.props.parentPostId.id && (item.status ===\"rejectedByBuyer\"||item.status ===\"waitingPickUp\")) {\r\n          items.push({ id: item._id });\r\n        }\r\n      });\r\n\r\n    this.setState({ items });\r\n  };\r\n\r\n  schema = {\r\n    required: [\"price\"],\r\n    properties: {\r\n      price: {\r\n        title: \"price\",\r\n        type: \"number\",\r\n        minimum: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  auctionWithMinPriceSchema = {\r\n    required: [\"price\", \"bidIncrement\"],\r\n    properties: {\r\n      price: {\r\n        title: \"price\",\r\n        type: \"number\",\r\n        minimum: 1,\r\n      },\r\n      bidIncrement: {\r\n        title: \"bidIncrement\",\r\n        type: \"number\",\r\n        minimum: 1,\r\n      },\r\n    },\r\n  };\r\n  auctionWithoutMinPriceSchema = {\r\n    required: [\"bidIncrement\"],\r\n    properties: {\r\n      bidIncrement: {\r\n        title: \"bidIncrement\",\r\n        type: \"number\",\r\n        minimum: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  handleChangeBuyNow = (e, { name, value }) => {\r\n    let { items } = this.state;\r\n    if (name === \"price\") {\r\n      if (this.props.sellerDecision === \"BuyNow\") {\r\n        this.props.validateInput(this.schema, name, parseInt(value));\r\n      }\r\n\r\n      items.forEach((item) => {\r\n        item[name] = parseInt(value);\r\n      });\r\n    }\r\n\r\n    this.setState({ items });\r\n  };\r\n\r\n  handleBuyNowSubmit = async (e) => {\r\n    const { items } = this.state;\r\n    let flag = false;\r\n    const body = { items: items, userType: \"seller\" };\r\n    await this.props.validateForm(this.schema, body);\r\n\r\n    items.forEach((item) => {\r\n      if (item.price !== undefined || null) {\r\n        flag = true;\r\n      }\r\n    });\r\n\r\n    if (flag) await this.props.chooseBuyNow(this.props.urlOrderId, body);\r\n  };\r\n\r\n  handleErrorButton = (errors) => {\r\n    if (errors && errors.price) return true;\r\n    return false;\r\n  };\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Segment>\r\n        <Label color='teal' size='big' style={{ marginBottom: \"2%\" }}>\r\n          Create New BuyNow\r\n        </Label>\r\n        <Form onSubmit={this.handleBuyNowSubmit}>\r\n          <Form.Group inline>\r\n            <Form.Field\r\n              control={Input}\r\n              name='price'\r\n              type='number'\r\n              onChange={this.handleChangeBuyNow}\r\n              label='Enter New Item(s) Price'\r\n              placeholder='1000 EGP'\r\n            />\r\n\r\n            <Button disabled={this.handleErrorButton(errors)} color={\"teal\"}>\r\n              Confirm\r\n            </Button>\r\n          </Form.Group>\r\n          {errors && errors.price && (\r\n            <Message negative>\r\n              <Message.Header>{errors.price}</Message.Header>\r\n            </Message>\r\n          )}\r\n        </Form>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user, loggedIn } = state.authentication;\r\n  const { orderDetailsData, returnRequestsOrder, displayedStep } = state.order;\r\n  const { valid, errors } = state.validation;\r\n  return {\r\n    orderDetailsData,\r\n    displayedStep,\r\n    user,\r\n    loggedIn,\r\n    returnRequestsOrder,\r\n    valid,\r\n    errors,\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  validateInput: validatorActions.validateInput,\r\n  validateForm: validatorActions.validateForm,\r\n  viewOrderSeller: orderActions.viewOrderSeller,\r\n  viewOrder: orderActions.viewOrder,\r\n  chooseBuyNow: orderActions.chooseBuyNow,\r\n};\r\n\r\nconst connectedCreateNewBuyNow = connect(\r\n  mapState,\r\n  actionCreators\r\n)(CreateNewBuyNow);\r\n\r\nexport { connectedCreateNewBuyNow as CreateNewBuyNow };\r\n"]},"metadata":{},"sourceType":"module"}