{"ast":null,"code":"import { moneyWithdrawalConstatnt } from \"../constants\";\nimport { moneyWithdrawalService } from \"./../services\";\nimport { alertActions } from \"./\";\nexport const moneyWithdrawalActions = {\n  getAllRequest,\n  removeItem,\n  getOneRequest,\n  timeSlotChange,\n  amountChange,\n  SPChange,\n  editRequest,\n  saveRequest\n};\n\nfunction getAllRequest() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await moneyWithdrawalService.getAll();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't get requests right now, please try later\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: moneyWithdrawalConstatnt.VIEW_ALL_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: moneyWithdrawalConstatnt.VIEW_ALL_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: moneyWithdrawalConstatnt.VIEW_ALL_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getOneRequest(id) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await moneyWithdrawalService.getOne(id);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't get request right now, please try later\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: moneyWithdrawalConstatnt.VIEW_ONE_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: moneyWithdrawalConstatnt.VIEW_ONE_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: moneyWithdrawalConstatnt.VIEW_ONE_FAILURE,\n      error\n    };\n  }\n}\n\nfunction removeItem(id) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await moneyWithdrawalService.removeItem(id);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't remove item\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: moneyWithdrawalConstatnt.REMOVE_ITEM_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: moneyWithdrawalConstatnt.REMOVE_ITEM_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: moneyWithdrawalConstatnt.REMOVE_ITEM_FAILURE,\n      error\n    };\n  }\n}\n\nfunction timeSlotChange(timeslot) {\n  return dispatch => {\n    dispatch({\n      type: moneyWithdrawalConstatnt.TIME_SLOT_CHANGE,\n      timeslot\n    });\n  };\n}\n\nfunction amountChange(amount) {\n  return dispatch => {\n    dispatch({\n      type: moneyWithdrawalConstatnt.AMOUNT_CHANGE,\n      amount\n    });\n  };\n}\n\nfunction SPChange(SPId) {\n  return dispatch => {\n    dispatch({\n      type: moneyWithdrawalConstatnt.SP_CHANGE,\n      id: SPId\n    });\n  };\n}\n\nfunction editRequest(id, withdrawalObj) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await moneyWithdrawalService.EditItem(id, withdrawalObj);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't get requests right now, please try later\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: moneyWithdrawalConstatnt.EDIT_ITEM_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: moneyWithdrawalConstatnt.EDIT_ITEM_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: moneyWithdrawalConstatnt.EDIT_ITEM_FAILURE,\n      error\n    };\n  }\n}\n\nfunction saveRequest(withdrawalObj) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await moneyWithdrawalService.saveItem(withdrawalObj);\n      dispatch(success(data));\n      dispatch(alertActions.success({\n        header: \"Successful Request\",\n        content: 'Your Withdrawal Request has been created Successfully'\n      }));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"Something went wrong , please try again\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/moneyWithdrawal.action.js"],"names":["moneyWithdrawalConstatnt","moneyWithdrawalService","alertActions","moneyWithdrawalActions","getAllRequest","removeItem","getOneRequest","timeSlotChange","amountChange","SPChange","editRequest","saveRequest","dispatch","request","data","getAll","success","ex","failure","error","header","content","message","type","VIEW_ALL_REQUEST","VIEW_ALL_SUCCESS","VIEW_ALL_FAILURE","id","getOne","VIEW_ONE_REQUEST","VIEW_ONE_SUCCESS","VIEW_ONE_FAILURE","REMOVE_ITEM_REQUEST","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAILURE","timeslot","TIME_SLOT_CHANGE","amount","AMOUNT_CHANGE","SPId","SP_CHANGE","withdrawalObj","EditItem","EDIT_ITEM_REQUEST","EDIT_ITEM_SUCCESS","EDIT_ITEM_FAILURE","saveItem","SAVE_ITEM_REQUEST","SAVE_ITEM_SUCCESS","SAVE_ITEM_FAILURE"],"mappings":"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","sourcesContent":["import { moneyWithdrawalConstatnt } from \"../constants\";\r\nimport { moneyWithdrawalService } from \"./../services\";\r\nimport { alertActions } from \"./\";\r\nexport const moneyWithdrawalActions = {\r\n  getAllRequest,\r\n  removeItem,\r\n  getOneRequest,\r\n  timeSlotChange,\r\n  amountChange,\r\n  SPChange,\r\n  editRequest,\r\n  saveRequest\r\n};\r\nfunction getAllRequest() {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await moneyWithdrawalService.getAll();\r\n      dispatch(success(data));\r\n    \r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't get requests right now, please try later\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.VIEW_ALL_REQUEST\r\n    };\r\n  }\r\n  function success(data) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.VIEW_ALL_SUCCESS,\r\n      data\r\n    };\r\n  }\r\n  function failure(error) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.VIEW_ALL_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\nfunction getOneRequest(id) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await moneyWithdrawalService.getOne(id);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't get request right now, please try later\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.VIEW_ONE_REQUEST\r\n    };\r\n  }\r\n  function success(data) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.VIEW_ONE_SUCCESS,\r\n      data\r\n    };\r\n  }\r\n  function failure(error) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.VIEW_ONE_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction removeItem(id) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await moneyWithdrawalService.removeItem(id);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't remove item\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.REMOVE_ITEM_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.REMOVE_ITEM_SUCCESS,\r\n      data\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.REMOVE_ITEM_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction timeSlotChange(timeslot) {\r\n  return dispatch => {\r\n    dispatch({ type: moneyWithdrawalConstatnt.TIME_SLOT_CHANGE, timeslot });\r\n  };\r\n}\r\nfunction amountChange(amount) {\r\n  return dispatch => {\r\n    dispatch({ type: moneyWithdrawalConstatnt.AMOUNT_CHANGE, amount });\r\n  };\r\n}\r\n\r\nfunction SPChange(SPId) {\r\n  return dispatch => {\r\n    dispatch({ type: moneyWithdrawalConstatnt.SP_CHANGE, id: SPId });\r\n  };\r\n}\r\n\r\nfunction editRequest(id, withdrawalObj) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await moneyWithdrawalService.EditItem(id, withdrawalObj);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't get requests right now, please try later\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.EDIT_ITEM_REQUEST\r\n    };\r\n  }\r\n  function success(data) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.EDIT_ITEM_SUCCESS,\r\n      data\r\n    };\r\n  }\r\n  function failure(error) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.EDIT_ITEM_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\nfunction saveRequest(withdrawalObj) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await moneyWithdrawalService.saveItem(withdrawalObj);\r\n      dispatch(success(data));\r\n      dispatch(\r\n        alertActions.success({\r\n          header: \"Successful Request\",\r\n          content: 'Your Withdrawal Request has been created Successfully'\r\n        })\r\n      );\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Something went wrong , please try again\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_REQUEST\r\n    };\r\n  }\r\n  function success(data) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_SUCCESS,\r\n      data\r\n    };\r\n  }\r\n  function failure(error) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}