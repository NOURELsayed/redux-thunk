{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UpdateMobileModal.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, Input, Grid, Icon } from 'semantic-ui-react';\nimport { userActions } from '../../actions/user.actions';\n\nclass UpdateMobileModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      code: '',\n      mobile: '',\n      isCodeValid: false,\n      isMobileValid: false,\n      enableSubmit: false\n    };\n\n    this.show = () => () => this.props.showUpdateMobileModal(true);\n\n    this.close = () => this.props.showUpdateMobileModal(false);\n\n    this.mobileChanged = (e, data) => {\n      const isMobileValid = /^01[0-2|5]{1}[0-9]{8}$/.test(data.value);\n      this.setState({\n        mobile: data.value,\n        isMobileValid: isMobileValid,\n        enableSubmit: isMobileValid && this.state.isCodeValid\n      });\n    };\n\n    this.codeChanged = (e, data) => {\n      const isCodeValid = data.value && data.value.length === 2;\n      this.setState({\n        code: data.value,\n        isCodeValid: isCodeValid,\n        enableSubmit: isCodeValid && this.state.isMobileValid\n      });\n    };\n  }\n\n  render() {\n    const {\n      openUpdateMobile\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      onClick: this.show(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Modal, {\n      open: openUpdateMobile,\n      onClose: this.close,\n      closeIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"Update Mobile\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, \"Country code :\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Country code\",\n      onChange: this.codeChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }), this.state.isCodeValid ? /*#__PURE__*/React.createElement(Icon, {\n      color: \"green\",\n      name: \"checkmark\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Icon, {\n      color: \"yellow\",\n      name: \"warning\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, \"Mobile :\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Mobile Number\",\n      onChange: this.mobileChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }), this.state.isMobileValid ? /*#__PURE__*/React.createElement(Icon, {\n      color: \"green\",\n      name: \"checkmark\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Icon, {\n      color: \"yellow\",\n      name: \"warning\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button.Or, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }), this.state.enableSubmit ? /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      onClick: () => {\n        this.props.handleUpdateMobileButtonClicked(this.state.code, this.state.mobile);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"Save\") : /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    openUpdateMobile\n  } = state.users;\n  return {\n    openUpdateMobile\n  };\n}\n\nconst actionCreators = {\n  handleUpdateMobileButtonClicked: userActions.updateMobile,\n  showUpdateMobileModal: userActions.showUpdateMobileModal\n};\nconst connectedUpdateMobileModal = connect(mapState, actionCreators)(UpdateMobileModal);\nexport { connectedUpdateMobileModal as UpdateMobileModal };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/UpdateMobileModal.jsx"],"names":["React","Component","connect","Button","Modal","Input","Grid","Icon","userActions","UpdateMobileModal","state","code","mobile","isCodeValid","isMobileValid","enableSubmit","show","props","showUpdateMobileModal","close","mobileChanged","e","data","test","value","setState","codeChanged","length","render","openUpdateMobile","handleUpdateMobileButtonClicked","mapState","users","actionCreators","updateMobile","connectedUpdateMobileModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, Input, Grid, Icon } from 'semantic-ui-react';\r\nimport { userActions } from '../../actions/user.actions';\r\n\r\nclass UpdateMobileModal extends Component {\r\n    state = {\r\n        code: '',\r\n        mobile: '',\r\n        isCodeValid: false,\r\n        isMobileValid: false,\r\n        enableSubmit: false,\r\n    };\r\n    show = () => () => this.props.showUpdateMobileModal(true);\r\n    close = () => this.props.showUpdateMobileModal(false);\r\n    mobileChanged = (e, data) => {\r\n        const isMobileValid = /^01[0-2|5]{1}[0-9]{8}$/.test(data.value);\r\n        this.setState({\r\n            mobile: data.value,\r\n            isMobileValid: isMobileValid,\r\n            enableSubmit: isMobileValid && this.state.isCodeValid,\r\n        });\r\n    };\r\n\r\n    codeChanged = (e, data) => {\r\n        const isCodeValid = data.value && data.value.length === 2;\r\n        this.setState({\r\n            code: data.value,\r\n            isCodeValid: isCodeValid,\r\n            enableSubmit: isCodeValid && this.state.isMobileValid,\r\n        });\r\n    };\r\n    render() {\r\n        const { openUpdateMobile } = this.props;\r\n        return (\r\n            <div>\r\n                <Button primary onClick={this.show()}>Edit</Button>\r\n                <Modal open={openUpdateMobile} onClose={this.close} closeIcon>\r\n                    <Modal.Header>Update Mobile</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={3}>\r\n                                    Country code :\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <Input\r\n                                        placeholder='Country code'\r\n                                        onChange={this.codeChanged}\r\n                                    />\r\n                                    {this.state.isCodeValid ? (\r\n                                        <Icon\r\n                                            color='green'\r\n                                            name='checkmark'\r\n                                            size='small'\r\n                                        />\r\n                                    ) : (\r\n                                        <Icon\r\n                                            color='yellow'\r\n                                            name='warning'\r\n                                            size='small'\r\n                                        />\r\n                                    )}\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n\r\n                            <Grid.Row>\r\n                                <Grid.Column width={3}>Mobile :</Grid.Column>\r\n                                <Grid.Column>\r\n                                    <Input\r\n                                        placeholder='Mobile Number'\r\n                                        onChange={this.mobileChanged}\r\n                                    />\r\n                                    {this.state.isMobileValid ? (\r\n                                        <Icon\r\n                                            color='green'\r\n                                            name='checkmark'\r\n                                            size='small'\r\n                                        />\r\n                                    ) : (\r\n                                        <Icon\r\n                                            color='yellow'\r\n                                            name='warning'\r\n                                            size='small'\r\n                                        />\r\n                                    )}\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button.Group>\r\n                            <Button onClick={this.close}>Cancel</Button>\r\n                            <Button.Or />\r\n                            {this.state.enableSubmit ? (\r\n                                <Button\r\n                                    positive\r\n                                    onClick={() => {\r\n                                        this.props.handleUpdateMobileButtonClicked(\r\n                                            this.state.code,\r\n                                            this.state.mobile,\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            ) : (\r\n                                <Button positive disabled>\r\n                                    Save\r\n                                </Button>\r\n                            )}\r\n                        </Button.Group>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { openUpdateMobile } = state.users;\r\n    return { openUpdateMobile };\r\n}\r\n\r\nconst actionCreators = {\r\n    handleUpdateMobileButtonClicked: userActions.updateMobile,\r\n    showUpdateMobileModal: userActions.showUpdateMobileModal,\r\n};\r\n\r\nconst connectedUpdateMobileModal = connect(\r\n    mapState,\r\n    actionCreators,\r\n)(UpdateMobileModal);\r\n\r\nexport { connectedUpdateMobileModal as UpdateMobileModal };\r\n"]},"metadata":{},"sourceType":"module"}