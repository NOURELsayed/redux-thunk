{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ContactUs/ContactUsPage.jsx\";\nimport React, { Component } from \"react\";\nimport { Header, Form, Container, Grid, Message } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { validatorActions, contactUsActions } from \"../../actions\";\nimport { Translation } from \"react-i18next\";\nimport { withTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\n\nclass ContactUs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.schema = {\n      required: [\"name\", \"email\", \"country\", \"subject\", \"message\"],\n      properties: {\n        name: {\n          title: \"Name\",\n          type: \"string\",\n          minLength: 5,\n          maxLength: 50\n        },\n        email: {\n          title: \"Email\",\n          type: \"string\",\n          format: \"email\",\n          minLength: 5,\n          maxLength: 255\n        },\n        country: {\n          title: \"Country\",\n          type: \"string\",\n          minLength: 5,\n          maxLength: 50\n        },\n        subject: {\n          title: \"Subject\",\n          type: \"string\",\n          minLength: 5,\n          maxLength: 50\n        },\n        message: {\n          title: \"Message\",\n          type: \"string\",\n          minLength: 5,\n          maxLength: 500\n        }\n      }\n    };\n    this.state = {\n      contactus: {\n        name: \"\",\n        email: \"\",\n        country: \"\",\n        subject: \"\",\n        message: \"\"\n      },\n      noSubmission: true\n    };\n\n    this.changeLanguage = lng => {\n      i18n.changeLanguage(lng);\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.props.validateInput(this.schema, name, value);\n      const contactus = { ...this.state.contactus\n      };\n      contactus[name] = value;\n      this.setState({\n        contactus\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        country,\n        subject,\n        message\n      } = this.state.contactus;\n      await this.props.validateForm(this.schema, {\n        name,\n        email,\n        country,\n        subject,\n        message\n      });\n      if (!this.props.valid) return;\n      this.setState({\n        noSubmission: false\n      });\n      await this.props.contactUsForm(this.state.contactus);\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"centered\",\n      style: {\n        height: \"90vh\"\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Translation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, (t, {\n      i18n\n    }) => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 35\n      }\n    }, this.props.t(\"welcome\"))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeLanguage(\"ar\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"ar\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeLanguage(\"en\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"en\")), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      label: (t, {\n        i18n\n      }) => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      }, this.props.t(\"Name\")),\n      textAlign: \"left\",\n      disabled: !this.state.noSubmission,\n      name: \"name\",\n      size: \"large\",\n      icon: \"address card\",\n      minLength: \"3\",\n      iconPosition: \"left\",\n      placeholder: \"Name\",\n      value: this.state.contactus.name,\n      onChange: this.handleChange,\n      error: errors && errors.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      label: (t, {\n        i18n\n      }) => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      }, this.props.t(\"Email\")),\n      textAlign: \"left\",\n      disabled: !this.state.noSubmission,\n      name: \"email\",\n      size: \"large\",\n      icon: \"mail\",\n      iconPosition: \"left\",\n      value: this.state.contactus.email,\n      placeholder: \"Email\",\n      onChange: this.handleChange,\n      error: errors && errors.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      label: (t, {\n        i18n\n      }) => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 41\n        }\n      }, this.props.t(\"Country\")),\n      textAlign: \"left\",\n      disabled: !this.state.noSubmission,\n      name: \"country\",\n      size: \"large\",\n      icon: \"flag\",\n      iconPosition: \"left\",\n      placeholder: \"Country\",\n      value: this.state.contactus.country,\n      onChange: this.handleChange,\n      error: errors && errors.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      label: (t, {\n        i18n\n      }) => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 41\n        }\n      }, this.props.t(\"Subject\")),\n      textAlign: \"left\",\n      disabled: !this.state.noSubmission,\n      name: \"subject\",\n      size: \"large\",\n      icon: \"pencil alternate\",\n      iconPosition: \"left\",\n      placeholder: \"Subject\",\n      value: this.state.contactus.subject,\n      onChange: this.handleChange,\n      error: errors && errors.subject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.TextArea, {\n      required: true,\n      label: (t, {\n        i18n\n      }) => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 41\n        }\n      }, this.props.t(\"Message\")),\n      textAlign: \"left\",\n      disabled: !this.state.noSubmission,\n      name: \"message\",\n      placeholder: \"Message ...\",\n      value: this.state.contactus.message,\n      onChange: this.handleChange,\n      error: errors && errors.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }), this.state.noSubmission ? /*#__PURE__*/React.createElement(Form.Button, {\n      fluid: true,\n      color: \"teal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, this.props.t(\"Submit\")) : /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: this.props.t(\"ThankYouForContactingUs\"),\n      content: this.props.t(\"Yourcontactusformhasbeensubmittedsuccessfully\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    errors,\n    valid\n  } = state.validation;\n  return {\n    errors,\n    valid\n  };\n}\n\nconst actionCreators = {\n  validateInput: validatorActions.validateInput,\n  validateForm: validatorActions.validateForm,\n  contactUsForm: contactUsActions.contactUsForm\n};\nconst connectedContactUs = connect(mapState, actionCreators)(withTranslation()(ContactUs));\nexport { connectedContactUs as ContactUs };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ContactUs/ContactUsPage.jsx"],"names":["React","Component","Header","Form","Container","Grid","Message","connect","validatorActions","contactUsActions","Translation","withTranslation","i18n","ContactUs","schema","required","properties","name","title","type","minLength","maxLength","email","format","country","subject","message","state","contactus","noSubmission","changeLanguage","lng","handleChange","e","value","props","validateInput","setState","handleSubmit","preventDefault","validateForm","valid","contactUsForm","render","errors","height","maxWidth","t","mapState","validation","actionCreators","connectedContactUs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Header, Form, Container, Grid, Message } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { validatorActions, contactUsActions } from \"../../actions\";\r\nimport { Translation } from \"react-i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport i18n from \"i18next\";\r\n\r\nclass ContactUs extends Component {\r\n  schema = {\r\n    required: [\"name\", \"email\", \"country\", \"subject\", \"message\"],\r\n    properties: {\r\n      name: { title: \"Name\", type: \"string\", minLength: 5, maxLength: 50 },\r\n      email: {\r\n        title: \"Email\",\r\n        type: \"string\",\r\n        format: \"email\",\r\n        minLength: 5,\r\n        maxLength: 255,\r\n      },\r\n      country: {\r\n        title: \"Country\",\r\n        type: \"string\",\r\n        minLength: 5,\r\n        maxLength: 50,\r\n      },\r\n      subject: {\r\n        title: \"Subject\",\r\n        type: \"string\",\r\n        minLength: 5,\r\n        maxLength: 50,\r\n      },\r\n      message: {\r\n        title: \"Message\",\r\n        type: \"string\",\r\n        minLength: 5,\r\n        maxLength: 500,\r\n      },\r\n    },\r\n  };\r\n  state = {\r\n    contactus: {\r\n      name: \"\",\r\n      email: \"\",\r\n      country: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n    },\r\n    noSubmission: true,\r\n  };\r\n\r\n\r\n  changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    this.props.validateInput(this.schema, name, value);\r\n    const contactus = { ...this.state.contactus };\r\n    contactus[name] = value;\r\n    this.setState({ contactus });\r\n  };\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email, country, subject, message } = this.state.contactus;\r\n    await this.props.validateForm(this.schema, {\r\n      name,\r\n      email,\r\n      country,\r\n      subject,\r\n      message,\r\n    });\r\n    if (!this.props.valid) return;\r\n    this.setState({ noSubmission: false });\r\n    await this.props.contactUsForm(this.state.contactus);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <Container>\r\n        <Grid\r\n          className=\"centered\"\r\n          style={{ height: \"90vh\" }}\r\n          verticalAlign=\"middle\"\r\n        >\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n              <Translation>\r\n                {(t, { i18n }) => <p>{this.props.t(\"welcome\")}</p>}\r\n              </Translation>\r\n              <button onClick={() => this.changeLanguage(\"ar\")}>ar</button>\r\n              <button onClick={() => this.changeLanguage(\"en\")}>en</button>\r\n            </Header>\r\n\r\n            <Form size=\"large\" onSubmit={this.handleSubmit}>\r\n              <Form.Input\r\n                required\r\n                label={(t, { i18n }) => <p>{this.props.t(\"Name\")}</p>}\r\n                textAlign=\"left\"\r\n                disabled={!this.state.noSubmission}\r\n                name=\"name\"\r\n                size=\"large\"\r\n                icon=\"address card\"\r\n                minLength=\"3\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Name\"\r\n                value={this.state.contactus.name}\r\n                onChange={this.handleChange}\r\n                error={errors && errors.name}\r\n              />\r\n              <Form.Input\r\n                required\r\n                label={(t, { i18n }) => <p>{this.props.t(\"Email\")}</p>}\r\n                textAlign=\"left\"\r\n                disabled={!this.state.noSubmission}\r\n                name=\"email\"\r\n                size=\"large\"\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                value={this.state.contactus.email}\r\n                placeholder=\"Email\"\r\n                onChange={this.handleChange}\r\n                error={errors && errors.email}\r\n              />\r\n              <Form.Input\r\n                required\r\n                label={(t, { i18n }) => <p>{this.props.t(\"Country\")}</p>}\r\n                textAlign=\"left\"\r\n                disabled={!this.state.noSubmission}\r\n                name=\"country\"\r\n                size=\"large\"\r\n                icon=\"flag\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Country\"\r\n                value={this.state.contactus.country}\r\n                onChange={this.handleChange}\r\n                error={errors && errors.country}\r\n              />\r\n              <Form.Input\r\n                required\r\n                label={(t, { i18n }) => <p>{this.props.t(\"Subject\")}</p>}\r\n                textAlign=\"left\"\r\n                disabled={!this.state.noSubmission}\r\n                name=\"subject\"\r\n                size=\"large\"\r\n                icon=\"pencil alternate\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Subject\"\r\n                value={this.state.contactus.subject}\r\n                onChange={this.handleChange}\r\n                error={errors && errors.subject}\r\n              />\r\n              <Form.TextArea\r\n                required\r\n                label={(t, { i18n }) => <p>{this.props.t(\"Message\")}</p>}\r\n                textAlign=\"left\"\r\n                disabled={!this.state.noSubmission}\r\n                name=\"message\"\r\n                placeholder=\"Message ...\"\r\n                value={this.state.contactus.message}\r\n                onChange={this.handleChange}\r\n                error={errors && errors.message}\r\n              ></Form.TextArea>\r\n              {this.state.noSubmission ? (\r\n                <Form.Button fluid color=\"teal\">\r\n                  {this.props.t(\"Submit\")}\r\n                </Form.Button>\r\n              ) : (\r\n                <Message\r\n                  success\r\n                  header={this.props.t(\"ThankYouForContactingUs\")}\r\n                  content={this.props.t(\"Yourcontactusformhasbeensubmittedsuccessfully\")}\r\n                />\r\n              )}\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { errors, valid } = state.validation;\r\n  return { errors, valid };\r\n}\r\n\r\nconst actionCreators = {\r\n  validateInput: validatorActions.validateInput,\r\n  validateForm: validatorActions.validateForm,\r\n  contactUsForm: contactUsActions.contactUsForm,\r\n};\r\n\r\nconst connectedContactUs = connect(mapState, actionCreators)(withTranslation()(ContactUs));\r\n\r\nexport { connectedContactUs as ContactUs };\r\n"]},"metadata":{},"sourceType":"module"}