{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/RegisterPage/Sections/UsernamePasswordSection.jsx\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Form, Segment } from \"semantic-ui-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { registerByEmail, registerByShareableLink, registerByPhone, validatorActions } from \"../../../actions\";\nimport \"./styles.css\";\nimport { Router } from 'react-router-dom';\n\nconst UsernamePasswordSection = () => {\n  const {\n    t\n  } = useTranslation();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [markStore, setMarkStore] = useState(false);\n  const dispatch = useDispatch();\n  const registerData = useSelector(state => state.registerReducer.registerData);\n  const step = useSelector(state => state.registerReducer.step);\n  const registerError = useSelector(state => state.registerReducer.registerError);\n  const InputvalidtionError = useSelector(state => {\n    var _state$validation$err;\n\n    return (_state$validation$err = state.validation.errors) === null || _state$validation$err === void 0 ? void 0 : _state$validation$err.username;\n  });\n  const InputvalidtionPasswordError = useSelector(state => {\n    var _state$validation$err2;\n\n    return (_state$validation$err2 = state.validation.errors) === null || _state$validation$err2 === void 0 ? void 0 : _state$validation$err2.password;\n  });\n  const schema = {\n    required: [\"username\", \"password\"],\n    properties: {\n      username: {\n        title: \"username\",\n        type: \"string\",\n        pattern: \"^(?=^.{3,30}$)(?!(.*[0-9\\u0660-\\u0669].*){6})^[a-z\\u0621-\\u064A]([.-_]?[a-z\\u0621-\\u064A0-9\\u0660-\\u0669]+)*$\"\n      },\n      password: {\n        title: \"password\",\n        type: \"string\",\n        minLength: 8\n      }\n    }\n  };\n  const isFormDisabled = step < 3 || step === 4;\n  useEffect(() => {\n    if (step < 3 || step === 4) {\n      setUsername(\"\");\n      setPassword(\"\");\n    }\n  }, [step, registerError]);\n\n  const handleSubmit = () => {\n    const dataToSend = {\n      username,\n      password,\n      phone: {\n        code: \"02\",\n        number: registerData === null || registerData === void 0 ? void 0 : registerData.phone\n      },\n      invitationToken: registerData === null || registerData === void 0 ? void 0 : registerData.token,\n      markStore\n    };\n\n    switch (registerData === null || registerData === void 0 ? void 0 : registerData.type) {\n      case \"register\":\n        {\n          // .. email\n          dispatch(registerByEmail(dataToSend));\n          break;\n        }\n\n      case \"registerUnverified\":\n        {\n          // .. shareable link\n          dispatch(registerByShareableLink(dataToSend));\n          break;\n        }\n\n      case \"registerByPhone\":\n        {\n          // .. phone\n          dispatch(registerByPhone(dataToSend));\n          break;\n        }\n\n      default:\n        return;\n    }\n  };\n\n  const handleUsernameChange = useCallback(e => {\n    let userNameLowerCase = e.target.value.toLowerCase();\n    setUsername(userNameLowerCase);\n    dispatch(validatorActions.validateInput(schema, e.target.name, userNameLowerCase));\n  }, [username]);\n  const handlePasswordChange = useCallback(e => {\n    setPassword(e.target.value);\n    dispatch(validatorActions.validateInput(schema, e.target.name, e.target.value));\n  }, [password]);\n  const iamVendorDivPressed = useCallback(() => {\n    if (isFormDisabled) {\n      return;\n    }\n\n    setMarkStore(!markStore);\n  }, [markStore, isFormDisabled]);\n  const language = localStorage.getItem(\"i18nextLng\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Segment, {\n    className: `UsernameSegment ${language}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"userNameText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, t(\"registerPage:accountDetailsText\")), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formInputTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, t(\"registerPage:desiredUsernameText\")), InputvalidtionError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"errorHnadling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, t(\"registerPage:wrongUserName\"))), /*#__PURE__*/React.createElement(Form.Input, {\n    disabled: isFormDisabled,\n    required: true,\n    value: username,\n    name: \"username\",\n    placeholder: t(\"registerPage:usernameText\"),\n    onChange: handleUsernameChange,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formInputTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, t(\"registerPage:desiredPasswordText\")), InputvalidtionPasswordError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"errorHnadling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, t(\"registerPage:wrongPassword\"))), /*#__PURE__*/React.createElement(Form.Input, {\n    disabled: isFormDisabled,\n    required: true,\n    value: password,\n    name: \"password\",\n    type: \"password\",\n    placeholder: t(\"registerPage:passwordText\"),\n    onChange: handlePasswordChange,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: markStore ? \"iamVendorFocusDiv\" : \"iamVendorDiv\",\n    onClick: iamVendorDivPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: markStore ? \"selectionIcon\" : \"selectionFocusedIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `iamVendorLabel ${language}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, t(\"registerPage:iamVendorLabel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `iamVendorLabel ${language}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, t(\"registerPage:iamVendorNoteLabel\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: `NextButton ${language}`,\n    disabled: isFormDisabled,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, t(\"registerPage:registerButtonTitle\")), registerError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"errorHnadling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, registerError === \"Username already used. Please choose a different one\" ? t(\"registerPage:registerUsernameError\") : t(\"registerPage:registerError\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"termsAndConditionText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, t(\"registerPage:termsAndConditionText\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { UsernamePasswordSection };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/RegisterPage/Sections/UsernamePasswordSection.jsx"],"names":["React","useState","useCallback","useEffect","Form","Segment","useTranslation","useSelector","useDispatch","registerByEmail","registerByShareableLink","registerByPhone","validatorActions","Router","UsernamePasswordSection","t","username","setUsername","password","setPassword","markStore","setMarkStore","dispatch","registerData","state","registerReducer","step","registerError","InputvalidtionError","validation","errors","InputvalidtionPasswordError","schema","required","properties","title","type","pattern","minLength","isFormDisabled","handleSubmit","dataToSend","phone","code","number","invitationToken","token","handleUsernameChange","e","userNameLowerCase","target","value","toLowerCase","validateInput","name","handlePasswordChange","iamVendorDivPressed","language","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport { Form, Segment } from \"semantic-ui-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  registerByEmail,\r\n  registerByShareableLink,\r\n  registerByPhone,\r\n  validatorActions,\r\n} from \"../../../actions\";\r\n\r\nimport \"./styles.css\";\r\nimport { Router } from 'react-router-dom';\r\n\r\nconst UsernamePasswordSection = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [markStore, setMarkStore] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const registerData = useSelector(\r\n    (state) => state.registerReducer.registerData\r\n  );\r\n  const step = useSelector((state) => state.registerReducer.step);\r\n  const registerError = useSelector(\r\n    (state) => state.registerReducer.registerError\r\n  );\r\n  const InputvalidtionError = useSelector(\r\n    (state) => state.validation.errors?.username\r\n  );\r\n  const InputvalidtionPasswordError = useSelector(\r\n    (state) => state.validation.errors?.password\r\n  );\r\n\r\n  const schema = {\r\n    required: [\"username\", \"password\"],\r\n    properties: {\r\n      username: {\r\n        title: \"username\",\r\n        type: \"string\",\r\n        pattern:\r\n          \"^(?=^.{3,30}$)(?!(.*[0-9\\u0660-\\u0669].*){6})^[a-z\\u0621-\\u064A]([.-_]?[a-z\\u0621-\\u064A0-9\\u0660-\\u0669]+)*$\",\r\n      },\r\n      password: {\r\n        title: \"password\",\r\n        type: \"string\",\r\n        minLength: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n  const isFormDisabled = step < 3 || step === 4;\r\n\r\n  useEffect(() => {\r\n    if (step < 3 || step === 4) {\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  }, [step, registerError]);\r\n\r\n  const handleSubmit = () => {\r\n    const dataToSend = {\r\n      username,\r\n      password,\r\n      phone: {\r\n        code: \"02\",\r\n        number: registerData?.phone,\r\n      },\r\n      invitationToken: registerData?.token,\r\n      markStore,\r\n    };\r\n    switch (registerData?.type) {\r\n      case \"register\": {\r\n        // .. email\r\n        dispatch(registerByEmail(dataToSend));\r\n        break;\r\n      }\r\n\r\n      case \"registerUnverified\": {\r\n        // .. shareable link\r\n        dispatch(registerByShareableLink(dataToSend));\r\n        break;\r\n      }\r\n\r\n      case \"registerByPhone\": {\r\n        // .. phone\r\n        dispatch(registerByPhone(dataToSend));\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleUsernameChange = useCallback(\r\n    (e) => {\r\n      let userNameLowerCase = e.target.value.toLowerCase()\r\n      setUsername(userNameLowerCase);\r\n      dispatch(\r\n        validatorActions.validateInput(schema, e.target.name, userNameLowerCase)\r\n      );\r\n    },\r\n    [username]\r\n  );\r\n\r\n  const handlePasswordChange = useCallback(\r\n    (e) => {\r\n      setPassword(e.target.value);\r\n      dispatch(\r\n        validatorActions.validateInput(schema, e.target.name, e.target.value)\r\n      );\r\n    },\r\n\r\n    [password]\r\n  );\r\n\r\n\r\n  const iamVendorDivPressed = useCallback(() => {\r\n    if (isFormDisabled) {\r\n      return;\r\n    }\r\n    setMarkStore(!markStore);\r\n  }, [markStore, isFormDisabled]);\r\n  const language = localStorage.getItem(\"i18nextLng\"); \r\n\r\n  return (\r\n    <>\r\n      <Segment className={`UsernameSegment ${language}`}>\r\n        <p className={\"userNameText\"}>\r\n          {t(\"registerPage:accountDetailsText\")}\r\n        </p>\r\n\r\n        <Form>\r\n          <div className=\"formInputTitle\">\r\n            <label>{t(\"registerPage:desiredUsernameText\")}</label>\r\n            {InputvalidtionError && (\r\n              <span className=\"errorHnadling\">\r\n                {t(\"registerPage:wrongUserName\")}\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <Form.Input\r\n            disabled={isFormDisabled}\r\n            required\r\n            value={username}\r\n            name=\"username\"\r\n            placeholder={t(\"registerPage:usernameText\")}\r\n            onChange={handleUsernameChange}\r\n            autoCapitalize = 'none'\r\n          />\r\n\r\n          <div className=\"formInputTitle\" >\r\n            <label>{t(\"registerPage:desiredPasswordText\")}</label>\r\n            {InputvalidtionPasswordError && (\r\n              <span className=\"errorHnadling\">\r\n                {t(\"registerPage:wrongPassword\")}\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <Form.Input\r\n            disabled={isFormDisabled}\r\n            required\r\n            value={password}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder={t(\"registerPage:passwordText\")}\r\n            onChange={handlePasswordChange}\r\n            autoCapitalize = 'none'\r\n          />\r\n\r\n          <div\r\n            className={markStore ? \"iamVendorFocusDiv\" : \"iamVendorDiv\"}\r\n            onClick={iamVendorDivPressed}\r\n          >\r\n            <div\r\n              className={markStore ? \"selectionIcon\" :\"selectionFocusedIcon\"}\r\n            />\r\n            <div className={`iamVendorLabel ${language}`}>\r\n              {t(\"registerPage:iamVendorLabel\")}\r\n            </div>\r\n            <div className={`iamVendorLabel ${language}`}>\r\n              {t(\"registerPage:iamVendorNoteLabel\")}\r\n            </div>\r\n          </div>\r\n        </Form>\r\n\r\n        <button\r\n          className={`NextButton ${language}`}\r\n          disabled={isFormDisabled}\r\n          onClick={handleSubmit}\r\n        >\r\n          {t(\"registerPage:registerButtonTitle\")}\r\n        </button>\r\n        \r\n        {registerError && (\r\n          <span className=\"errorHnadling\">{registerError===\"Username already used. Please choose a different one\"?t(\"registerPage:registerUsernameError\"):t(\"registerPage:registerError\")}</span>\r\n        )}\r\n        <div className={\"termsAndConditionText\"}>\r\n          <label>{t(\"registerPage:termsAndConditionText\")}</label>\r\n        </div>\r\n      </Segment>\r\n      <div className={\"Border\"} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { UsernamePasswordSection };\r\n"]},"metadata":{},"sourceType":"module"}