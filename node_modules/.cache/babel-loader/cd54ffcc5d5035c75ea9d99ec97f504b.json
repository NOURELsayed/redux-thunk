{"ast":null,"code":"import { watchListConstants } from \"../constants\";\nimport { watchListService } from \"./../services\";\nimport { alertActions } from \"./\";\nexport const watchListActions = {\n  viewWatchList,\n  removeItem,\n  addItemToWatchList\n};\n\nfunction addItemToWatchList(postId, post) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await watchListService.addToWatchList(postId);\n      dispatch(success({\n        data,\n        postId,\n        post\n      }));\n      dispatch(alertActions.success({\n        content: data.message\n      }));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: watchListConstants.ADD_WATCHLIST_REQUEST\n    };\n  }\n\n  function success(res) {\n    return {\n      type: watchListConstants.ADD_WATCHLIST_SUCCESS,\n      Message: res.data,\n      postId: res.postId,\n      post: res.post\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: watchListConstants.ADD_WATCHLIST_FAILURE,\n      error\n    };\n  }\n}\n\nfunction viewWatchList() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await watchListService.viewWatchList();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't view cart details\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: watchListConstants.VIEW_WATCHLIST_REQUEST\n    };\n  }\n\n  function success(watchListData) {\n    return {\n      type: watchListConstants.VIEW_WATCHLIST_SUCCESS,\n      watchListData\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: watchListConstants.VIEW_WATCHLIST_FAILURE,\n      error\n    };\n  }\n}\n\nfunction removeItem(postId, viewAlert) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await watchListService.removeItem(postId);\n      dispatch(success(postId));\n      if (viewAlert) dispatch(alertActions.success({\n        content: data.message\n      }));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't remove item\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: watchListConstants.REMOVE_WATCHLIST_REQUEST\n    };\n  }\n\n  function success(postId) {\n    return {\n      type: watchListConstants.REMOVE_WATCHLIST_SUCCESS,\n      postId\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: watchListConstants.REMOVE_WATCHLIST_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/watchList.actions.js"],"names":["watchListConstants","watchListService","alertActions","watchListActions","viewWatchList","removeItem","addItemToWatchList","postId","post","dispatch","request","data","addToWatchList","success","content","message","ex","failure","error","type","ADD_WATCHLIST_REQUEST","res","ADD_WATCHLIST_SUCCESS","Message","ADD_WATCHLIST_FAILURE","header","VIEW_WATCHLIST_REQUEST","watchListData","VIEW_WATCHLIST_SUCCESS","VIEW_WATCHLIST_FAILURE","viewAlert","REMOVE_WATCHLIST_REQUEST","REMOVE_WATCHLIST_SUCCESS","REMOVE_WATCHLIST_FAILURE"],"mappings":"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","sourcesContent":["import { watchListConstants } from \"../constants\";\r\nimport { watchListService } from \"./../services\";\r\nimport { alertActions } from \"./\";\r\n\r\nexport const watchListActions = {\r\n  viewWatchList,\r\n  removeItem,\r\n  addItemToWatchList,\r\n};\r\nfunction addItemToWatchList(postId: String, post: Object) {\r\n  return async (dispatch) => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await watchListService.addToWatchList(postId);\r\n      dispatch(success({ data, postId, post }));\r\n      dispatch(\r\n        alertActions.success({\r\n          content: data.message,\r\n        })\r\n      );\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          content: ex.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: watchListConstants.ADD_WATCHLIST_REQUEST,\r\n    };\r\n  }\r\n\r\n  function success(res) {\r\n    return {\r\n      type: watchListConstants.ADD_WATCHLIST_SUCCESS,\r\n      Message: res.data,\r\n      postId: res.postId,\r\n      post: res.post,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: watchListConstants.ADD_WATCHLIST_FAILURE,\r\n      error,\r\n    };\r\n  }\r\n}\r\nfunction viewWatchList() {\r\n  return async (dispatch) => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await watchListService.viewWatchList();\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't view cart details\",\r\n          content: ex.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {\r\n      type: watchListConstants.VIEW_WATCHLIST_REQUEST,\r\n    };\r\n  }\r\n\r\n  function success(watchListData) {\r\n    return {\r\n      type: watchListConstants.VIEW_WATCHLIST_SUCCESS,\r\n      watchListData,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: watchListConstants.VIEW_WATCHLIST_FAILURE,\r\n      error,\r\n    };\r\n  }\r\n}\r\n\r\nfunction removeItem(postId, viewAlert) {\r\n  return async (dispatch) => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await watchListService.removeItem(postId);\r\n      dispatch(success(postId));\r\n      if (viewAlert) dispatch(alertActions.success({ content: data.message }));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't remove item\",\r\n          content: ex.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: watchListConstants.REMOVE_WATCHLIST_REQUEST,\r\n    };\r\n  }\r\n\r\n  function success(postId) {\r\n    return {\r\n      type: watchListConstants.REMOVE_WATCHLIST_SUCCESS,\r\n      postId,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: watchListConstants.REMOVE_WATCHLIST_FAILURE,\r\n      error,\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}