{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/components/_shared/Alert.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { alertActions } from '../../actions';\nimport { Button, Modal } from 'semantic-ui-react';\n\nclass Alert extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      header,\n      content\n    } = this.props;\n    const showAlert = Boolean(header || content);\n    return /*#__PURE__*/React.createElement(Modal, {\n      open: showAlert,\n      onClose: this.props.closeAlert,\n      closeIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, header), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, content)), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.closeAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, \"Ok\")));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    type,\n    header,\n    content\n  } = state.alert;\n  return {\n    type,\n    header,\n    content\n  };\n}\n\nconst actionCreators = {\n  closeAlert: alertActions.clear\n};\nconst connectedAlert = connect(mapState, actionCreators)(Alert);\nexport { connectedAlert as Alert };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/components/_shared/Alert.jsx"],"names":["React","Component","connect","alertActions","Button","Modal","Alert","state","render","header","content","props","showAlert","Boolean","closeAlert","mapState","type","alert","actionCreators","clear","connectedAlert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB,EADkB;AAAA;;AAE1BC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,KAAKC,KAAjC;AACA,UAAMC,SAAS,GAAGC,OAAO,CAACJ,MAAM,IAAIC,OAAX,CAAzB;AACA,wBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,SAAb;AAAwB,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,UAA5C;AAAwD,MAAA,SAAS,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeL,MAAf,CADJ,eAEI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,OAAN,CADJ,CAFJ,eAKI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWG,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CALJ,CADJ;AAWH;;AAhByB;;AAmB9B,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;AACrB,QAAM;AAAES,IAAAA,IAAF;AAAQP,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA4BH,KAAK,CAACU,KAAxC;AACA,SAAO;AAAED,IAAAA,IAAF;AAAQP,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAAP;AACH;;AAED,MAAMQ,cAAc,GAAG;AACnBJ,EAAAA,UAAU,EAAEX,YAAY,CAACgB;AADN,CAAvB;AAIA,MAAMC,cAAc,GAAGlB,OAAO,CAACa,QAAD,EAAWG,cAAX,CAAP,CAAkCZ,KAAlC,CAAvB;AAEA,SAASc,cAAc,IAAId,KAA3B","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { alertActions } from '../../actions';\r\nimport { Button, Modal } from 'semantic-ui-react';\r\n\r\nclass Alert extends Component {\r\n    state = {};\r\n    render() {\r\n        const { header, content } = this.props;\r\n        const showAlert = Boolean(header || content);\r\n        return (\r\n            <Modal open={showAlert} onClose={this.props.closeAlert} closeIcon>\r\n                <Modal.Header>{header}</Modal.Header>\r\n                <Modal.Content>\r\n                    <pre>{content}</pre>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={this.props.closeAlert}>Ok</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { type, header, content } = state.alert;\r\n    return { type, header, content };\r\n}\r\n\r\nconst actionCreators = {\r\n    closeAlert: alertActions.clear,\r\n};\r\n\r\nconst connectedAlert = connect(mapState, actionCreators)(Alert);\r\n\r\nexport { connectedAlert as Alert };\r\n"]},"metadata":{},"sourceType":"module"}