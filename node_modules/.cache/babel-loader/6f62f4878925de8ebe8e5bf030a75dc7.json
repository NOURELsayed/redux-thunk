{"ast":null,"code":"import { validatorConstants } from '../constants';\nimport { registerConstants } from \"../constants\";\nconst initialState = {\n  valid: false,\n  errors: {}\n};\nexport function validation(state = initialState, action) {\n  switch (action.type) {\n    case validatorConstants.FORM_VALIDATE_SUCCESS:\n      return { ...state,\n        valid: true\n      };\n\n    case validatorConstants.FORM_VALIDATE_FAILURE:\n      return { ...state,\n        errors: Object.assign(action.errors, state.errors)\n      };\n\n    case validatorConstants.INPUT_VALIDATE_SUCCESS:\n      const errors = { ...state.errors\n      };\n      delete errors[action.input];\n      return { ...state,\n        errors\n      };\n\n    case validatorConstants.INPUT_VALIDATE_FAILURE:\n      return { ...state,\n        errors: Object.assign(action.errors, state.errors)\n      };\n\n    case validatorConstants.CLEAR:\n      return {\n        valid: false,\n        errors: {}\n      };\n\n    case registerConstants.RESET_OTP_ERROR:\n      return {\n        valid: false,\n        errors: {}\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/reducers/validator.reducer.js"],"names":["validatorConstants","registerConstants","initialState","valid","errors","validation","state","action","type","FORM_VALIDATE_SUCCESS","FORM_VALIDATE_FAILURE","Object","assign","INPUT_VALIDATE_SUCCESS","input","INPUT_VALIDATE_FAILURE","CLEAR","RESET_OTP_ERROR"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,cAAjC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAE,KAAR;AAAgBC,EAAAA,MAAM,EAAE;AAAxB,CAArB;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAAK,GAAGJ,YAA5B,EAA0CK,MAA1C,EAAkD;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,kBAAkB,CAACS,qBAAxB;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAWH,QAAAA,KAAK,EAAE;AAAlB,OAAP;;AACF,SAAKH,kBAAkB,CAACU,qBAAxB;AACE,aAAO,EAAC,GAAGJ,KAAJ;AAAWF,QAAAA,MAAM,EAAEO,MAAM,CAACC,MAAP,CAAcL,MAAM,CAACH,MAArB,EAA6BE,KAAK,CAACF,MAAnC;AAAnB,OAAP;;AACF,SAAKJ,kBAAkB,CAACa,sBAAxB;AACE,YAAMT,MAAM,GAAG,EAAC,GAAGE,KAAK,CAACF;AAAV,OAAf;AACA,aAAOA,MAAM,CAACG,MAAM,CAACO,KAAR,CAAb;AACA,aAAO,EAAC,GAAGR,KAAJ;AAAWF,QAAAA;AAAX,OAAP;;AACF,SAAKJ,kBAAkB,CAACe,sBAAxB;AACE,aAAO,EAAC,GAAGT,KAAJ;AAAWF,QAAAA,MAAM,EAAEO,MAAM,CAACC,MAAP,CAAcL,MAAM,CAACH,MAArB,EAA6BE,KAAK,CAACF,MAAnC;AAAnB,OAAP;;AACF,SAAKJ,kBAAkB,CAACgB,KAAxB;AACE,aAAO;AAACb,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAP;;AACF,SAAKH,iBAAiB,CAACgB,eAAvB;AACE,aAAO;AAACd,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAP;;AACF;AACE,aAAOE,KAAP;AAhBJ;AAkBD","sourcesContent":["import {validatorConstants} from '../constants';\r\nimport { registerConstants } from \"../constants\";\r\n\r\nconst initialState = {valid: false , errors: {}};\r\n\r\nexport function validation(state = initialState, action) {\r\n  switch (action.type) {\r\n    case validatorConstants.FORM_VALIDATE_SUCCESS:\r\n      return {...state, valid: true};\r\n    case validatorConstants.FORM_VALIDATE_FAILURE:\r\n      return {...state, errors: Object.assign(action.errors, state.errors)};\r\n    case validatorConstants.INPUT_VALIDATE_SUCCESS:\r\n      const errors = {...state.errors};\r\n      delete errors[action.input];\r\n      return {...state, errors};\r\n    case validatorConstants.INPUT_VALIDATE_FAILURE:\r\n      return {...state, errors: Object.assign(action.errors, state.errors)};\r\n    case validatorConstants.CLEAR:\r\n      return {valid: false, errors: {}};\r\n    case registerConstants.RESET_OTP_ERROR:\r\n      return {valid: false, errors: {}};\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}