{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Legal/tremsConditionsNavbar.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Image, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { Link } from \"react-router-dom\";\nimport { userActions } from \"../../actions\";\nimport { imageUrl } from \"../LandingPage/config\";\nimport \"./style.css\";\n\nclass NavBar extends Component {\n  componentDidMount() {\n    document.body.dir = i18n.dir();\n  }\n\n  changeLanguage(language) {\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\n  }\n\n  render() {\n    const language = localStorage.getItem(\"i18nextLng\");\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Segment, {\n      className: `TermsConditionsnavbarContainer ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `basicNavbar ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/welcome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Image, {\n      src: language === \"ar\" ? `${imageUrl}/landing-page/ar-header-logo@3x-min.png` : `${imageUrl}/landing-page/Header-Logo-min.png`,\n      className: `Navbarlogo ${language}`,\n      alt: \"Navbarlogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: `navbarMobileButton ${language}`,\n      onClick: () => this.changeLanguage(this.props.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, t(\"landingPage:navbarButton\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `Navbartitles ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, this.props.subtitle)));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    language\n  } = state.users;\n  return {\n    language\n  };\n}\n\nconst actionCreators = {\n  changeLanguage: userActions.setLanguage\n};\nconst connectedNavBar = connect(mapState, actionCreators)(withTranslation(\"landingPage\")(NavBar));\nexport { connectedNavBar as NavBar };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Legal/tremsConditionsNavbar.jsx"],"names":["React","Component","Segment","Image","Button","connect","withTranslation","i18n","Link","userActions","imageUrl","NavBar","componentDidMount","document","body","dir","changeLanguage","language","props","render","localStorage","getItem","t","title","subtitle","mapState","state","users","actionCreators","setLanguage","connectedNavBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAuC,mBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,aAAP;;AAEA,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAC7BW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,GAAoBR,IAAI,CAACQ,GAAL,EAApB;AACD;;AACDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AACvB,SAAKC,KAAL,CAAWF,cAAX,CAA0BC,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,IAArD;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,UAAMF,QAAQ,GAAGG,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAQ,KAAKJ,KAAnB;AACA,wBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAG,kCAAiCD,QAAS,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,eAAcA,QAAS,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqB,oBAAC,KAAD;AACjB,MAAA,GAAG,EACDA,QAAQ,KAAK,IAAb,GACK,GAAEP,QAAS,yCADhB,GAEK,GAAEA,QAAS,mCAJD;AAMjB,MAAA,SAAS,EAAG,cAAaO,QAAS,EANjB;AAOjB,MAAA,GAAG,EAAC,YAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CADA,eAWE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAG,sBAAqBA,QAAS,EAD5C;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKD,cAAL,CAAoB,KAAKE,KAAL,CAAWD,QAA/B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGK,CAAC,CAAC,0BAAD,CAHJ,CAXF,CADF,eAkBE;AAAK,MAAA,SAAS,EAAG,gBAAeL,QAAS,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWK,KAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKL,KAAL,CAAWM,QAAlB,CAFF,CAlBF,CADF;AAyBD;;AAnC4B;;AAqC/B,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAET,IAAAA;AAAF,MAAeS,KAAK,CAACC,KAA3B;AACA,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACD;;AAED,MAAMW,cAAc,GAAG;AACrBZ,EAAAA,cAAc,EAAEP,WAAW,CAACoB;AADP,CAAvB;AAGA,MAAMC,eAAe,GAAGzB,OAAO,CAC7BoB,QAD6B,EAE7BG,cAF6B,CAAP,CAGtBtB,eAAe,CAAC,aAAD,CAAf,CAA+BK,MAA/B,CAHsB,CAAxB;AAIA,SAASmB,eAAe,IAAInB,MAA5B","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userActions } from \"../../actions\";\r\nimport { imageUrl } from \"../LandingPage/config\";\r\nimport \"./style.css\";\r\n\r\nclass NavBar extends Component {\r\n  componentDidMount() {\r\n    document.body.dir = i18n.dir();\r\n  }\r\n  changeLanguage(language) {\r\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\r\n  }\r\n  render() {\r\n    const language = localStorage.getItem(\"i18nextLng\");\r\n    const { t } = this.props;\r\n    return (\r\n      <Segment className={`TermsConditionsnavbarContainer ${language}`}>\r\n        <div className={`basicNavbar ${language}`}>\r\n        <Link to=\"/welcome\"> <Image\r\n            src={\r\n              language === \"ar\"\r\n                ? `${imageUrl}/landing-page/ar-header-logo@3x-min.png`\r\n                : `${imageUrl}/landing-page/Header-Logo-min.png`\r\n            }\r\n            className={`Navbarlogo ${language}`}\r\n            alt=\"Navbarlogo\"\r\n\r\n          /></Link> \r\n          <Button\r\n            className={`navbarMobileButton ${language}`}\r\n            onClick={() => this.changeLanguage(this.props.language)}>\r\n            {t(\"landingPage:navbarButton\")}\r\n          </Button>\r\n        </div>\r\n        <div className={`Navbartitles ${language}`}>\r\n          <h4>{this.props.title}</h4>\r\n          <span>{this.props.subtitle}</span>\r\n        </div>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state) {\r\n  const { language } = state.users;\r\n  return { language };\r\n}\r\n\r\nconst actionCreators = {\r\n  changeLanguage: userActions.setLanguage,\r\n};\r\nconst connectedNavBar = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withTranslation(\"landingPage\")(NavBar));\r\nexport { connectedNavBar as NavBar };\r\n"]},"metadata":{},"sourceType":"module"}