{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/SearchPage/SearchPage.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Container, Card, Image, Placeholder, Segment, Input, Popup, Button, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { SearchInput } from \"../../components/Search/SearchInput\";\nimport { Filters } from \"./Filters\";\nimport { imageUrl } from \"../../config\";\nimport Slider from \"react-slick\";\nimport { onSale, calculatePrice } from '../../helpers';\nimport DiscountCard from '../../components/Post/DiscountCard';\nimport { searchActions } from \"../../actions\";\n\nclass SearchPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      priceFilter: \" \"\n    };\n\n    this.handlePriceFilterChange = (e, data) => {\n      this.setState({\n        priceFilter: data.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      const {\n        priceFilter\n      } = this.state;\n      if (priceFilter !== \" \") this.props.maxPriceFilterChanged(priceFilter);\n    };\n\n    this.finalPrice = ({\n      price,\n      discount\n    }) => onSale(discount) ? calculatePrice(price, discount) : price;\n\n    this.renderImages = post => {\n      const settings = {\n        dots: false,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false,\n        adaptiveHeight: false\n      };\n      return /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }), post.images.map(image => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: image,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          style: {\n            height: 200,\n            width: 250\n          },\n          centered: true,\n          src: `${imageUrl}/${image}`,\n          rounded: true,\n          wrapped: true,\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        }));\n      }));\n    };\n\n    this.getPostsFilters = (posts, filters) => {\n      if (posts) {\n        posts.forEach(post => {\n          const {\n            data\n          } = post.english;\n\n          for (let parameter in data) {\n            if (parameter !== \"description\") {\n              let filter = null;\n\n              for (let i = 0; i < filters.length; i++) {\n                if (filters[i].name === parameter) {\n                  filter = filters[i];\n                  break;\n                }\n              }\n\n              if (!filter) {\n                filter = {\n                  name: parameter,\n                  values: []\n                };\n                filters.push(filter);\n              }\n\n              if (!filter.values.includes(data[parameter])) {\n                filter.values.push(data[parameter]);\n              }\n            }\n          }\n        });\n      }\n\n      return {\n        filters\n      };\n    };\n\n    this.getFilters = posts => {\n      let filters = [];\n      ({\n        filters\n      } = this.getPostsFilters(posts, filters));\n      return filters;\n    };\n  }\n\n  filterPosts(posts, filters) {\n    //Array1 for filtering by price\n    //Array2 for filtering by other filters\n    var theMightyArray = posts;\n    var array1 = [];\n    var array2 = []; //If there are no filters, return the normal search results\n\n    if (!filters || Object.keys(filters).length === 0) {\n      return theMightyArray;\n    } else {\n      // if there is a max price entered by user; check if price entered by user is greated than or equal the item price and filter it in\n      if (filters[0] && filters[0].values[0] !== \"\") {\n        array1 = theMightyArray.filter(post => {\n          const price = this.finalPrice(post);\n\n          if (parseInt(filters[0].values[0]) >= price) {\n            return true;\n          }\n\n          return false;\n        });\n        theMightyArray = array1;\n      } //Filter by other filters; colors,size,etc..\n\n\n      array2 = theMightyArray.filter(post => {\n        const {\n          data\n        } = post.english;\n\n        for (let property in data) {\n          if (filters[property] && filters[property].includes(data[property])) {\n            return true;\n          }\n        }\n\n        return false;\n      }); //Very important: this if condition enables both price and normal filters to work together; it is our only hope to prevent clashes\n\n      if (array2.length !== 0) {\n        theMightyArray = array2;\n      }\n\n      return theMightyArray;\n    }\n  }\n\n  render() {\n    const loading = this.props.isLoading;\n    const {\n      keyword\n    } = this.props.match.params;\n    const {\n      cookies\n    } = this.props;\n    const posts = this.filterPosts(this.props.status.searchResults, this.props.status.filters);\n\n    if (this.state.priceFilter === \"\" && posts.length === 0) {\n      window.location.reload();\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchInput, {\n      cookies: cookies,\n      searchKeyWordURL: keyword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Filters, {\n      filters: this.getFilters(posts),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui action input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Maximum Price\",\n      type: \"number\",\n      onChange: this.handlePriceFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Popup, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        className: \"ui button\",\n        icon: true,\n        onClick: this.handleSubmit,\n        attached: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      })),\n      content: \"Filter by Price\",\n      position: \"bottom center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, posts && posts.length > 0 ? /*#__PURE__*/React.createElement(Card.Group, {\n      centered: true,\n      itemsPerRow: 3,\n      stackable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, posts.map(post => /*#__PURE__*/React.createElement(Card, {\n      key: post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Placeholder.Image, {\n      rectangular: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(Link, {\n      style: {\n        height: 200\n      },\n      to: `/post/${post._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, this.renderImages(post)), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Placeholder.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Placeholder.Line, {\n      length: \"very short\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Placeholder.Line, {\n      length: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Placeholder.Paragraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Placeholder.Line, {\n      length: \"short\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 31\n      }\n    }))) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, onSale(post.discount) ? /*#__PURE__*/React.createElement(DiscountCard, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }\n    }, `${post.title}`), post.sellingMethod.toLowerCase().includes('buynow') ? /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 37\n      }\n    }, `${post.price} EGP`) : /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 84\n      }\n    }, \" Auction Only \")), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, \"Remaining \", post.availableQuantity, \" From\", \" \", post.originalQuantity)))))) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \"No posts found!\")))));\n  }\n\n}\n\nfunction mapState(state, ownProps) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    searchKeyWord,\n    searchResults,\n    isLoading,\n    filters\n  } = state.search;\n  return {\n    status: {\n      user,\n      searchKeyWord,\n      isLoading,\n      searchResults,\n      filters\n    },\n    cookies: ownProps.cookies\n  };\n}\n\nconst actionCreators = {\n  maxPriceFilterChanged: searchActions.maxPriceFilterChanged,\n  resetAllFilters: searchActions.resetAllFilters\n};\nconst connectedSearchPage = connect(mapState, actionCreators)(SearchPage);\nexport { SearchPage as SearchPageContainer, connectedSearchPage as SearchPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/SearchPage/SearchPage.jsx"],"names":["React","Component","Fragment","connect","Grid","Container","Card","Image","Placeholder","Segment","Input","Popup","Button","Icon","Link","SearchInput","Filters","imageUrl","Slider","onSale","calculatePrice","DiscountCard","searchActions","SearchPage","state","priceFilter","handlePriceFilterChange","e","data","setState","value","handleSubmit","props","maxPriceFilterChanged","finalPrice","price","discount","renderImages","post","settings","dots","autoplay","autoplaySpeed","infinite","speed","slidesToShow","slidesToScroll","arrows","adaptiveHeight","images","map","image","height","width","getPostsFilters","posts","filters","forEach","english","parameter","filter","i","length","name","values","push","includes","getFilters","filterPosts","theMightyArray","array1","array2","Object","keys","parseInt","property","render","loading","isLoading","keyword","match","params","cookies","status","searchResults","window","location","reload","_id","title","sellingMethod","toLowerCase","availableQuantity","originalQuantity","mapState","ownProps","user","authentication","searchKeyWord","search","actionCreators","resetAllFilters","connectedSearchPage","SearchPageContainer"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Card,\r\n  Image,\r\n  Placeholder,\r\n  Segment,\r\n  Input,\r\n  Popup,\r\n  Button,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SearchInput } from \"../../components/Search/SearchInput\";\r\nimport { Filters } from \"./Filters\";\r\nimport { imageUrl } from \"../../config\";\r\nimport Slider from \"react-slick\";\r\nimport { onSale, calculatePrice } from '../../helpers';\r\nimport DiscountCard from '../../components/Post/DiscountCard';\r\nimport { searchActions } from \"../../actions\";\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    priceFilter: \" \",\r\n  };\r\n\r\n  handlePriceFilterChange = (e, data) => {\r\n    this.setState({ priceFilter: data.value });\r\n  };\r\n\r\n  //sets the max price filter value\r\n  handleSubmit = (e) => {\r\n    const { priceFilter } = this.state;\r\n    if(priceFilter !== \" \")\r\n    this.props.maxPriceFilterChanged(priceFilter);\r\n  };\r\n\r\n  finalPrice = ({ price, discount }) =>\r\n    onSale(discount) ? calculatePrice(price, discount) : price;\r\n\r\n\r\n    filterPosts(posts, filters) {\r\n      //Array1 for filtering by price\r\n      //Array2 for filtering by other filters\r\n      var theMightyArray = posts;\r\n      var array1 = [];\r\n      var array2 = [];\r\n  \r\n      //If there are no filters, return the normal search results\r\n      if (!filters || Object.keys(filters).length === 0) {\r\n        return theMightyArray;\r\n      } else {\r\n        // if there is a max price entered by user; check if price entered by user is greated than or equal the item price and filter it in\r\n        if (filters[0] && filters[0].values[0] !== \"\") {\r\n          array1 = theMightyArray.filter((post) => {\r\n            const price = this.finalPrice(post);\r\n            if (parseInt(filters[0].values[0]) >= price) {\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n  \r\n          theMightyArray = array1;\r\n        }\r\n        //Filter by other filters; colors,size,etc..\r\n        array2 = theMightyArray.filter((post) => {\r\n          const { data } = post.english;\r\n          for (let property in data) {\r\n            if (filters[property] && filters[property].includes(data[property])) {\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        });\r\n  \r\n        //Very important: this if condition enables both price and normal filters to work together; it is our only hope to prevent clashes\r\n        if (array2.length !== 0) {\r\n          theMightyArray = array2;\r\n        }\r\n  \r\n        return theMightyArray;\r\n      }\r\n    }\r\n\r\n  renderImages = (post) => {\r\n    const settings = {\r\n      dots: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 5000,\r\n      infinite: true,\r\n      speed: 1000,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      arrows: false,\r\n      adaptiveHeight: false,\r\n    };\r\n    return (\r\n      <Slider {...settings}>\r\n        {post.images.map((image) => {\r\n          return (\r\n            <div key={image}>\r\n              <Image\r\n                style={{ height: 200, width: 250 }}\r\n                centered\r\n                src={`${imageUrl}/${image}`}\r\n                rounded\r\n                wrapped\r\n                fluid\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  getPostsFilters = (posts, filters) => {\r\n    if (posts) {\r\n      posts.forEach((post) => {\r\n        const { data } = post.english;\r\n        for (let parameter in data) {\r\n          if (parameter !== \"description\") {\r\n            let filter = null;\r\n            for (let i = 0; i < filters.length; i++) {\r\n              if (filters[i].name === parameter) {\r\n                filter = filters[i];\r\n                break;\r\n              }\r\n            }\r\n            if (!filter) {\r\n              filter = { name: parameter, values: [] };\r\n              filters.push(filter);\r\n            }\r\n            if (!filter.values.includes(data[parameter])) {\r\n              filter.values.push(data[parameter]);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return { filters };\r\n  };\r\n\r\n\r\n  getFilters = (posts) => {\r\n    let filters = [];\r\n    ({ filters } = this.getPostsFilters(posts, filters));\r\n    return filters;\r\n  };\r\n\r\n  render() {\r\n  \r\n   \r\n    const loading = this.props.isLoading;\r\n    const { keyword } = this.props.match.params;\r\n    const { cookies } = this.props;\r\n\r\n\r\n    const posts = this.filterPosts(\r\n      this.props.status.searchResults,\r\n      this.props.status.filters\r\n    );\r\n\r\n    if (this.state.priceFilter === \"\" && posts.length === 0) {\r\n      window.location.reload();\r\n    }\r\n    return (\r\n      <Container>\r\n        <Grid columns={1}>\r\n          <Grid.Column>\r\n          <SearchInput cookies={cookies} searchKeyWordURL={keyword} />\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Grid>\r\n          <Grid.Row>\r\n          <Grid.Column width={4}>\r\n              <Segment>\r\n                <Filters filters={this.getFilters(posts)} />\r\n              </Segment>\r\n              <Segment>\r\n                <div className='ui action input'>\r\n                  <Input\r\n                    placeholder='Maximum Price'\r\n                    type='number'\r\n                    onChange={this.handlePriceFilterChange}\r\n                  />\r\n\r\n                  <Popup\r\n                    trigger={\r\n                      <Button\r\n                        className='ui button'\r\n                        icon\r\n                        onClick={this.handleSubmit}\r\n                        attached='right'\r\n                      >\r\n                        <Icon name='filter' />\r\n                      </Button>\r\n                    }\r\n                    content='Filter by Price'\r\n                    position='bottom center'\r\n                  />\r\n                </div>\r\n              </Segment>\r\n            </Grid.Column>\r\n            <Grid.Column width={12}>\r\n              {posts && posts.length > 0 ? (\r\n                <Card.Group centered itemsPerRow={3} stackable>\r\n                  {posts.map((post) => (\r\n                    <Card key={post._id}>\r\n                      {loading ? (\r\n                        <Placeholder>\r\n                          <Placeholder.Image rectangular />\r\n                        </Placeholder>\r\n                      ) : (\r\n                        <Link style={{ height: 200 }} to={`/post/${post._id}`}>\r\n                          {this.renderImages(post)}\r\n                        </Link>\r\n                      )}\r\n                      <Card.Content>\r\n                        {loading ? (\r\n                          <Placeholder>\r\n                            <Placeholder.Header>\r\n                              <Placeholder.Line length=\"very short\" />\r\n                              <Placeholder.Line length=\"medium\" />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                              <Placeholder.Line length=\"short\" />\r\n                            </Placeholder.Paragraph>\r\n                          </Placeholder>\r\n                        ) : (\r\n                          <Fragment>\r\n                            {\r\n                              onSale(post.discount) ?\r\n                              <DiscountCard post={post} />\r\n                              :\r\n                              <Fragment>\r\n                                <Card.Header>{`${post.title}`}</Card.Header>\r\n                                  { \r\n                                    post.sellingMethod.toLowerCase().includes('buynow') ?\r\n                                    <Card.Meta>{`${post.price} EGP`}</Card.Meta> : <Card.Meta> Auction Only </Card.Meta> \r\n                                  }\r\n                              </Fragment>\r\n                            }\r\n                            <Card.Description>\r\n                              Remaining {post.availableQuantity} From{\" \"}\r\n                              {post.originalQuantity}\r\n                            </Card.Description>\r\n                          </Fragment>\r\n                        )}\r\n                      </Card.Content>\r\n                    </Card>\r\n                  ))}\r\n                </Card.Group>\r\n              ) : (\r\n                <h1>No posts found!</h1>\r\n              )}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state, ownProps) {\r\n  const { user } = state.authentication;\r\n  const { searchKeyWord, searchResults, isLoading, filters } = state.search;\r\n  return {\r\n    status: { user, searchKeyWord, isLoading, searchResults, filters },\r\n    cookies: ownProps.cookies,\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  maxPriceFilterChanged: searchActions.maxPriceFilterChanged,\r\n  resetAllFilters: searchActions.resetAllFilters,\r\n};\r\n\r\nconst connectedSearchPage = connect(mapState, actionCreators)(SearchPage);\r\n\r\nexport { SearchPage as SearchPageContainer, connectedSearchPage as SearchPage };\r\n"]},"metadata":{},"sourceType":"module"}