{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Review/UpdateReviewPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Header, Message, Segment, Rating, Card, Label } from \"semantic-ui-react\";\nimport { reviewActions } from '../../actions';\nimport { history } from '../../helpers';\nexport class UpdateReviewContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      feedback: 0,\n      text: '',\n      sellerRating: {},\n      reviewer: '',\n      revieweeType: '',\n      order: ''\n    };\n\n    this.toggleThumb = feedback => {\n      console.log(feedback);\n      this.setState({\n        feedback\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.checkRating = (e, {\n      name,\n      rating\n    }) => {\n      const body = this.state.sellerRating;\n      body[name] = rating;\n      this.setState({\n        sellerRating: body\n      });\n    };\n\n    this.handleUpdate = async () => {\n      const {\n        feedback,\n        sellerRating,\n        text,\n        id,\n        order\n      } = this.state;\n      const body = {\n        feedback,\n        sellerRating,\n        text\n      };\n      await this.props.updateReview(id, order, body);\n    };\n\n    this.handleBack = async () => {\n      history.push(`/order/${this.state.order}`);\n    };\n  }\n\n  async componentDidMount() {\n    let reviewBody;\n\n    if (this.props.location.review) {\n      localStorage.setItem('reviewBody', JSON.stringify(this.props.location.review));\n      reviewBody = this.props.location.review;\n    } else {\n      reviewBody = localStorage.getItem('reviewBody');\n      if (reviewBody) reviewBody = JSON.parse(reviewBody);else history.push('/orders');\n    }\n\n    if (reviewBody) {\n      const {\n        feedback,\n        text,\n        sellerRating,\n        reviewer,\n        revieweeType,\n        _id,\n        order\n      } = reviewBody;\n      this.setState({\n        id: _id,\n        feedback,\n        text,\n        sellerRating,\n        reviewer,\n        revieweeType,\n        order\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    localStorage.removeItem('reviewBody');\n  }\n\n  render() {\n    const {\n      feedback,\n      text,\n      sellerRating,\n      reviewer,\n      revieweeType\n    } = this.state;\n    const {\n      user,\n      loggedIn\n    } = this.props;\n    return loggedIn && reviewer === user.id ? /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Review Details\"), alert && alert.header && /*#__PURE__*/React.createElement(Message, {\n      error: alert.type === 'error',\n      success: alert.type === 'success',\n      header: alert.header,\n      content: alert.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `${feedback === 1 ? 'inverted' : ''} bordered green big thumbs up outline link icon`,\n      onClick: () => this.toggleThumb(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: `${feedback === -1 ? 'inverted' : ''} bordered red big thumbs down outline link icon`,\n      onClick: () => this.toggleThumb(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }), revieweeType === 'seller' && /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, \"Post Description: \"), /*#__PURE__*/React.createElement(Rating, {\n      icon: \"star\",\n      defaultRating: sellerRating.postDescription,\n      maxRating: 5,\n      size: \"large\",\n      name: \"postDescription\",\n      onRate: this.checkRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, \"Communication: \"), /*#__PURE__*/React.createElement(Rating, {\n      icon: \"star\",\n      defaultRating: sellerRating.communication,\n      maxRating: 5,\n      size: \"large\",\n      name: \"communication\",\n      onRate: this.checkRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.TextArea, {\n      name: \"text\",\n      value: text,\n      placeholder: \"Write a Review\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      onClick: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, \"Update Review\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, \"Back To Order\"))))) : /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"You are not authorized to view this page\");\n  }\n\n}\n\nfunction mapState(state, ownProps) {\n  const {\n    user,\n    loggedIn\n  } = state.authentication;\n  return {\n    user,\n    loggedIn,\n    cookies: ownProps.cookies\n  };\n}\n\nconst actionCreators = {\n  updateReview: reviewActions.updateReview\n};\nconst connectedUpdateReview = connect(mapState, actionCreators)(UpdateReviewContainer);\nexport { connectedUpdateReview as UpdateReview };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Review/UpdateReviewPage.jsx"],"names":["React","Component","connect","Button","Form","Grid","Header","Message","Segment","Rating","Card","Label","reviewActions","history","UpdateReviewContainer","state","id","feedback","text","sellerRating","reviewer","revieweeType","order","toggleThumb","console","log","setState","handleChange","e","name","value","checkRating","rating","body","handleUpdate","props","updateReview","handleBack","push","componentDidMount","reviewBody","location","review","localStorage","setItem","JSON","stringify","getItem","parse","_id","componentWillUnmount","removeItem","render","user","loggedIn","height","maxWidth","alert","header","type","content","postDescription","communication","mapState","ownProps","authentication","cookies","actionCreators","connectedUpdateReview","UpdateReview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, Grid, Header, Message, Segment, Rating, Card, Label } from \"semantic-ui-react\";\r\nimport { reviewActions } from '../../actions';\r\nimport { history } from '../../helpers';\r\n\r\nexport class UpdateReviewContainer extends Component {\r\n    state = { id: '', feedback: 0, text: '', sellerRating: {}, reviewer: '', revieweeType: '', order: '' };\r\n\r\n    async componentDidMount() {\r\n        let reviewBody;\r\n        if(this.props.location.review){\r\n            localStorage.setItem('reviewBody', JSON.stringify(this.props.location.review));\r\n            reviewBody = this.props.location.review;\r\n        } else {\r\n            reviewBody = localStorage.getItem('reviewBody');\r\n            if(reviewBody) reviewBody = JSON.parse(reviewBody); else history.push('/orders');\r\n        }\r\n\r\n        if (reviewBody) {\r\n            const { feedback, text, sellerRating, reviewer, revieweeType, _id, order } = reviewBody;\r\n            this.setState({ id: _id, feedback, text, sellerRating, reviewer, revieweeType, order });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.removeItem('reviewBody');\r\n    }\r\n\r\n    toggleThumb = (feedback) => {\r\n        console.log(feedback);\r\n        this.setState({ feedback })\r\n    }\r\n\r\n    handleChange = (e, {name, value}) => {\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    checkRating = (e, { name, rating }) => {\r\n        const body = this.state.sellerRating;\r\n        body[name] = rating;\r\n        \r\n        this.setState({ sellerRating: body });\r\n    }\r\n    \r\n    handleUpdate = async () => {\r\n        const { feedback, sellerRating, text, id, order } = this.state;\r\n        const body = {\r\n            feedback,\r\n            sellerRating,\r\n            text,\r\n        };\r\n\r\n        await this.props.updateReview(id, order, body);\r\n    }\r\n\r\n    handleBack = async () => {\r\n        history.push(`/order/${this.state.order}`)\r\n    }\r\n\r\n    render() {\r\n        const { feedback, text, sellerRating, reviewer, revieweeType } = this.state;\r\n        const { user, loggedIn } = this.props;\r\n        return (\r\n            loggedIn && reviewer === user.id ?\r\n                <Grid textAlign='center' style={{height: '100vh'}} verticalAlign='middle'>\r\n                    <Grid.Column style={{maxWidth: 450}}>\r\n                        <Header as='h2' color='teal' textAlign='center'>Review Details</Header>\r\n                        {alert && alert.header &&\r\n                        <Message\r\n                            error={alert.type === 'error'}\r\n                            success={alert.type === 'success'}\r\n                            header={alert.header}\r\n                            content={alert.content}\r\n                        />}\r\n\r\n                        <Form  size='large'>\r\n                            <Segment>\r\n                                <i className={`${feedback === 1? 'inverted' : ''} bordered green big thumbs up outline link icon` }\r\n                                    onClick={() => this.toggleThumb(1)} \r\n                                />\r\n                                <i className={`${feedback === -1? 'inverted' : ''} bordered red big thumbs down outline link icon` }\r\n                                onClick={() => this.toggleThumb(-1)}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                {\r\n                                    revieweeType === 'seller' &&\r\n                                    <Card.Description>\r\n                                        <strong>Post Description: </strong>\r\n                                        <Rating icon='star' defaultRating={sellerRating.postDescription} maxRating={5} size='large' name='postDescription' onRate={ this.checkRating }/>\r\n                                        <br />\r\n                                        <strong>Communication: </strong>\r\n                                        <Rating icon='star' defaultRating={sellerRating.communication} maxRating={5} size='large' name='communication' onRate={ this.checkRating }/>\r\n                                    </Card.Description>\r\n                                }\r\n                                <br />\r\n                                <br />\r\n                                <Form.TextArea \r\n                                    name='text'\r\n                                    value={text}\r\n                                    placeholder='Write a Review'\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <Button color='teal' onClick={this.handleUpdate}>Update Review</Button>\r\n                                <Button onClick={this.handleBack}>Back To Order</Button>\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            : <Label>You are not authorized to view this page</Label>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state, ownProps) {\r\n    const { user, loggedIn } = state.authentication;\r\n\r\n    return { user, loggedIn, cookies: ownProps.cookies };\r\n}\r\n\r\nconst actionCreators = {\r\n    updateReview: reviewActions.updateReview,\r\n};\r\n\r\nconst connectedUpdateReview = connect(mapState, actionCreators)(UpdateReviewContainer);\r\nexport { connectedUpdateReview as UpdateReview };\r\n"]},"metadata":{},"sourceType":"module"}