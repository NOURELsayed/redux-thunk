{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReturnRequest/ReturnedItemPickUpPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header, Label } from 'semantic-ui-react';\nimport { returnRequestsActions, servicePointActions } from '../../actions';\nimport { SelectSPAndTimeSlot } from '../ServicePoint';\nimport { isPickUpDataValid } from \".././ServicePoint/shared\";\nimport * as moment from \"moment\";\n\nclass ReturnedItemPickUpPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      const returnRequestId = this.props.match.params.id;\n      await this.props.getServicePointsData();\n      await this.props.viewReturnRequest(returnRequestId);\n    };\n\n    this.state = {};\n\n    this.handleSubmitPickUpInfo = async () => {\n      const returnRequestId = this.props.match.params.id;\n      const returnReqPickUpInfo = {\n        servicePointId: this.props.servicePointId,\n        arrivalDate: this.props.arrivalDate,\n        arrivalTime: this.props.arrivalTime\n      };\n      await this.props.confirmReturnRequestPickUpInfo(returnRequestId, returnReqPickUpInfo);\n    };\n\n    this.enableConfirmPickup = () => {\n      return isPickUpDataValid(this.props);\n    };\n  }\n\n  formatDate(date) {\n    return moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n  }\n\n  render() {\n    const {\n      currentReturnRequest\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      style: {\n        textAlign: \"center\",\n        padding: '6em 4em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      color: \"grey\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Return Request Pick Up Info \"))), currentReturnRequest.sellerData && currentReturnRequest.sellerData.SP && currentReturnRequest.sellerData.timeSlot ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      style: {\n        padding: '2em 6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: \"huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, \"You Have Already Chosen The Pick Up Info\"))), /*#__PURE__*/React.createElement(Grid.Row, {\n      style: {\n        padding: '2em 8em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Service Point: \", currentReturnRequest.sellerData.SP.name)), /*#__PURE__*/React.createElement(Grid.Row, {\n      style: {\n        padding: '2em 8em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Time Slot: \", this.formatDate(currentReturnRequest.sellerData.timeSlot)))) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      style: {\n        padding: '0em 6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Note that you must pick up the item by yourself\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      onClick: this.handleSubmitPickUpInfo,\n      disabled: !this.enableConfirmPickup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \" Submit Pick Up Info \"))), /*#__PURE__*/React.createElement(Grid.Row, {\n      style: {\n        padding: '2em 6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SelectSPAndTimeSlot, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    personInCharge,\n    authorizedDataConfirmed,\n    authorizedName,\n    authorizedID,\n    authorisedUserId,\n    servicePoints,\n    servicePointId,\n    arrivalDate,\n    arrivalTime\n  } = state.servicePoint;\n  const {\n    currentReturnRequest\n  } = state.returnRequests;\n  return {\n    personInCharge,\n    authorizedDataConfirmed,\n    authorizedName,\n    authorizedID,\n    authorisedUserId,\n    servicePoints,\n    servicePointId,\n    arrivalDate,\n    arrivalTime,\n    currentReturnRequest\n  };\n}\n\nconst actionCreators = {\n  getServicePointsData: servicePointActions.getServicePointsData,\n  confirmReturnRequestPickUpInfo: returnRequestsActions.confirmReturnRequestPickUpInfo,\n  viewReturnRequest: returnRequestsActions.viewReturnRequest\n};\nconst connectedReturnedItemPickUpPage = connect(mapState, actionCreators)(ReturnedItemPickUpPage);\nexport { connectedReturnedItemPickUpPage as ReturnedItemPickUpPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ReturnRequest/ReturnedItemPickUpPage.jsx"],"names":["React","Component","connect","Button","Grid","Header","Label","returnRequestsActions","servicePointActions","SelectSPAndTimeSlot","isPickUpDataValid","moment","ReturnedItemPickUpPage","componentDidMount","returnRequestId","props","match","params","id","getServicePointsData","viewReturnRequest","state","handleSubmitPickUpInfo","returnReqPickUpInfo","servicePointId","arrivalDate","arrivalTime","confirmReturnRequestPickUpInfo","enableConfirmPickup","formatDate","date","format","render","currentReturnRequest","textAlign","padding","sellerData","SP","timeSlot","name","mapState","personInCharge","authorizedDataConfirmed","authorizedName","authorizedID","authorisedUserId","servicePoints","servicePoint","returnRequests","actionCreators","connectedReturnedItemPickUpPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {  Button, Grid, Header, Label } from 'semantic-ui-react';\r\nimport { returnRequestsActions, servicePointActions } from '../../actions';\r\nimport { SelectSPAndTimeSlot } from '../ServicePoint';\r\nimport { isPickUpDataValid } from \".././ServicePoint/shared\";\r\nimport * as moment from \"moment\";\r\n\r\nclass ReturnedItemPickUpPage extends Component {\r\n    componentDidMount= async()=> {\r\n       const returnRequestId = this.props.match.params.id;\r\n\r\n       await this.props.getServicePointsData();\r\n       await this.props.viewReturnRequest(returnRequestId);\r\n     }    \r\n     formatDate(date) {\r\n        return moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\r\n      }\r\n     state = {  }\r\n     handleSubmitPickUpInfo=async()=>{\r\n         const returnRequestId=this.props.match.params.id;\r\n         const returnReqPickUpInfo={\r\n             servicePointId : this.props.servicePointId,\r\n             arrivalDate : this.props.arrivalDate,\r\n             arrivalTime : this.props.arrivalTime,\r\n         }\r\n        await this.props.confirmReturnRequestPickUpInfo(returnRequestId,returnReqPickUpInfo);\r\n     }\r\n     enableConfirmPickup = () => {\r\n        return isPickUpDataValid(this.props);\r\n      };\r\n    render() { \r\n        const {currentReturnRequest}=this.props\r\n        return (\r\n                <Grid>\r\n                    <Grid.Row style={{ textAlign: \"center\" ,padding: '6em 4em' }}>\r\n                        <Grid.Column>\r\n                        <Header as=\"h1\"color='grey' textAlign='center'>\r\n                        Return Request Pick Up Info </Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    {currentReturnRequest.sellerData && \r\n                    currentReturnRequest.sellerData.SP &&\r\n                    currentReturnRequest.sellerData.timeSlot ?(\r\n                        <React.Fragment>\r\n                        <Grid.Row style={{padding: '2em 6em' }}>\r\n                            <Grid.Column> \r\n                            <Label size='huge'>You Have Already Chosen The Pick Up Info</Label>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row style={{padding: '2em 8em' }}>\r\n                            <Label size=\"large\">Service Point: {currentReturnRequest.sellerData.SP.name}</Label>\r\n                        </Grid.Row>\r\n                        <Grid.Row style={{padding: '2em 8em' }}>\r\n                            <Label size=\"large\">Time Slot: {this.formatDate(currentReturnRequest.sellerData.timeSlot)}</Label>\r\n                        </Grid.Row>\r\n                        </React.Fragment>\r\n\r\n                        \r\n                    ):(\r\n                        <React.Fragment>\r\n                    <Grid.Row style={{padding: '0em 6em' }}>\r\n                        <Grid.Column width={8}> \r\n                        <Label size='large'>Note that you must pick up the item by yourself</Label>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={6} style={{ textAlign: \"right\" }}>\r\n                        <Button color='green' onClick={this.handleSubmitPickUpInfo} disabled={!this.enableConfirmPickup()}> Submit Pick Up Info </Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row style={{padding: '2em 6em' }}>\r\n                        <SelectSPAndTimeSlot/>\r\n                    </Grid.Row>\r\n                    </React.Fragment>)}\r\n                </Grid>\r\n          );\r\n    }\r\n}\r\n \r\nfunction mapState(state) {\r\n    const {\r\n        personInCharge,\r\n        authorizedDataConfirmed,\r\n        authorizedName,\r\n        authorizedID,\r\n        authorisedUserId,\r\n        servicePoints,\r\n        servicePointId,\r\n        arrivalDate,\r\n        arrivalTime,\r\n      } = state.servicePoint;\r\n      const {currentReturnRequest} = state.returnRequests\r\n      return {\r\n        personInCharge,\r\n        authorizedDataConfirmed,\r\n        authorizedName,\r\n        authorizedID,\r\n        authorisedUserId,\r\n        servicePoints,\r\n        servicePointId,\r\n        arrivalDate,\r\n        arrivalTime,\r\n        currentReturnRequest\r\n      };    \r\n  }\r\n  \r\nconst actionCreators = {\r\n    getServicePointsData: servicePointActions.getServicePointsData,\r\n    confirmReturnRequestPickUpInfo: returnRequestsActions.confirmReturnRequestPickUpInfo,\r\n    viewReturnRequest: returnRequestsActions.viewReturnRequest,\r\n  };\r\n  \r\n  const connectedReturnedItemPickUpPage = connect(\r\n    mapState,\r\n    actionCreators\r\n  )(ReturnedItemPickUpPage);\r\n  \r\n  export { connectedReturnedItemPickUpPage as ReturnedItemPickUpPage };\r\n"]},"metadata":{},"sourceType":"module"}