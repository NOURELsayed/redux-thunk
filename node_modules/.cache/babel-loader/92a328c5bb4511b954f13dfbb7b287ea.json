{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Transactions/userTransactionsList.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Grid, Menu, Dropdown } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { userActions } from \"../../actions\";\nimport UserTransactionImage from \"../../images/02Icons01Indicators01ForPrintsUp@3x.png\";\nimport IconDown from \"../../images/icon-down@3x.png\";\nimport \"./userTransactionsList.css\";\n\nclass UserTransactionsList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTransactions = userTransactionsList => {\n      return userTransactionsList == null || userTransactionsList.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, \"No posts yet.\") : /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 8,\n        textAlign: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, userTransactionsList.map(transaction => {\n        const timeZone = new Date().getTimezoneOffset();\n        const checkdata = transaction.createdAt;\n        const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n        const transactionTime = timeWitUtc.fromNow();\n        const IconCondition = transaction.value < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"UserTransactionImageBG\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: IconDown,\n          alt: \"IconDown\",\n          className: \"iconDown\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        })) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"UserTransactionImageBG\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: UserTransactionImage,\n          alt: \"usertransaction\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }));\n        return /*#__PURE__*/React.createElement(Segment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"transactionStatus\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }, IconCondition, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"transactionsCardData\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        }, transaction.type), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, transaction.status))), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"transactionsCardData\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, transaction.value), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, transactionTime)))), /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"TransactionCardLine\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Menu, {\n          vertical: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          item: true,\n          text: \"View appointment\",\n          pointing: \"left\",\n          className: \"link item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        })));\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.handleuserTransactionsList();\n  }\n\n  render() {\n    const {\n      userTransactionsList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Transactions\"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, this.renderTransactions(userTransactionsList)));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    userTransactionsList\n  } = state.users;\n  return {\n    userTransactionsList\n  };\n}\n\nconst actionCreators = {\n  handleuserTransactionsList: userActions.userTransactionsList\n};\nconst connecteduserTransactionsList = connect(mapState, actionCreators)(UserTransactionsList);\nexport { connecteduserTransactionsList as UserTransactionsList };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Transactions/userTransactionsList.jsx"],"names":["React","Component","Segment","Grid","Menu","Dropdown","connect","moment","userActions","UserTransactionImage","IconDown","UserTransactionsList","renderTransactions","userTransactionsList","length","map","transaction","timeZone","Date","getTimezoneOffset","checkdata","createdAt","timeWitUtc","utc","utcOffset","transactionTime","fromNow","IconCondition","value","display","justifyContent","type","status","componentDidMount","props","handleuserTransactionsList","render","mapState","state","users","actionCreators","connecteduserTransactionsList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Grid, Menu, Dropdown } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { userActions } from \"../../actions\";\r\nimport UserTransactionImage from \"../../images/02Icons01Indicators01ForPrintsUp@3x.png\";\r\nimport IconDown from \"../../images/icon-down@3x.png\";\r\nimport \"./userTransactionsList.css\";\r\n\r\nclass UserTransactionsList extends Component {\r\n  async componentDidMount() {\r\n    await this.props.handleuserTransactionsList();\r\n  }\r\n\r\n  renderTransactions = (userTransactionsList) => {\r\n    return userTransactionsList == null || userTransactionsList.length === 0 ? (\r\n      <h4>No posts yet.</h4>\r\n    ) : (\r\n      <Grid.Column width={8} textAlign=\"left\">\r\n        {userTransactionsList.map((transaction) => {\r\n          const timeZone = new Date().getTimezoneOffset();\r\n          const checkdata = transaction.createdAt;\r\n          const timeWitUtc = moment\r\n            .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n            .utcOffset(timeZone);\r\n          const transactionTime = timeWitUtc.fromNow();\r\n          const IconCondition =\r\n            transaction.value < 1 ? (\r\n              <div className=\"UserTransactionImageBG\">\r\n                <img src={IconDown} alt=\"IconDown\" className=\"iconDown\" />\r\n              </div>\r\n            ) : (\r\n              <div className=\"UserTransactionImageBG\">\r\n                <img src={UserTransactionImage} alt=\"usertransaction\" />\r\n              </div>\r\n            );\r\n\r\n          return (\r\n            <Segment>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <div className=\"transactionStatus\">\r\n                  {IconCondition}\r\n                  <div>\r\n                    <h4 className=\"transactionsCardData\">{transaction.type}</h4>\r\n                    <span>{transaction.status}</span>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <h4 className=\"transactionsCardData\">\r\n                      {transaction.value}\r\n                    </h4>\r\n                    <span>{transactionTime}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <h1 className=\"TransactionCardLine\"></h1>\r\n              <Menu vertical>\r\n                <Dropdown\r\n                  item\r\n                  text=\"View appointment\"\r\n                  pointing=\"left\"\r\n                  className=\"link item\"\r\n                ></Dropdown>\r\n              </Menu>\r\n            </Segment>\r\n          );\r\n        })}\r\n      </Grid.Column>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { userTransactionsList } = this.props;\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <h1>Transactions</h1>\r\n        <Grid.Row>{this.renderTransactions(userTransactionsList)}</Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { userTransactionsList } = state.users;\r\n  return { userTransactionsList };\r\n}\r\n\r\nconst actionCreators = {\r\n  handleuserTransactionsList: userActions.userTransactionsList,\r\n};\r\n\r\nconst connecteduserTransactionsList = connect(\r\n  mapState,\r\n  actionCreators\r\n)(UserTransactionsList);\r\n\r\nexport { connecteduserTransactionsList as UserTransactionsList };\r\n"]},"metadata":{},"sourceType":"module"}