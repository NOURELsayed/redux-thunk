{"ast":null,"code":"import { httpService } from \"./\";\nimport { apiUrl, phoneCode } from \"../config\";\nexport const userService = {\n  register,\n  submitOTP,\n  resendOTP,\n  registerUnverified,\n  registerByPhone,\n  viewProfile,\n  changePassword,\n  updateEmail,\n  updateMobile,\n  updateAddress,\n  getReviewsAsSeller,\n  getReviewsAsBuyer,\n  getReviewsForOthers,\n  getUserIDByNationalId,\n  getIsUserVerifiedBylId,\n  viewUserPublicDetails,\n  getEmailByToken,\n  getPhoneInviteesByToken,\n  getWonAuction,\n  getRunningAuction,\n  getLostAuction,\n  verifyEmail,\n  resendVerificationMail,\n  verifyUpdatedEmail,\n  getUsernames,\n  getUserByEmail,\n  generateShareableLink,\n  updateUserAccountStatus,\n  userTransactions,\n  userTransactionsList,\n  soldPostsInPostDetails\n};\nconst apiEndpoint = apiUrl + \"/users\";\nconst getUserIdEndpoint = apiEndpoint + \"/user\";\nconst settingsApiEndpoint = apiEndpoint + \"/settings\";\nconst viewProfileApiEndpoint = settingsApiEndpoint + \"/personal\";\nconst changePasswordApiEndpoint = settingsApiEndpoint + \"/password\";\nconst updateEmailApiEndpoint = settingsApiEndpoint + \"/email\";\nconst updateMobileApiEndpoint = settingsApiEndpoint + \"/mobile\";\nconst updateAddressApiEndpoint = settingsApiEndpoint + \"/address\";\nconst reviewsApiEndpoint = apiUrl + \"/review\";\nconst getReviewsAsSellerApiEndpoint = reviewsApiEndpoint + \"/seller\";\nconst getReviewsAsBuyerApiEndpoint = reviewsApiEndpoint + \"/buyer\";\nconst getReviewsForOthersApiEndpoint = reviewsApiEndpoint + \"/left\";\nconst shareableLinkApi = apiUrl + \"/shareableLink\";\nconst userTransactionsWallet = apiUrl + \"/userTransactions/wallet\";\nconst userTransaction = apiUrl + \"/userTransactions\";\n\nfunction verifyEmail(email, token, password) {\n  return httpService.put(`${apiEndpoint}/confirmation/email`, {\n    email,\n    token,\n    password\n  });\n}\n\nfunction verifyUpdatedEmail(email, token) {\n  return httpService.put(`${apiEndpoint}/verifyUpdatedMail`, {\n    email,\n    token\n  });\n}\n\nfunction resendVerificationMail(email) {\n  return httpService.post(`${apiEndpoint}/resend`, {\n    email\n  });\n}\n\nfunction register(user) {\n  const userData = { ...user\n  };\n  userData.phone = {\n    code: phoneCode,\n    number: user.phone\n  };\n  return httpService.post(apiEndpoint, userData);\n}\n\nfunction registerUnverified(user) {\n  const userData = { ...user\n  };\n  userData.phone = {\n    code: phoneCode,\n    number: user.phone\n  };\n  return httpService.post(`${apiEndpoint}/unverified`, userData);\n}\n\nfunction registerByPhone(user) {\n  const userData = { ...user\n  };\n  userData.phone = {\n    code: phoneCode,\n    number: user.phone\n  };\n  return httpService.post(`${apiEndpoint}/byPhone`, userData);\n}\n\nfunction submitOTP(otpCode, phone) {\n  return httpService.post(`${apiEndpoint}/submitOTP`, {\n    otpCode,\n    phone\n  });\n}\n\nfunction resendOTP(phone) {\n  return httpService.post(`${apiEndpoint}/resendOTP`, {\n    phone\n  });\n}\n\nfunction viewProfile() {\n  return httpService.get(viewProfileApiEndpoint);\n}\n\nfunction userTransactions() {\n  return httpService.get(userTransactionsWallet);\n}\n\nfunction userTransactionsList() {\n  return httpService.get(userTransaction);\n}\n\nfunction getWonAuction() {\n  return httpService.get(`${apiUrl}/auctionList/won`);\n}\n\nfunction getLostAuction() {\n  return httpService.get(`${apiUrl}/auctionList/lost`);\n}\n\nfunction getRunningAuction() {\n  return httpService.get(`${apiUrl}/auctionList/Running`);\n}\n\nasync function getEmailByToken(token) {\n  return await httpService.get(`${apiEndpoint}/email/${token}`);\n}\n\nasync function getPhoneInviteesByToken(token) {\n  return await httpService.get(`${apiEndpoint}/phone/${token}`);\n}\n\nfunction changePassword(oldPassword, newPassword) {\n  return httpService.put(changePasswordApiEndpoint, {\n    oldPassword,\n    newPassword\n  });\n}\n\nfunction updateEmail(emailAddress) {\n  return httpService.put(updateEmailApiEndpoint, {\n    address: emailAddress\n  });\n}\n\nfunction updateMobile(code, mobile) {\n  return httpService.put(updateMobileApiEndpoint, {\n    code,\n    mobile\n  });\n}\n\nfunction updateAddress(address) {\n  return httpService.put(updateAddressApiEndpoint, {\n    address\n  });\n}\n\nfunction getReviewsAsSeller(id) {\n  return httpService.get(getReviewsAsSellerApiEndpoint + \"/\" + id);\n}\n\nfunction getReviewsAsBuyer(id) {\n  return httpService.get(getReviewsAsBuyerApiEndpoint + \"/\" + id);\n}\n\nfunction getReviewsForOthers(id) {\n  return httpService.get(getReviewsForOthersApiEndpoint + \"/\" + id);\n}\n\nfunction getUserIDByNationalId(nationalId) {\n  return httpService.get(getUserIdEndpoint + \"/\" + nationalId);\n}\n\nfunction getIsUserVerifiedBylId(userId) {\n  return httpService.get(getUserIdEndpoint + \"/isVerified/\" + userId);\n}\n\nfunction viewUserPublicDetails(userId) {\n  return httpService.get(`${apiEndpoint}/publicDetails/${userId}`);\n}\n\nfunction getUsernames() {\n  return httpService.get(`${apiEndpoint}/usernames`);\n}\n\nfunction getUserByEmail(email) {\n  return httpService.get(`${apiEndpoint}/${email}`);\n}\n\nfunction generateShareableLink() {\n  return httpService.post(`${shareableLinkApi}`);\n}\n\nfunction updateUserAccountStatus(userId, body) {\n  return httpService.put(`${apiEndpoint}/update/accountStatus/${userId}`, body);\n}\n\nfunction soldPostsInPostDetails(userId) {\n  return httpService.get(`${apiEndpoint}/postsSold/${userId}`);\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/services/user.service.js"],"names":["httpService","apiUrl","phoneCode","userService","register","submitOTP","resendOTP","registerUnverified","registerByPhone","viewProfile","changePassword","updateEmail","updateMobile","updateAddress","getReviewsAsSeller","getReviewsAsBuyer","getReviewsForOthers","getUserIDByNationalId","getIsUserVerifiedBylId","viewUserPublicDetails","getEmailByToken","getPhoneInviteesByToken","getWonAuction","getRunningAuction","getLostAuction","verifyEmail","resendVerificationMail","verifyUpdatedEmail","getUsernames","getUserByEmail","generateShareableLink","updateUserAccountStatus","userTransactions","userTransactionsList","soldPostsInPostDetails","apiEndpoint","getUserIdEndpoint","settingsApiEndpoint","viewProfileApiEndpoint","changePasswordApiEndpoint","updateEmailApiEndpoint","updateMobileApiEndpoint","updateAddressApiEndpoint","reviewsApiEndpoint","getReviewsAsSellerApiEndpoint","getReviewsAsBuyerApiEndpoint","getReviewsForOthersApiEndpoint","shareableLinkApi","userTransactionsWallet","userTransaction","email","token","password","put","post","user","userData","phone","code","number","otpCode","get","oldPassword","newPassword","emailAddress","address","mobile","id","nationalId","userId","body"],"mappings":"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","sourcesContent":["import { httpService } from \"./\";\r\nimport { apiUrl, phoneCode } from \"../config\";\r\n\r\nexport const userService = {\r\n  register,\r\n  submitOTP,\r\n  resendOTP,\r\n  registerUnverified,\r\n  registerByPhone,\r\n  viewProfile,\r\n  changePassword,\r\n  updateEmail,\r\n  updateMobile,\r\n  updateAddress,\r\n  getReviewsAsSeller,\r\n  getReviewsAsBuyer,\r\n  getReviewsForOthers,\r\n  getUserIDByNationalId,\r\n  getIsUserVerifiedBylId,\r\n  viewUserPublicDetails,\r\n  getEmailByToken,\r\n  getPhoneInviteesByToken,\r\n  getWonAuction,\r\n  getRunningAuction,\r\n  getLostAuction,\r\n  verifyEmail,\r\n  resendVerificationMail,\r\n  verifyUpdatedEmail,\r\n  getUsernames,\r\n  getUserByEmail,\r\n  generateShareableLink,\r\n  updateUserAccountStatus,\r\n  userTransactions,\r\n  userTransactionsList,\r\n  soldPostsInPostDetails\r\n};\r\n\r\nconst apiEndpoint = apiUrl + \"/users\";\r\nconst getUserIdEndpoint = apiEndpoint + \"/user\";\r\nconst settingsApiEndpoint = apiEndpoint + \"/settings\";\r\nconst viewProfileApiEndpoint = settingsApiEndpoint + \"/personal\";\r\nconst changePasswordApiEndpoint = settingsApiEndpoint + \"/password\";\r\nconst updateEmailApiEndpoint = settingsApiEndpoint + \"/email\";\r\nconst updateMobileApiEndpoint = settingsApiEndpoint + \"/mobile\";\r\nconst updateAddressApiEndpoint = settingsApiEndpoint + \"/address\";\r\n\r\nconst reviewsApiEndpoint = apiUrl + \"/review\";\r\nconst getReviewsAsSellerApiEndpoint = reviewsApiEndpoint + \"/seller\";\r\nconst getReviewsAsBuyerApiEndpoint = reviewsApiEndpoint + \"/buyer\";\r\nconst getReviewsForOthersApiEndpoint = reviewsApiEndpoint + \"/left\";\r\n\r\nconst shareableLinkApi = apiUrl + \"/shareableLink\";\r\nconst userTransactionsWallet = apiUrl + \"/userTransactions/wallet\"\r\nconst userTransaction = apiUrl + \"/userTransactions\"\r\n\r\nfunction verifyEmail(email, token, password) {\r\n    return httpService.put(`${apiEndpoint}/confirmation/email`, { email, token, password });\r\n}\r\n\r\nfunction verifyUpdatedEmail(email, token) {\r\n    return httpService.put(`${apiEndpoint}/verifyUpdatedMail`, { email, token });\r\n}\r\n\r\nfunction resendVerificationMail(email) {\r\n    return httpService.post(`${apiEndpoint}/resend`, { email });\r\n}\r\n\r\nfunction register(user) {\r\n  const userData = { ...user };\r\n  userData.phone = {\r\n    code: phoneCode,\r\n    number: user.phone,\r\n  };\r\n\r\n  return httpService.post(apiEndpoint, userData);\r\n}\r\n\r\nfunction registerUnverified(user) {\r\n  const userData = { ...user };\r\n  userData.phone = {\r\n    code: phoneCode,\r\n    number: user.phone,\r\n  };\r\n\r\n  return httpService.post(`${apiEndpoint}/unverified`, userData);\r\n}\r\n\r\nfunction registerByPhone(user) {\r\n  const userData = { ...user };\r\n  userData.phone = {\r\n    code: phoneCode,\r\n    number: user.phone,\r\n  };\r\n\r\n  return httpService.post(`${apiEndpoint}/byPhone`, userData);\r\n}\r\n\r\nfunction submitOTP(otpCode, phone) {\r\n  return httpService.post(`${apiEndpoint}/submitOTP`, { otpCode, phone });\r\n}\r\n\r\nfunction resendOTP(phone) {\r\n  return httpService.post(`${apiEndpoint}/resendOTP`, { phone });\r\n}\r\n\r\nfunction viewProfile() {\r\n  return httpService.get(viewProfileApiEndpoint);\r\n}\r\nfunction userTransactions(){\r\n  return httpService.get(userTransactionsWallet);\r\n}\r\n\r\nfunction userTransactionsList(){\r\n  return httpService.get(userTransaction)\r\n}\r\n\r\nfunction getWonAuction() {\r\n  return httpService.get(`${apiUrl}/auctionList/won`);\r\n}\r\n\r\nfunction getLostAuction() {\r\n  return httpService.get(`${apiUrl}/auctionList/lost`);\r\n}\r\n\r\nfunction getRunningAuction() {\r\n  return httpService.get(`${apiUrl}/auctionList/Running`);\r\n}\r\n\r\nasync function getEmailByToken(token) {\r\n  return await httpService.get(`${apiEndpoint}/email/${token}`);\r\n}\r\n\r\nasync function getPhoneInviteesByToken(token) {\r\n  return await httpService.get(`${apiEndpoint}/phone/${token}`);\r\n}\r\n\r\nfunction changePassword(oldPassword, newPassword) {\r\n  return httpService.put(changePasswordApiEndpoint, {\r\n    oldPassword,\r\n    newPassword,\r\n  });\r\n}\r\n\r\nfunction updateEmail(emailAddress) {\r\n  return httpService.put(updateEmailApiEndpoint, {\r\n    address: emailAddress,\r\n  });\r\n}\r\n\r\nfunction updateMobile(code, mobile) {\r\n  return httpService.put(updateMobileApiEndpoint, {\r\n    code,\r\n    mobile,\r\n  });\r\n}\r\n\r\nfunction updateAddress(address) {\r\n  return httpService.put(updateAddressApiEndpoint, {\r\n    address,\r\n  });\r\n}\r\n\r\nfunction getReviewsAsSeller(id) {\r\n  return httpService.get(getReviewsAsSellerApiEndpoint + \"/\" + id);\r\n}\r\n\r\nfunction getReviewsAsBuyer(id) {\r\n  return httpService.get(getReviewsAsBuyerApiEndpoint + \"/\" + id);\r\n}\r\n\r\nfunction getReviewsForOthers(id) {\r\n  return httpService.get(getReviewsForOthersApiEndpoint + \"/\" + id);\r\n}\r\n\r\nfunction getUserIDByNationalId(nationalId) {\r\n  return httpService.get(getUserIdEndpoint + \"/\" + nationalId);\r\n}\r\n\r\nfunction getIsUserVerifiedBylId(userId) {\r\n  return httpService.get(getUserIdEndpoint + \"/isVerified/\" + userId);\r\n}\r\n\r\nfunction viewUserPublicDetails(userId) {\r\n  return httpService.get(`${apiEndpoint}/publicDetails/${userId}`);\r\n}\r\n\r\nfunction getUsernames() {\r\n  return httpService.get(`${apiEndpoint}/usernames`);\r\n}\r\n\r\nfunction getUserByEmail(email) {\r\n  return httpService.get(`${apiEndpoint}/${email}`);\r\n}\r\n\r\nfunction generateShareableLink() {\r\n  return httpService.post(`${shareableLinkApi}`);\r\n}\r\n\r\nfunction updateUserAccountStatus(userId, body) {\r\n  return httpService.put(`${apiEndpoint}/update/accountStatus/${userId}`,body)\r\n}\r\n\r\nfunction soldPostsInPostDetails(userId){\r\n  return httpService.get(`${apiEndpoint}/postsSold/${userId}`);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}