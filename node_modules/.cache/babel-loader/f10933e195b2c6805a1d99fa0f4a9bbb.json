{"ast":null,"code":"import { orderConstants, servicePointConstants } from '../constants';\nimport { orderService } from './../services';\nimport { alertActions } from './';\nimport { history } from '../helpers';\nexport const orderActions = {\n  resetDisplayedStep,\n  placeOrder,\n  viewAllOrders,\n  viewOrder,\n  viewBuyingOrders,\n  viewSellingOrders,\n  viewSellingPosts,\n  viewOrderSeller,\n  sellerDropOffItemsInfo,\n  submitBuyerPickupInfo,\n  buyerPickUpItemsInfoUpdate,\n  handleViewOrdersAsBuyerClicked,\n  handleViewOrdersAsSellerClicked,\n  sellerChooseDropOffDetails,\n  arrivedAtSPBtnClicked,\n  returnOrderBtnClicked,\n  returnOrderRequestSent,\n  handleMappingOrderItemsToQuantities,\n  handleEditOrderItemQuantityChanged,\n  handleCancelEditOrderItems,\n  sendOrderItemsModification,\n  clearState,\n  chooseBuyNow,\n  chooseAuctionWithMinPrice,\n  chooseAuctionWithoutMinPrice\n}; //----------------------------------Return Request-----------------------------------\n\nfunction returnOrderBtnClicked(orderId) {\n  return async dispatch => {\n    history.push(\"/order/return/\" + orderId);\n    dispatch({\n      type: orderConstants.RETURN_ORDER_BUTTON_CLICKED,\n      orderId\n    });\n  };\n}\n\nfunction returnOrderRequestSent(orderId, itemsIds) {\n  return async dispatch => {\n    await dispatch(request());\n    let numberOfFail = 0;\n    let numberOfItems = 0;\n\n    for (const itemId in itemsIds) {\n      if (itemsIds.hasOwnProperty(itemId) && itemsIds[itemId].selected) {\n        numberOfItems++;\n\n        try {\n          const {\n            data\n          } = await orderService.placeReturnRequest(orderId, itemId, itemsIds[itemId].reason);\n          dispatch(success(data, itemId));\n        } catch (ex) {\n          dispatch(failure(ex, itemId));\n          numberOfFail++;\n        }\n      }\n    }\n\n    if (numberOfFail === numberOfItems) {\n      dispatch(alertActions.error({\n        header: \"Return request failed\",\n        content: 'All requests has been failed'\n      }));\n    } else if (numberOfFail > 0) {\n      dispatch(alertActions.error({\n        header: \"Return request failed\",\n        content: `${numberOfFail} out of ${numberOfItems} has been failed`\n      }));\n    } else {\n      dispatch(alertActions.success({\n        header: \"Return request submitted successfully\",\n        content: \"Return request submitted successfully\"\n      }), history.push(\"/orders\"));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.RETURN_ORDER_REQUESTED\n    };\n  }\n\n  function success(ordersData) {\n    return {\n      type: orderConstants.RETURN_ORDER_SUCCESS,\n      ordersData\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.RETURN_ORDER_FAILURE,\n      error\n    };\n  }\n} //-----------------------------------DATA ENTRY ACTIONS------------------------------\n\n\nfunction sellerChooseDropOffDetails(orderId, itemId) {\n  return async dispatch => {\n    history.push(\"/order/\" + orderId);\n    dispatch({\n      type: orderConstants.SELLER_CHOOSE_DROP_OFF_DATA,\n      orderId,\n      itemId\n    });\n  };\n}\n\nfunction arrivedAtSPBtnClicked(orderId) {\n  return async dispatch => {\n    history.push(\"/arrivedsp/\" + orderId);\n    dispatch({\n      type: orderConstants.CLIENT_ARRIVED_SP,\n      orderId\n    });\n  };\n} //----------------------------------------STEPS---------------------------------------\n\n\nfunction resetDisplayedStep() {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.PLACE_ORDER_STEP_REVIEW\n    });\n  };\n} //--------------------------------Service point realted ACTIONS--------------------------------------\n\n\nfunction submitBuyerPickupInfo(pickupInfo, orderId) {\n  return async dispatch => {\n    const arrivalDateTime = new Date(pickupInfo.arrivalDate);\n    arrivalDateTime.setHours(pickupInfo.arrivalTime);\n    const pickupData = {\n      buyerData: {\n        SP: pickupInfo.servicePointId,\n        timeslot: arrivalDateTime\n      }\n    };\n\n    if (pickupInfo.personInCharge !== servicePointConstants.USER) {\n      if (pickupInfo.authorisedUserId) {\n        pickupData.buyerData.authorizedPerson = {\n          authorized: pickupInfo.authorisedUserId\n        };\n      } else {\n        pickupData.buyerData.authorizedPerson = {\n          name: pickupInfo.authorizedName,\n          nationalID: pickupInfo.authorizedNationalID,\n          SP: pickupInfo.servicePointId,\n          timeslot: arrivalDateTime\n        };\n      }\n    }\n\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.submitBuyerPickupInfo(pickupData, orderId);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't submit pickup data\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.SUBMIT_BUYER_PICKUP_INFO_REQUEST\n    };\n  }\n\n  function success(message) {\n    history.push(`/orders`);\n    return {\n      type: orderConstants.SUBMIT_BUYER_PICKUP_INFO_SUCCESS\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.SUBMIT_BUYER_PICKUP_INFO_FAILURE,\n      error\n    };\n  }\n}\n\nfunction buyerPickUpItemsInfoUpdate(pickUpInfo) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const arrivalDateTime = new Date(pickUpInfo.date);\n      arrivalDateTime.setHours(pickUpInfo.timeslot);\n      const {\n        data\n      } = await orderService.updateBuyerPickUpInfo(pickUpInfo.orderId, {\n        timeslot: arrivalDateTime,\n        SP: pickUpInfo.SP\n      });\n      dispatch(alertActions.success({\n        header: \"Pick up Info updated succefully\",\n        content: data.message\n      }));\n      dispatch(success(data.message));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't update Pick up info\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.BUYER_PICK_UP_INFO_REQUEST\n    };\n  }\n\n  function success(message) {\n    history.push(\"/orders\");\n    return {\n      type: orderConstants.BUYER_PICK_UP_INFO_SUCCESS\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.BUYER_PICK_UP_INFO_FAILURE,\n      error\n    };\n  }\n}\n\nfunction sellerDropOffItemsInfo(pickUpInfo) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const arrivalDateTime = new Date(pickUpInfo.date);\n      arrivalDateTime.setHours(pickUpInfo.timeslot);\n      const {\n        data\n      } = await orderService.updateSellerDropOffInfo(pickUpInfo.orderId, {\n        timeslot: arrivalDateTime,\n        SP: pickUpInfo.SP\n      });\n      dispatch(alertActions.success({\n        header: \"Dropoff Info updated succefully\",\n        content: data.message\n      }));\n      dispatch(success(data.message));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't update drop off info\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.SELLER_STEP_DROP_OFF_INFO_REQUEST\n    };\n  }\n\n  function success(message) {\n    history.push(\"/orders\");\n    return {\n      type: orderConstants.SELLER_STEP_DROP_OFF_INFO_SUCCESS\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.SELLER_STEP_DROP_OFF_INFO_FAILURE,\n      error\n    };\n  }\n} //--------------------------------BUTTONS ACTIONS--------------------------------------\n\n\nfunction placeOrder(orderData, voucher) {\n  return async dispatch => {\n    const placeOrderRequest = {\n      items: [],\n      buyerData: {\n        isInsured: false\n      },\n      code: voucher && voucher.code,\n      voucherId: voucher._id\n    };\n\n    for (let i = 0; i < orderData.items.posts.length; i++) {\n      if (orderData.items.posts[i].quantity > 0) {\n        placeOrderRequest.items.push({\n          postId: orderData.items.posts[i].post._id,\n          quantity: orderData.items.posts[i].quantity,\n          buyingMethod: orderData.items.posts[i].post.sellingMethod\n        });\n      }\n    }\n\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.placeOrder(placeOrderRequest);\n      dispatch(success(data.ordersData));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't place order\",\n        content: ex.message\n      }));\n    }\n  };\n}\n\n;\n\nfunction request() {\n  return {\n    type: orderConstants.PLACE_ORDER_REQUEST\n  };\n}\n\nfunction success(ordersData) {\n  return {\n    type: orderConstants.PLACE_ORDER_SUCCESS,\n    ordersData\n  };\n}\n\nfunction failure(error) {\n  return {\n    type: orderConstants.PLACE_ORDER_FAILURE,\n    error\n  };\n} //--------------------------------------View Orders--------------------------------------\n\n\nfunction viewAllOrders() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.viewAllOrders();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't get orders\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.VIEW_ALL_ORDERS_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.VIEW_ALL_ORDERS_SUCCESS,\n      orderHistory: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.VIEW_ALL_ORDERS_FAILURE,\n      error\n    };\n  }\n}\n\nfunction viewOrder(orderId) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.viewOrder(orderId);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't view order\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.VIEW_ORDER_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.VIEW_ORDER_SUCCESS,\n      orderData: data.order,\n      returnRequestsOrder: data.returnRequests\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.VIEW_ORDER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction viewBuyingOrders() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.viewBuyingOrders();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't view order\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.VIEW_BUYINGORDER_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.VIEW_BUYINGORDER_SUCCESS,\n      buyingOrders: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.VIEW_BUYINGORDER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction viewSellingOrders() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.viewSellingOrders();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't view order\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.VIEW_SELLINGORDER_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.VIEW_SELLINGORDER_SUCCESS,\n      sellingOrders: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.VIEW_SELLINGORDER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction viewSellingPosts() {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.viewSellingPosts();\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't view order\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.VIEW_SELLINGPOSTS_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.VIEW_SELLINGPOSTS_SUCCESS,\n      sellingPosts: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.VIEW_SELLINGPOSTS_FAILURE,\n      error\n    };\n  }\n}\n\nfunction viewOrderSeller(orderId) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.viewOrder(orderId);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't view order\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.VIEW_ORDER_SELLER_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.VIEW_ORDER_SELLER_SUCCESS,\n      orderData: data.order,\n      returnRequestsOrder: data.returnRequests\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.VIEW_ORDER_SELLER_FAILURE,\n      error\n    };\n  }\n} //-------------------------------View Orders Actions-----------------------------\n\n\nfunction handleViewOrdersAsBuyerClicked() {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.VIEW_ORDERS_AS_BUYER\n    });\n  };\n}\n\nfunction handleViewOrdersAsSellerClicked() {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.VIEW_ORDERS_AS_SELLER\n    });\n  };\n} //--------------------------------------Edit Order--------------------------------------\n\n\nfunction handleMappingOrderItemsToQuantities(items) {\n  let acc = [{\n    item: items[0],\n    quantity: 1,\n    originalQuantity: 1\n  }];\n\n  for (let i = 1; i < items.length; i++) {\n    acc = helper(acc, items[i]);\n  }\n\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.MAP_ORDER_ITEMS_QUANTITY,\n      items: acc\n    });\n  };\n\n  function helper(acc, each) {\n    let found = false;\n\n    for (let i = 0; i < acc.length; i++) {\n      if (acc[i].item.post._id === each.post._id) {\n        let x = acc[i].quantity;\n        x++;\n        acc[i].quantity = x;\n        acc[i].originalQuantity++;\n        found = true;\n      }\n    }\n\n    if (!found) acc.push({\n      item: each,\n      quantity: 1,\n      originalQuantity: 1\n    });\n    return acc;\n  }\n}\n\nfunction handleEditOrderItemQuantityChanged(items, postId, newQuantity) {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.EDIT_ORDER_ITEM_QUANTITY,\n      items,\n      postId,\n      quantity: newQuantity\n    });\n  };\n}\n\nfunction handleCancelEditOrderItems() {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.CANCEL_EDIT_ORDER_ITEMS\n    });\n  };\n}\n\nfunction sendOrderItemsModification(orderId, items) {\n  return async dispatch => {\n    const orderData = {\n      orderData: {\n        items: items\n      }\n    };\n    await dispatch(request());\n\n    try {\n      const {\n        order\n      } = await orderService.editOrder(orderId, orderData);\n      dispatch(success(order));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"can't place order\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.EDIT_ORDER_REQUEST\n    };\n  }\n\n  function success(order) {\n    return {\n      type: orderConstants.EDIT_ORDER_SUCCESS,\n      order\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.EDIT_ORDER_FAILURE,\n      error\n    };\n  }\n}\n\n;\n\nfunction clearState() {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.CLEAR\n    });\n  };\n}\n\nfunction chooseBuyNow(orderId, body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.chooseBuyNow(orderId, body);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"Error\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.CHOOSE_BUYNOW_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.CHOOSE_BUYNOW_SUCCESS,\n      orderData: data.order\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.CHOOSE_BUYNOW_FAILURE,\n      error\n    };\n  }\n}\n\nfunction chooseAuctionWithMinPrice(orderId, body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.chooseAuctionWithMinPrice(orderId, body);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"Error\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.CHOOSE_AUCTION_WITH_MIN_PRICE_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.CHOOSE_AUCTION_WITH_MIN_PRICE_SUCCESS,\n      orderData: data.order\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.CHOOSE_AUCTION_WITH_MIN_PRICE_FAILURE,\n      error\n    };\n  }\n}\n\nfunction chooseAuctionWithoutMinPrice(orderId, body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await orderService.chooseAuctionWithoutMinPrice(orderId, body);\n      dispatch(success(data));\n    } catch (ex) {\n      dispatch(failure(ex));\n      dispatch(alertActions.error({\n        header: \"Error\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: orderConstants.CHOOSE_AUCTION_WITHOUT_MIN_PRICE_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: orderConstants.CHOOSE_AUCTION_WITHOUT_MIN_PRICE_SUCCESS,\n      orderData: data.order\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: orderConstants.CHOOSE_AUCTION_WITHOUT_MIN_PRICE_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/order.actions.js"],"names":["orderConstants","servicePointConstants","orderService","alertActions","history","orderActions","resetDisplayedStep","placeOrder","viewAllOrders","viewOrder","viewBuyingOrders","viewSellingOrders","viewSellingPosts","viewOrderSeller","sellerDropOffItemsInfo","submitBuyerPickupInfo","buyerPickUpItemsInfoUpdate","handleViewOrdersAsBuyerClicked","handleViewOrdersAsSellerClicked","sellerChooseDropOffDetails","arrivedAtSPBtnClicked","returnOrderBtnClicked","returnOrderRequestSent","handleMappingOrderItemsToQuantities","handleEditOrderItemQuantityChanged","handleCancelEditOrderItems","sendOrderItemsModification","clearState","chooseBuyNow","chooseAuctionWithMinPrice","chooseAuctionWithoutMinPrice","orderId","dispatch","push","type","RETURN_ORDER_BUTTON_CLICKED","itemsIds","request","numberOfFail","numberOfItems","itemId","hasOwnProperty","selected","data","placeReturnRequest","reason","success","ex","failure","error","header","content","RETURN_ORDER_REQUESTED","ordersData","RETURN_ORDER_SUCCESS","RETURN_ORDER_FAILURE","SELLER_CHOOSE_DROP_OFF_DATA","CLIENT_ARRIVED_SP","PLACE_ORDER_STEP_REVIEW","pickupInfo","arrivalDateTime","Date","arrivalDate","setHours","arrivalTime","pickupData","buyerData","SP","servicePointId","timeslot","personInCharge","USER","authorisedUserId","authorizedPerson","authorized","name","authorizedName","nationalID","authorizedNationalID","message","SUBMIT_BUYER_PICKUP_INFO_REQUEST","SUBMIT_BUYER_PICKUP_INFO_SUCCESS","SUBMIT_BUYER_PICKUP_INFO_FAILURE","pickUpInfo","date","updateBuyerPickUpInfo","BUYER_PICK_UP_INFO_REQUEST","BUYER_PICK_UP_INFO_SUCCESS","BUYER_PICK_UP_INFO_FAILURE","updateSellerDropOffInfo","SELLER_STEP_DROP_OFF_INFO_REQUEST","SELLER_STEP_DROP_OFF_INFO_SUCCESS","SELLER_STEP_DROP_OFF_INFO_FAILURE","orderData","voucher","placeOrderRequest","items","isInsured","code","voucherId","_id","i","posts","length","quantity","postId","post","buyingMethod","sellingMethod","PLACE_ORDER_REQUEST","PLACE_ORDER_SUCCESS","PLACE_ORDER_FAILURE","VIEW_ALL_ORDERS_REQUEST","VIEW_ALL_ORDERS_SUCCESS","orderHistory","VIEW_ALL_ORDERS_FAILURE","VIEW_ORDER_REQUEST","VIEW_ORDER_SUCCESS","order","returnRequestsOrder","returnRequests","VIEW_ORDER_FAILURE","VIEW_BUYINGORDER_REQUEST","VIEW_BUYINGORDER_SUCCESS","buyingOrders","VIEW_BUYINGORDER_FAILURE","VIEW_SELLINGORDER_REQUEST","VIEW_SELLINGORDER_SUCCESS","sellingOrders","VIEW_SELLINGORDER_FAILURE","VIEW_SELLINGPOSTS_REQUEST","VIEW_SELLINGPOSTS_SUCCESS","sellingPosts","VIEW_SELLINGPOSTS_FAILURE","VIEW_ORDER_SELLER_REQUEST","VIEW_ORDER_SELLER_SUCCESS","VIEW_ORDER_SELLER_FAILURE","VIEW_ORDERS_AS_BUYER","VIEW_ORDERS_AS_SELLER","acc","item","originalQuantity","helper","MAP_ORDER_ITEMS_QUANTITY","each","found","x","newQuantity","EDIT_ORDER_ITEM_QUANTITY","CANCEL_EDIT_ORDER_ITEMS","editOrder","EDIT_ORDER_REQUEST","EDIT_ORDER_SUCCESS","EDIT_ORDER_FAILURE","CLEAR","body","CHOOSE_BUYNOW_REQUEST","CHOOSE_BUYNOW_SUCCESS","CHOOSE_BUYNOW_FAILURE","CHOOSE_AUCTION_WITH_MIN_PRICE_REQUEST","CHOOSE_AUCTION_WITH_MIN_PRICE_SUCCESS","CHOOSE_AUCTION_WITH_MIN_PRICE_FAILURE","CHOOSE_AUCTION_WITHOUT_MIN_PRICE_REQUEST","CHOOSE_AUCTION_WITHOUT_MIN_PRICE_SUCCESS","CHOOSE_AUCTION_WITHOUT_MIN_PRICE_FAILURE"],"mappings":"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","sourcesContent":["import { orderConstants, servicePointConstants } from '../constants';\r\nimport { orderService } from './../services';\r\nimport { alertActions } from './';\r\nimport { history } from '../helpers';\r\n\r\nexport const orderActions = {\r\n  resetDisplayedStep,\r\n  placeOrder,\r\n  viewAllOrders,\r\n  viewOrder,\r\n  viewBuyingOrders,\r\n  viewSellingOrders,\r\n  viewSellingPosts,\r\n  viewOrderSeller,\r\n  sellerDropOffItemsInfo,\r\n  submitBuyerPickupInfo,\r\n  buyerPickUpItemsInfoUpdate,\r\n  handleViewOrdersAsBuyerClicked,\r\n  handleViewOrdersAsSellerClicked,\r\n  sellerChooseDropOffDetails,\r\n  arrivedAtSPBtnClicked,\r\n  returnOrderBtnClicked,\r\n  returnOrderRequestSent,\r\n  handleMappingOrderItemsToQuantities,\r\n  handleEditOrderItemQuantityChanged,\r\n  handleCancelEditOrderItems,\r\n  sendOrderItemsModification,\r\n  clearState,\r\n  chooseBuyNow,\r\n  chooseAuctionWithMinPrice,\r\n  chooseAuctionWithoutMinPrice,\r\n};\r\n\r\n//----------------------------------Return Request-----------------------------------\r\nfunction returnOrderBtnClicked(orderId) {\r\n  return async dispatch => {\r\n    history.push(\"/order/return/\" + orderId);\r\n    dispatch({\r\n      type: orderConstants.RETURN_ORDER_BUTTON_CLICKED,\r\n      orderId,\r\n    });\r\n  }\r\n}\r\n\r\nfunction returnOrderRequestSent(orderId, itemsIds) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    let numberOfFail = 0;\r\n    let numberOfItems = 0;\r\n    for (const itemId in itemsIds) {\r\n      if (itemsIds.hasOwnProperty(itemId) && itemsIds[itemId].selected) {\r\n        numberOfItems++;\r\n        try {\r\n          const { data } = await orderService.placeReturnRequest(orderId, itemId, itemsIds[itemId].reason);\r\n          dispatch(success(data, itemId));\r\n        \r\n        } catch (ex) {\r\n          dispatch(failure(ex, itemId));\r\n          numberOfFail++;\r\n        }\r\n      }\r\n    }\r\n    if (numberOfFail === numberOfItems) {\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Return request failed\",\r\n          content: 'All requests has been failed'\r\n        })\r\n      );\r\n    } else if (numberOfFail > 0) {\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Return request failed\",\r\n          content: `${numberOfFail} out of ${numberOfItems} has been failed`\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        alertActions.success({\r\n          header: \"Return request submitted successfully\",\r\n          content: \"Return request submitted successfully\"\r\n        }),\r\n        history.push(\"/orders\")\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.RETURN_ORDER_REQUESTED\r\n    };\r\n  }\r\n\r\n  function success(ordersData) {\r\n    return {\r\n      type: orderConstants.RETURN_ORDER_SUCCESS,\r\n      ordersData\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.RETURN_ORDER_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\n//-----------------------------------DATA ENTRY ACTIONS------------------------------\r\n\r\nfunction sellerChooseDropOffDetails(orderId, itemId) {\r\n  return async dispatch => {\r\n    history.push(\"/order/\" + orderId);\r\n    dispatch({\r\n      type: orderConstants.SELLER_CHOOSE_DROP_OFF_DATA,\r\n      orderId,\r\n      itemId\r\n    });\r\n  };\r\n}\r\n\r\nfunction arrivedAtSPBtnClicked(orderId) {\r\n  return async dispatch => {\r\n    history.push(\"/arrivedsp/\" + orderId);\r\n    dispatch({\r\n      type: orderConstants.CLIENT_ARRIVED_SP,\r\n      orderId\r\n    });\r\n  };\r\n}\r\n\r\n//----------------------------------------STEPS---------------------------------------\r\nfunction resetDisplayedStep() {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: orderConstants.PLACE_ORDER_STEP_REVIEW,\r\n    });\r\n  };  \r\n}\r\n\r\n//--------------------------------Service point realted ACTIONS--------------------------------------\r\n\r\nfunction submitBuyerPickupInfo(pickupInfo, orderId) {\r\n  return async (dispatch) => {\r\n    const arrivalDateTime = new Date(pickupInfo.arrivalDate);\r\n    arrivalDateTime.setHours(pickupInfo.arrivalTime);\r\n    const pickupData = {\r\n      buyerData: {\r\n        SP: pickupInfo.servicePointId,\r\n        timeslot: arrivalDateTime\r\n      }\r\n    };\r\n\r\n    if (pickupInfo.personInCharge !== servicePointConstants.USER) {\r\n      if (pickupInfo.authorisedUserId) {\r\n        pickupData.buyerData.authorizedPerson = {\r\n          authorized: pickupInfo.authorisedUserId,\r\n        };\r\n      } else {\r\n        pickupData.buyerData.authorizedPerson = {\r\n          name: pickupInfo.authorizedName,\r\n          nationalID: pickupInfo.authorizedNationalID,\r\n          SP: pickupInfo.servicePointId,\r\n          timeslot: arrivalDateTime,\r\n        };\r\n      }\r\n    }\r\n\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.submitBuyerPickupInfo(pickupData, orderId);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't submit pickup data\",\r\n          content: ex.message,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {\r\n      type: orderConstants.SUBMIT_BUYER_PICKUP_INFO_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(message) {\r\n    history.push(`/orders`);\r\n    return {\r\n      type: orderConstants.SUBMIT_BUYER_PICKUP_INFO_SUCCESS,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.SUBMIT_BUYER_PICKUP_INFO_FAILURE,\r\n      error\r\n    };\r\n  } \r\n}\r\n\r\nfunction buyerPickUpItemsInfoUpdate(pickUpInfo) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const arrivalDateTime = new Date(pickUpInfo.date);\r\n      arrivalDateTime.setHours(pickUpInfo.timeslot);\r\n      const { data } = await orderService.updateBuyerPickUpInfo(pickUpInfo.orderId, {\r\n        timeslot: arrivalDateTime,\r\n        SP: pickUpInfo.SP\r\n      });\r\n      dispatch(\r\n        alertActions.success({\r\n          header: \"Pick up Info updated succefully\",\r\n          content: data.message\r\n        })\r\n      );\r\n      dispatch(success(data.message));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't update Pick up info\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {\r\n      type: orderConstants.BUYER_PICK_UP_INFO_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(message) {\r\n    history.push(\"/orders\");\r\n    return {\r\n      type: orderConstants.BUYER_PICK_UP_INFO_SUCCESS\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.BUYER_PICK_UP_INFO_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\n\r\nfunction sellerDropOffItemsInfo(pickUpInfo) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const arrivalDateTime = new Date(pickUpInfo.date);\r\n      arrivalDateTime.setHours(pickUpInfo.timeslot);\r\n      const { data } = await orderService.updateSellerDropOffInfo(pickUpInfo.orderId, {\r\n        timeslot: arrivalDateTime,\r\n        SP: pickUpInfo.SP\r\n      });\r\n      dispatch(\r\n        alertActions.success({\r\n          header: \"Dropoff Info updated succefully\",\r\n          content: data.message\r\n        })\r\n      );\r\n      dispatch(success(data.message));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't update drop off info\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {\r\n      type: orderConstants.SELLER_STEP_DROP_OFF_INFO_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(message) {\r\n    history.push(\"/orders\");\r\n    return {\r\n      type: orderConstants.SELLER_STEP_DROP_OFF_INFO_SUCCESS\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.SELLER_STEP_DROP_OFF_INFO_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\n//--------------------------------BUTTONS ACTIONS--------------------------------------\r\nfunction placeOrder(orderData, voucher) {\r\n  return async (dispatch) => {\r\n    const placeOrderRequest = {\r\n      items: [], buyerData: {\r\n        isInsured: false,\r\n      },\r\n      code: voucher && voucher.code,\r\n      voucherId: voucher._id,\r\n    };\r\n    for (let i = 0; i < orderData.items.posts.length; i++) {\r\n      if( orderData.items.posts[i].quantity>0){ placeOrderRequest.items.push({\r\n        postId: orderData.items.posts[i].post._id,\r\n        quantity: orderData.items.posts[i].quantity,\r\n        buyingMethod: orderData.items.posts[i].post.sellingMethod,\r\n      });}\r\n    }\r\n\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.placeOrder(placeOrderRequest);\r\n      dispatch(success(data.ordersData));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't place order\",\r\n          content: ex.message,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n};\r\nfunction request() {\r\n  return {\r\n    type: orderConstants.PLACE_ORDER_REQUEST\r\n  };\r\n}\r\n\r\nfunction success(ordersData) {\r\n  return {\r\n    type: orderConstants.PLACE_ORDER_SUCCESS,\r\n    ordersData\r\n  };\r\n}\r\n\r\nfunction failure(error) {\r\n  return {\r\n    type: orderConstants.PLACE_ORDER_FAILURE,\r\n    error\r\n  };\r\n}\r\n\r\n\r\n//--------------------------------------View Orders--------------------------------------\r\nfunction viewAllOrders() {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.viewAllOrders();\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't get orders\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.VIEW_ALL_ORDERS_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.VIEW_ALL_ORDERS_SUCCESS,\r\n      orderHistory: data\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.VIEW_ALL_ORDERS_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction viewOrder(orderId) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.viewOrder(orderId);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't view order\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.VIEW_ORDER_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.VIEW_ORDER_SUCCESS,\r\n      orderData: data.order,\r\n      returnRequestsOrder: data.returnRequests,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.VIEW_ORDER_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction viewBuyingOrders() {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.viewBuyingOrders();\r\n      dispatch(success(data));\r\n\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't view order\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.VIEW_BUYINGORDER_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.VIEW_BUYINGORDER_SUCCESS,\r\n      buyingOrders: data,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.VIEW_BUYINGORDER_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction viewSellingOrders() {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.viewSellingOrders();\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't view order\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.VIEW_SELLINGORDER_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.VIEW_SELLINGORDER_SUCCESS,\r\n      sellingOrders: data,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.VIEW_SELLINGORDER_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction viewSellingPosts() {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.viewSellingPosts();\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't view order\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.VIEW_SELLINGPOSTS_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.VIEW_SELLINGPOSTS_SUCCESS,\r\n      sellingPosts: data,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.VIEW_SELLINGPOSTS_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n\r\nfunction viewOrderSeller(orderId) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.viewOrder(orderId);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't view order\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.VIEW_ORDER_SELLER_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.VIEW_ORDER_SELLER_SUCCESS,\r\n      orderData: data.order,\r\n      returnRequestsOrder: data.returnRequests,\r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.VIEW_ORDER_SELLER_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\n//-------------------------------View Orders Actions-----------------------------\r\nfunction handleViewOrdersAsBuyerClicked() {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: orderConstants.VIEW_ORDERS_AS_BUYER\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleViewOrdersAsSellerClicked() {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: orderConstants.VIEW_ORDERS_AS_SELLER\r\n    });\r\n  };\r\n}\r\n\r\n//--------------------------------------Edit Order--------------------------------------\r\nfunction handleMappingOrderItemsToQuantities(items) {\r\n  let acc = [{item: items[0], quantity: 1, originalQuantity: 1}];\r\n  for (let i = 1; i < items.length; i++) {\r\n    acc = helper(acc, items[i]);\r\n  }\r\n\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: orderConstants.MAP_ORDER_ITEMS_QUANTITY,\r\n      items: acc\r\n    });\r\n  };\r\n\r\n  function helper(acc, each){\r\n    let found = false;\r\n    for (let i = 0; i < acc.length; i++) {\r\n      if (acc[i].item.post._id === each.post._id) {\r\n        let x = acc[i].quantity;\r\n        x++;\r\n        acc[i].quantity = x;\r\n        acc[i].originalQuantity++;\r\n        found = true;\r\n      }\r\n    }\r\n    if (!found) acc.push({item: each, quantity: 1, originalQuantity: 1});\r\n    return acc;\r\n  }\r\n}\r\n\r\nfunction handleEditOrderItemQuantityChanged(items, postId, newQuantity) {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: orderConstants.EDIT_ORDER_ITEM_QUANTITY,\r\n      items,\r\n      postId,\r\n      quantity: newQuantity,\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleCancelEditOrderItems() {\r\n  return async dispatch => {\r\n    dispatch({ type: orderConstants.CANCEL_EDIT_ORDER_ITEMS });\r\n  };\r\n}\r\n\r\nfunction sendOrderItemsModification(orderId, items) {\r\n  return async (dispatch) => {\r\n    const orderData = {\r\n      orderData: {\r\n        items: items,\r\n      }\r\n    };\r\n\r\n    await dispatch(request());\r\n    try {\r\n      const { order } = await orderService.editOrder(orderId, orderData);\r\n      dispatch(success(order));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"can't place order\",\r\n          content: ex.message,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  function request() {\r\n    return {\r\n      type: orderConstants.EDIT_ORDER_REQUEST\r\n    };\r\n  }\r\n  \r\n  function success(order) {\r\n    return {\r\n      type: orderConstants.EDIT_ORDER_SUCCESS,\r\n      order\r\n    };\r\n  }\r\n  \r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.EDIT_ORDER_FAILURE,\r\n      error\r\n    };\r\n  }\r\n};\r\n\r\nfunction clearState() {\r\n  return async dispatch => {\r\n    dispatch({ type: orderConstants.CLEAR });\r\n  };\r\n}\r\n\r\nfunction chooseBuyNow(orderId,body) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.chooseBuyNow(orderId,body);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Error\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.CHOOSE_BUYNOW_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.CHOOSE_BUYNOW_SUCCESS,\r\n      orderData: data.order,\r\n      \r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.CHOOSE_BUYNOW_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\nfunction chooseAuctionWithMinPrice(orderId,body) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.chooseAuctionWithMinPrice(orderId,body);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Error\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.CHOOSE_AUCTION_WITH_MIN_PRICE_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.CHOOSE_AUCTION_WITH_MIN_PRICE_SUCCESS,\r\n      orderData: data.order,\r\n      \r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.CHOOSE_AUCTION_WITH_MIN_PRICE_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}\r\nfunction chooseAuctionWithoutMinPrice(orderId,body) {\r\n  return async dispatch => {\r\n    await dispatch(request());\r\n    try {\r\n      const { data } = await orderService.chooseAuctionWithoutMinPrice(orderId,body);\r\n      dispatch(success(data));\r\n    } catch (ex) {\r\n      dispatch(failure(ex));\r\n      dispatch(\r\n        alertActions.error({\r\n          header: \"Error\",\r\n          content: ex.message\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function request() {\r\n    return {\r\n      type: orderConstants.CHOOSE_AUCTION_WITHOUT_MIN_PRICE_REQUEST\r\n    };\r\n  }\r\n\r\n  function success(data) {\r\n    return {\r\n      type: orderConstants.CHOOSE_AUCTION_WITHOUT_MIN_PRICE_SUCCESS,\r\n      orderData: data.order,\r\n      \r\n    };\r\n  }\r\n\r\n  function failure(error) {\r\n    return {\r\n      type: orderConstants.CHOOSE_AUCTION_WITHOUT_MIN_PRICE_FAILURE,\r\n      error\r\n    };\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}