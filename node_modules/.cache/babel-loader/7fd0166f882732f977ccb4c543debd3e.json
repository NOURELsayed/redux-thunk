{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ServicePoint/ArrivedAtSPPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { orderActions, userActions } from '../../actions';\nimport { Grid, Label, Container, List } from 'semantic-ui-react';\n\nvar QRCode = require('qrcode.react');\n\nclass ArrivedAtSPPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    await this.props.viewOrder(this.props.match.params.orderid);\n    await this.props.getIsUserVerified(this.props.user.id);\n  }\n\n  render() {\n    const {\n      orderDetailsData\n    } = this.props;\n    const {\n      items\n    } = orderDetailsData;\n    const asBuyer = this.props.user.id === orderDetailsData.buyerData.buyer || orderDetailsData.buyerData.buyer && this.props.user.id === orderDetailsData.buyerData.buyer._id;\n    const value = JSON.stringify({\n      Client: this.props.user.id,\n      OrderId: orderDetailsData._id,\n      ClientType: asBuyer ? \"Buyer\" : \"Seller\"\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: '2em 9em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: \"massive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, \"Welcome To Service Point\")), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 53\n      }\n    }, \"Instructions : \")), /*#__PURE__*/React.createElement(Container, {\n      style: {\n        padding: '1em 1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      bulleted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }, \"Kindly increase screen brightness to maximum\"), /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, \"Kindly scan below QR\"), /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }, \"You will recive your queue number and estimated waiting time\"), !this.props.isVerified ? /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }\n    }, \"We need to verify your ID as it is your first visit, so kindly be preparied to show it up upon request\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 39\n      }\n    }), asBuyer ? /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, \"Kindly be prepared to pick up following items :\", /*#__PURE__*/React.createElement(List.List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(List.Item, {\n      key: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 64\n      }\n    }, item.post.title)))) : /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }\n    }, \"Kindly be prepared to drop off following items (\", items.length, \" items):\", /*#__PURE__*/React.createElement(List.List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(List.Item, {\n      key: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 64\n      }\n    }, item.post.title)))))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(QRCode, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Note: you can dorpoff/pickup other orders items during this visit, if they are avalible.\"))) // asBuyer ?\n    //     this.getSellerDropOfDetailsUI(orderDetailsData._id)\n    //     : this.getOrderDetailsUI(orderDetailsData)\n    ;\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    orderDetailsData\n  } = state.order;\n  return {\n    orderDetailsData,\n    user\n  };\n}\n\nconst actionCreators = {\n  viewOrder: orderActions.viewOrder,\n  getIsUserVerified: userActions.getIsUserVerified\n};\nconst connectedArrivedAtSPPage = connect(mapState, actionCreators)(ArrivedAtSPPage);\nexport { connectedArrivedAtSPPage as ArrivedAtSPPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ServicePoint/ArrivedAtSPPage.jsx"],"names":["React","Component","connect","orderActions","userActions","Grid","Label","Container","List","QRCode","require","ArrivedAtSPPage","state","componentDidMount","props","viewOrder","match","params","orderid","getIsUserVerified","user","id","render","orderDetailsData","items","asBuyer","buyerData","buyer","_id","value","JSON","stringify","Client","OrderId","ClientType","padding","isVerified","map","item","post","title","length","mapState","authentication","order","actionCreators","connectedArrivedAtSPPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { orderActions, userActions } from '../../actions';\r\nimport { Grid, Label, Container, List } from 'semantic-ui-react';\r\nvar QRCode = require('qrcode.react');\r\n\r\nclass ArrivedAtSPPage extends Component {\r\n    state = {}\r\n    async componentDidMount() {\r\n        await this.props.viewOrder(this.props.match.params.orderid);\r\n        await this.props.getIsUserVerified(this.props.user.id);\r\n    }\r\n\r\n    render() {\r\n        const { orderDetailsData } = this.props;\r\n        const { items } = orderDetailsData;\r\n        const asBuyer = this.props.user.id === orderDetailsData.buyerData.buyer\r\n            || (orderDetailsData.buyerData.buyer && this.props.user.id === orderDetailsData.buyerData.buyer._id);\r\n        \r\n        const value = JSON.stringify({\r\n            Client: this.props.user.id,\r\n            OrderId: orderDetailsData._id,\r\n            ClientType: (asBuyer ? \"Buyer\" : \"Seller\")\r\n        });\r\n        return (\r\n            <Grid style={{ padding: '2em 9em' }}>\r\n                <Grid.Row>\r\n                    <Label size='massive'>Welcome To Service Point</Label>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <div >\r\n                        <Container textAlign='left'><strong>Instructions : </strong></Container>\r\n                        <Container style={{ padding: '1em 1em' }}>\r\n                            <List bulleted>\r\n                                <List.Item>Kindly increase screen brightness to maximum</List.Item>\r\n                                <List.Item>Kindly scan below QR</List.Item>\r\n                                <List.Item>You will recive your queue number and estimated waiting time</List.Item>\r\n                                {!this.props.isVerified ?\r\n                                    <List.Item>We need to verify your ID as it is your first visit, so kindly be preparied to show it up upon request</List.Item>\r\n                                    : <div></div>}\r\n                                {asBuyer ?\r\n                                    <List.Item>\r\n                                        Kindly be prepared to pick up following items :\r\n                                        <List.List>\r\n                                            {items.map(item => <List.Item key={item._id}>{item.post.title}</List.Item>)}\r\n                                        </List.List>\r\n                                    </List.Item>\r\n                                    : <List.Item>\r\n                                        Kindly be prepared to drop off following items ({items.length} items):\r\n                                        <List.List>\r\n                                            {items.map(item => <List.Item key={item._id}>{item.post.title}</List.Item>)}\r\n                                        </List.List>\r\n                                    </List.Item>}\r\n                            </List>\r\n                        </Container>\r\n                    </div>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <QRCode value={value} />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row>\r\n                    <Label color='red'>\r\n                        Note: you can dorpoff/pickup other orders items during this visit, if they are avalible.\r\n                    </Label>\r\n                </Grid.Row>\r\n            </Grid>\r\n            // asBuyer ?\r\n            //     this.getSellerDropOfDetailsUI(orderDetailsData._id)\r\n            //     : this.getOrderDetailsUI(orderDetailsData)\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapState(state) {\r\n    const { user } = state.authentication;\r\n    const { orderDetailsData } = state.order;\r\n    return { orderDetailsData, user };\r\n}\r\n\r\nconst actionCreators = {\r\n    viewOrder: orderActions.viewOrder,\r\n    getIsUserVerified: userActions.getIsUserVerified,\r\n};\r\n\r\nconst connectedArrivedAtSPPage = connect(mapState, actionCreators)(ArrivedAtSPPage);\r\n\r\nexport { connectedArrivedAtSPPage as ArrivedAtSPPage };"]},"metadata":{},"sourceType":"module"}