{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/Feedback.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport StarRatings from \"react-star-ratings\";\n\nclass FeedBack extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      feedback,\n      ratingAsSeller,\n      ratingAsBuyer\n    } = this.props.userProfile;\n    return /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 3,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }\n    }, \"Feedback\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"thumbs up outline\",\n      color: \"green\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }\n    }, feedback && feedback.positiveCount), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"thumbs down outline\",\n      color: \"red\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }, feedback && feedback.negativeCount)))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Rating As Seller\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Communication\", /*#__PURE__*/React.createElement(StarRatings, {\n      rating: ratingAsSeller.communication.sum / ratingAsSeller.communication.count || 0,\n      starRatedColor: \"yellow\",\n      numberOfStars: 5,\n      name: \"rating\",\n      starDimension: \"18px\",\n      starSpacing: \"1px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }), \" \", \"(\", ratingAsSeller.communication.count, \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }), \"Post Description\", /*#__PURE__*/React.createElement(StarRatings, {\n      rating: ratingAsSeller.postDescription.sum / ratingAsSeller.postDescription.count || 0,\n      starRatedColor: \"yellow\",\n      numberOfStars: 5,\n      name: \"rating\",\n      starDimension: \"18px\",\n      starSpacing: \"1px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }), \" \", \"(\", ratingAsSeller.postDescription.count, \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }), \"Drop Off Time\", /*#__PURE__*/React.createElement(StarRatings, {\n      rating: ratingAsSeller.dropOffTime.sum / ratingAsSeller.dropOffTime.count || 0,\n      starRatedColor: \"yellow\",\n      numberOfStars: 5,\n      name: \"rating\",\n      starDimension: \"18px\",\n      starSpacing: \"1px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }), \" \", \"(\", ratingAsSeller.dropOffTime.count, \")\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Rating As Buyer\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Pick Up Time\", /*#__PURE__*/React.createElement(StarRatings, {\n      rating: ratingAsBuyer.pickUpTime.sum / ratingAsBuyer.pickUpTime.count || 0,\n      starRatedColor: \"yellow\",\n      numberOfStars: 5,\n      name: \"rating\",\n      starDimension: \"18px\",\n      starSpacing: \"1px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }), \" \", \"(\", ratingAsBuyer.pickUpTime.count, \")\"), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    userProfile\n  } = state.users;\n  return {\n    userProfile\n  };\n}\n\nconst actionCreators = {};\nconst connectedFeedBack = connect(mapState, actionCreators)(FeedBack);\nexport { connectedFeedBack as FeedBack };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/ProfilePage/Feedback.jsx"],"names":["React","Component","connect","Segment","Grid","Icon","StarRatings","FeedBack","state","render","feedback","ratingAsSeller","ratingAsBuyer","props","userProfile","positiveCount","negativeCount","communication","sum","count","postDescription","dropOffTime","pickUpTime","mapState","users","actionCreators","connectedFeedBack"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BO,KAD+B,GACvB,EADuB;AAAA;;AAE/BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,cAAZ;AAA4BC,MAAAA;AAA5B,QAA8C,KAAKC,KAAL,CAAWC,WAA/D;AACA,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,OAAO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mBAAX;AAA+B,MAAA,KAAK,EAAC,OAArC;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QAAQ,IAAIA,QAAQ,CAACK,aADxB,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,qBAAX;AAAiC,MAAA,KAAK,EAAC,KAAvC;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,QAAQ,IAAIA,QAAQ,CAACM,aADxB,CAPF,CADF,CADF,CADF,eAgBE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE,oBAAC,WAAD;AACE,MAAA,MAAM,EACJL,cAAc,CAACM,aAAf,CAA6BC,GAA7B,GACEP,cAAc,CAACM,aAAf,CAA6BE,KAD/B,IACwC,CAH5C;AAKE,MAAA,cAAc,EAAC,QALjB;AAME,MAAA,aAAa,EAAE,CANjB;AAOE,MAAA,IAAI,EAAC,QAPP;AAQE,MAAA,aAAa,EAAC,MARhB;AASE,MAAA,WAAW,EAAC,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYK,GAZL,OAaIR,cAAc,CAACM,aAAf,CAA6BE,KAbjC,oBAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,mCAgBE,oBAAC,WAAD;AACE,MAAA,MAAM,EACJR,cAAc,CAACS,eAAf,CAA+BF,GAA/B,GACEP,cAAc,CAACS,eAAf,CAA+BD,KADjC,IAC0C,CAH9C;AAKE,MAAA,cAAc,EAAC,QALjB;AAME,MAAA,aAAa,EAAE,CANjB;AAOE,MAAA,IAAI,EAAC,QAPP;AAQE,MAAA,aAAa,EAAC,MARhB;AASE,MAAA,WAAW,EAAC,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EA0BK,GA1BL,OA2BIR,cAAc,CAACS,eAAf,CAA+BD,KA3BnC,oBA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,gCA8BE,oBAAC,WAAD;AACE,MAAA,MAAM,EACJR,cAAc,CAACU,WAAf,CAA2BH,GAA3B,GACEP,cAAc,CAACU,WAAf,CAA2BF,KAD7B,IACsC,CAH1C;AAKE,MAAA,cAAc,EAAC,QALjB;AAME,MAAA,aAAa,EAAE,CANjB;AAOE,MAAA,IAAI,EAAC,QAPP;AAQE,MAAA,aAAa,EAAC,MARhB;AASE,MAAA,WAAW,EAAC,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EAwCK,GAxCL,OAyCIR,cAAc,CAACU,WAAf,CAA2BF,KAzC/B,MAHF,eA8CE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CF,CADF,CAhBF,eAkEE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEE,oBAAC,WAAD;AACE,MAAA,MAAM,EACJP,aAAa,CAACU,UAAd,CAAyBJ,GAAzB,GACEN,aAAa,CAACU,UAAd,CAAyBH,KAD3B,IACoC,CAHxC;AAKE,MAAA,cAAc,EAAC,QALjB;AAME,MAAA,aAAa,EAAE,CANjB;AAOE,MAAA,IAAI,EAAC,QAPP;AAQE,MAAA,aAAa,EAAC,MARhB;AASE,MAAA,WAAW,EAAC,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYK,GAZL,OAaIP,aAAa,CAACU,UAAd,CAAyBH,KAb7B,MAHF,eAkBE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF,CAlEF,CADF,CADF,CADF;AA+FD;;AAnG8B;;AAsGjC,SAASI,QAAT,CAAkBf,KAAlB,EAAyB;AACvB,QAAM;AAAEM,IAAAA;AAAF,MAAkBN,KAAK,CAACgB,KAA9B;AACA,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACD;;AAED,MAAMW,cAAc,GAAG,EAAvB;AAEA,MAAMC,iBAAiB,GAAGxB,OAAO,CAACqB,QAAD,EAAWE,cAAX,CAAP,CAAkClB,QAAlC,CAA1B;AAEA,SAASmB,iBAAiB,IAAInB,QAA9B","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nclass FeedBack extends Component {\r\n  state = {};\r\n  render() {\r\n    const { feedback, ratingAsSeller, ratingAsBuyer } = this.props.userProfile;\r\n    return (\r\n      <Segment>\r\n        <Grid columns={3} divided>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Grid.Row>\r\n                <Segment>\r\n                  <strong>Feedback</strong>\r\n                  <hr />\r\n                  <Icon name=\"thumbs up outline\" color=\"green\" size=\"large\">\r\n                    {feedback && feedback.positiveCount}\r\n                  </Icon>\r\n                  <br />\r\n                  <Icon name=\"thumbs down outline\" color=\"red\" size=\"large\">\r\n                    {feedback && feedback.negativeCount}\r\n                  </Icon>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Segment>\r\n                <strong>Rating As Seller</strong>\r\n                <hr />\r\n                <Grid.Column>\r\n                  Communication\r\n                  <StarRatings\r\n                    rating={\r\n                      ratingAsSeller.communication.sum /\r\n                        ratingAsSeller.communication.count || 0\r\n                    }\r\n                    starRatedColor=\"yellow\"\r\n                    numberOfStars={5}\r\n                    name=\"rating\"\r\n                    starDimension=\"18px\"\r\n                    starSpacing=\"1px\"\r\n                  />{\" \"}\r\n                  ({ratingAsSeller.communication.count})\r\n                  <br />\r\n                  Post Description\r\n                  <StarRatings\r\n                    rating={\r\n                      ratingAsSeller.postDescription.sum /\r\n                        ratingAsSeller.postDescription.count || 0\r\n                    }\r\n                    starRatedColor=\"yellow\"\r\n                    numberOfStars={5}\r\n                    name=\"rating\"\r\n                    starDimension=\"18px\"\r\n                    starSpacing=\"1px\"\r\n                  />{\" \"}\r\n                  ({ratingAsSeller.postDescription.count})\r\n                  <br />\r\n                  Drop Off Time\r\n                  <StarRatings\r\n                    rating={\r\n                      ratingAsSeller.dropOffTime.sum /\r\n                        ratingAsSeller.dropOffTime.count || 0\r\n                    }\r\n                    starRatedColor=\"yellow\"\r\n                    numberOfStars={5}\r\n                    name=\"rating\"\r\n                    starDimension=\"18px\"\r\n                    starSpacing=\"1px\"\r\n                  />{\" \"}\r\n                  ({ratingAsSeller.dropOffTime.count})\r\n                </Grid.Column>\r\n                <Grid.Column></Grid.Column>\r\n              </Segment>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Segment>\r\n                <strong>Rating As Buyer</strong>\r\n                <hr />\r\n                <Grid.Column>\r\n                  Pick Up Time\r\n                  <StarRatings\r\n                    rating={\r\n                      ratingAsBuyer.pickUpTime.sum /\r\n                        ratingAsBuyer.pickUpTime.count || 0\r\n                    }\r\n                    starRatedColor=\"yellow\"\r\n                    numberOfStars={5}\r\n                    name=\"rating\"\r\n                    starDimension=\"18px\"\r\n                    starSpacing=\"1px\"\r\n                  />{\" \"}\r\n                  ({ratingAsBuyer.pickUpTime.count})\r\n                </Grid.Column>\r\n                <Grid.Column></Grid.Column>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { userProfile } = state.users;\r\n  return { userProfile };\r\n}\r\n\r\nconst actionCreators = {};\r\n\r\nconst connectedFeedBack = connect(mapState, actionCreators)(FeedBack);\r\n\r\nexport { connectedFeedBack as FeedBack };\r\n"]},"metadata":{},"sourceType":"module"}