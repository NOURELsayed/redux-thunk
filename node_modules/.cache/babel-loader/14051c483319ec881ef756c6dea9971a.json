{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/PostPage/EditPostPage.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Segment } from \"semantic-ui-react\";\nimport { postActions, categoryActions } from \"../../actions\";\nimport { CreatePostPage } from \"../CreatePostPage\";\n\nclass EditPostPage extends Component {\n  async componentDidMount() {\n    await this.props.getPostData(this.props.match.params.postId);\n    this.props.postData && (await this.props.getCategoryDetails(this.props.postData.post.category));\n    this.props.postData && (await this.props.getFields(this.props.postData.post.category));\n  }\n\n  render() {\n    const {\n      postData,\n      loading\n    } = this.props;\n    const {\n      categoryDetails\n    } = this.props.categories;\n    return /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"center\",\n      style: {\n        padding: \"0em 3em\"\n      },\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, !loading && categoryDetails && /*#__PURE__*/React.createElement(CreatePostPage, {\n      edit: true,\n      editPostDetails: postData.post,\n      category: categoryDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 43\n      }\n    }));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    categories\n  } = state;\n  const {\n    postData\n  } = state.post;\n  const user = state.authentication.user;\n  return {\n    user,\n    postData,\n    categories,\n    alert\n  };\n}\n\nconst actionCreators = {\n  getPostData: postActions.getPostData,\n  getCategoryDetails: categoryActions.getDetails,\n  getFields: categoryActions.getFields\n};\nconst connectedEditPostPage = connect(mapState, actionCreators)(EditPostPage);\nexport { connectedEditPostPage as EditPostPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/PostPage/EditPostPage.jsx"],"names":["React","Component","connect","Segment","postActions","categoryActions","CreatePostPage","EditPostPage","componentDidMount","props","getPostData","match","params","postId","postData","getCategoryDetails","post","category","getFields","render","loading","categoryDetails","categories","padding","mapState","state","user","authentication","alert","actionCreators","getDetails","connectedEditPostPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,eAA7C;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAEZ,QAAjBO,iBAAiB,GAAG;AACxB,UAAM,KAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,MAA/C,CAAN;AACA,SAAKJ,KAAL,CAAWK,QAAX,KAAuB,MAAM,KAAKL,KAAL,CAAWM,kBAAX,CAA8B,KAAKN,KAAL,CAAWK,QAAX,CAAoBE,IAApB,CAAyBC,QAAvD,CAA7B;AACA,SAAKR,KAAL,CAAWK,QAAX,KAAuB,MAAM,KAAKL,KAAL,CAAWS,SAAX,CAAqB,KAAKT,KAAL,CAAWK,QAAX,CAAoBE,IAApB,CAAyBC,QAA9C,CAA7B;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,QAAF;AAAYM,MAAAA;AAAZ,QAAwB,KAAKX,KAAnC;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAsB,KAAKZ,KAAL,CAAWa,UAAvC;AAEA,wBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAnC;AAA2D,MAAA,QAAQ,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACH,OAAD,IAAYC,eAAZ,iBAA+B,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,IAAtB;AAA4B,MAAA,eAAe,EAAEP,QAAQ,CAACE,IAAtD;AAA4D,MAAA,QAAQ,EAAEK,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpC,CADF;AAKD;;AAjBkC;;AAoBrC,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEH,IAAAA;AAAF,MAAiBG,KAAvB;AACA,QAAM;AAAEX,IAAAA;AAAF,MAAeW,KAAK,CAACT,IAA3B;AACA,QAAMU,IAAI,GAAGD,KAAK,CAACE,cAAN,CAAqBD,IAAlC;AACA,SAAO;AAAEA,IAAAA,IAAF;AAAQZ,IAAAA,QAAR;AAAkBQ,IAAAA,UAAlB;AAA8BM,IAAAA;AAA9B,GAAP;AACD;;AAED,MAAMC,cAAc,GAAG;AACnBnB,EAAAA,WAAW,EAAEN,WAAW,CAACM,WADN;AAEnBK,EAAAA,kBAAkB,EAAEV,eAAe,CAACyB,UAFjB;AAGnBZ,EAAAA,SAAS,EAAEb,eAAe,CAACa;AAHR,CAAvB;AAMA,MAAMa,qBAAqB,GAAG7B,OAAO,CACnCsB,QADmC,EAEnCK,cAFmC,CAAP,CAG5BtB,YAH4B,CAA9B;AAIA,SAASwB,qBAAqB,IAAIxB,YAAlC","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { postActions, categoryActions } from \"../../actions\";\r\nimport { CreatePostPage } from \"../CreatePostPage\"\r\n\r\nclass EditPostPage extends Component {\r\n\r\n  async componentDidMount() {\r\n    await this.props.getPostData(this.props.match.params.postId);\r\n    this.props.postData && await this.props.getCategoryDetails(this.props.postData.post.category);\r\n    this.props.postData && await this.props.getFields(this.props.postData.post.category);\r\n  }\r\n\r\n  render() {\r\n    const { postData, loading } = this.props;\r\n    const { categoryDetails } = this.props.categories;\r\n\r\n    return (  \r\n      <Segment textAlign=\"center\" style={{ padding: \"0em 3em\" }} vertical>\r\n          {!loading && categoryDetails && <CreatePostPage edit={true} editPostDetails={postData.post} category={categoryDetails} />}\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { categories } = state;\r\n  const { postData } = state.post;\r\n  const user = state.authentication.user;\r\n  return { user, postData, categories, alert };\r\n}\r\n\r\nconst actionCreators = {\r\n    getPostData: postActions.getPostData,\r\n    getCategoryDetails: categoryActions.getDetails,\r\n    getFields: categoryActions.getFields,\r\n};\r\n\r\nconst connectedEditPostPage = connect(\r\n  mapState,\r\n  actionCreators\r\n)(EditPostPage);\r\nexport { connectedEditPostPage as EditPostPage };\r\n"]},"metadata":{},"sourceType":"module"}