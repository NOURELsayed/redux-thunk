{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/components/Question/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport * as moment from \"moment\";\nimport { questionActions } from \"../../actions\";\nimport \"./question.css\";\n\nclass QuestionComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTimeFormate = questions => {\n      const timeZone = new Date().getTimezoneOffset();\n      const checkdata = questions.questions[0].updatedAt;\n      const timeWitUtc = moment.utc(checkdata, \"YYYY-MM-DD HH:mm a\").utcOffset(timeZone);\n      const transactionTime = timeWitUtc.fromNow();\n      return /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }\n      }, transactionTime);\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.fetchQuestionsToUserRequest();\n  }\n\n  render() {\n    const {\n      questions\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, questions.title), /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, questions.questions && questions.questions.length !== 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, questions.questions[0].question) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inquiriesCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, questions.questions && questions.questions.length !== 0 ? /*#__PURE__*/React.createElement(\"img\", {\n      src: questions.questions[0].user.avatar,\n      alt: \"inqImg\",\n      className: \"answerAvater\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }), questions.questions && questions.questions.length !== 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"answerUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, questions.questions[0].user.username, \":\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }), questions.questions && questions.questions.length !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"answersOfQuestionInqiries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, questions.questions[0].answer[0].answer) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \"No Answer\"))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    questions\n  } = state.questions;\n  return {\n    user,\n    questions\n  };\n}\n\nconst actionCreators = {\n  fetchQuestionsToUserRequest: questionActions.fetchQuestionsToUserRequest\n};\nconst connectedQuestionComponent = connect(mapState, actionCreators)(QuestionComponent);\nexport { connectedQuestionComponent as QuestionComponent };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/components/Question/index.jsx"],"names":["React","Component","Segment","Grid","connect","moment","questionActions","QuestionComponent","renderTimeFormate","questions","timeZone","Date","getTimezoneOffset","checkdata","updatedAt","timeWitUtc","utc","utcOffset","transactionTime","fromNow","componentDidMount","props","fetchQuestionsToUserRequest","render","title","length","question","user","avatar","username","answer","mapState","state","authentication","actionCreators","connectedQuestionComponent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Grid } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as moment from \"moment\";\r\nimport { questionActions } from \"../../actions\";\r\nimport \"./question.css\";\r\n\r\nclass QuestionComponent extends Component {\r\n  async componentDidMount() {\r\n    await this.props.fetchQuestionsToUserRequest();\r\n  }\r\n\r\n  renderTimeFormate = (questions) => {\r\n    const timeZone = new Date().getTimezoneOffset();\r\n    const checkdata = questions.questions[0].updatedAt;\r\n    const timeWitUtc = moment\r\n      .utc(checkdata, \"YYYY-MM-DD HH:mm a\")\r\n      .utcOffset(timeZone);\r\n    const transactionTime = timeWitUtc.fromNow();\r\n    return <h4>{transactionTime}</h4>;\r\n  };\r\n  render() {\r\n    const { questions } = this.props;\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Row>\r\n          <Grid.Column width={8} textAlign=\"left\">\r\n            <h2>{questions.title}</h2>\r\n            <Segment textAlign=\"left\">\r\n              {questions.questions && questions.questions.length !== 0 ? (\r\n                <h4>{questions.questions[0].question}</h4>\r\n              ) : (\r\n                <p />\r\n              )}\r\n              <div className=\"inquiriesCard\">\r\n                {questions.questions && questions.questions.length !== 0 ? (\r\n                  <img\r\n                    src={questions.questions[0].user.avatar}\r\n                    alt=\"inqImg\"\r\n                    className=\"answerAvater\"\r\n                  />\r\n                ) : (\r\n                  <img alt=\"\" />\r\n                )}\r\n                {questions.questions && questions.questions.length !== 0 ? (\r\n                  <h4 className=\"answerUsername\">\r\n                    {questions.questions[0].user.username}:\r\n                  </h4>\r\n                ) : (\r\n                  <p />\r\n                )}\r\n                {questions.questions && questions.questions.length !== 0 ? (\r\n                  <span className=\"answersOfQuestionInqiries\">\r\n                    {questions.questions[0].answer[0].answer}\r\n                  </span>\r\n                ) : (\r\n                  <p>No Answer</p>\r\n                )}\r\n              </div>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  const { questions } = state.questions;\r\n  return { user, questions };\r\n}\r\n\r\nconst actionCreators = {\r\n  fetchQuestionsToUserRequest: questionActions.fetchQuestionsToUserRequest,\r\n};\r\n\r\nconst connectedQuestionComponent = connect(\r\n  mapState,\r\n  actionCreators\r\n)(QuestionComponent);\r\nexport { connectedQuestionComponent as QuestionComponent };\r\n"]},"metadata":{},"sourceType":"module"}