{"ast":null,"code":"import { httpService } from \"./\";\nimport { apiUrl } from \"../config\";\nexport const pushNotification = {\n  sendSubscription,\n  getPublicVapidKey\n};\nconst apiEndpoint = apiUrl + \"/notifications\";\n\nasync function sendSubscription(subscription) {\n  return await httpService.post(`${apiEndpoint}/subscribe`, JSON.stringify(subscription), {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nasync function getPublicVapidKey() {\n  const {\n    data\n  } = await httpService.get(`${apiEndpoint}/publicVapidKey`);\n  localStorage.setItem('publicVapidKey', data.publicVapidKey);\n  return {\n    publicVapidKey: data.publicVapidKey\n  };\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/services/pushNotification.service.js"],"names":["httpService","apiUrl","pushNotification","sendSubscription","getPublicVapidKey","apiEndpoint","subscription","post","JSON","stringify","headers","data","get","localStorage","setItem","publicVapidKey"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,IAA1B;AACA,SAAQC,MAAR,QAAqB,WAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC5BC,EAAAA,gBAD4B;AAE5BC,EAAAA;AAF4B,CAAzB;AAKP,MAAMC,WAAW,GAAGJ,MAAM,GAAG,gBAA7B;;AAEA,eAAeE,gBAAf,CAAgCG,YAAhC,EAA8C;AAC1C,SAAO,MAAMN,WAAW,CAACO,IAAZ,CAAkB,GAAEF,WAAY,YAAhC,EAA6CG,IAAI,CAACC,SAAL,CAAeH,YAAf,CAA7C,EAA2E;AACpFI,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAD2E,GAA3E,CAAb;AAGH;;AAED,eAAeN,iBAAf,GAAmC;AAC/B,QAAM;AAAEO,IAAAA;AAAF,MAAW,MAAMX,WAAW,CAACY,GAAZ,CAAiB,GAAEP,WAAY,iBAA/B,CAAvB;AACAQ,EAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCH,IAAI,CAACI,cAA5C;AACA,SAAO;AAAEA,IAAAA,cAAc,EAAEJ,IAAI,CAACI;AAAvB,GAAP;AACH","sourcesContent":["import {httpService} from \"./\";\r\nimport {apiUrl} from \"../config\";\r\n\r\nexport const pushNotification = {\r\n    sendSubscription,\r\n    getPublicVapidKey,\r\n};\r\n\r\nconst apiEndpoint = apiUrl + \"/notifications\";\r\n\r\nasync function sendSubscription(subscription) {\r\n    return await httpService.post(`${apiEndpoint}/subscribe`, JSON.stringify(subscription), {\r\n        headers: {'Content-Type': 'application/json'},\r\n    });\r\n}\r\n\r\nasync function getPublicVapidKey() {\r\n    const { data } = await httpService.get(`${apiEndpoint}/publicVapidKey`);\r\n    localStorage.setItem('publicVapidKey', data.publicVapidKey);\r\n    return { publicVapidKey: data.publicVapidKey };\r\n}"]},"metadata":{},"sourceType":"module"}