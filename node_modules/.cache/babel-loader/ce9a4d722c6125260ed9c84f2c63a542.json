{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/QuestionsContainer/QuestionsContainerAsSeller.jsx\";\nimport React, { Component } from \"react\";\nimport { Comment, Form, Button } from \"semantic-ui-react\";\nimport TimeAgo from \"react-timeago\";\nexport class QuestionsContainerAsSeller extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  handleAnswerClick(question) {\n    const {\n      id\n    } = question;\n    const answerObj = {\n      question: id,\n      answer: this.state.answer\n    };\n    this.props.answer(answerObj);\n  }\n\n  handleChange(e) {\n    this.setState({\n      answer: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      questions,\n      sellerUsername,\n      sellerAvatar\n    } = this.props;\n    return questions && questions.map((question, i) => {\n      return /*#__PURE__*/React.createElement(Comment.Group, {\n        key: question._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n        as: \"a\",\n        src: question.user.avatar ? question.user.avatar : 'https://react.semantic-ui.com/images/wireframe/image.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, question.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TimeAgo, {\n        date: question.createdAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Comment.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, question.question), question.answer && /*#__PURE__*/React.createElement(Comment.Group, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n        as: \"a\",\n        src: sellerAvatar ? sellerAvatar : 'https://react.semantic-ui.com/images/wireframe/image.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }, \"Seller: \", sellerUsername), /*#__PURE__*/React.createElement(Comment.Metadata, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TimeAgo, {\n        date: question.answerDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Comment.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }\n      }, question.answer)))) || /*#__PURE__*/React.createElement(Comment.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        style: {\n          width: \"3000px\",\n          hight: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.TextArea, {\n        onChange: text => this.handleChange(text),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        size: \"mini\",\n        content: \"Answer\",\n        icon: \"edit\",\n        primary: true,\n        onClick: event => this.handleAnswerClick({\n          id: question._id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }))))));\n    });\n  }\n\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/QuestionsContainer/QuestionsContainerAsSeller.jsx"],"names":["React","Component","Comment","Form","Button","TimeAgo","QuestionsContainerAsSeller","state","handleAnswerClick","question","id","answerObj","answer","props","handleChange","e","setState","target","value","render","questions","sellerUsername","sellerAvatar","map","i","_id","user","avatar","username","createdAt","answerDate","width","hight","text","event"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Comment, Form, Button } from \"semantic-ui-react\";\r\nimport TimeAgo from \"react-timeago\";\r\n\r\nexport class QuestionsContainerAsSeller extends Component {\r\n  state = {};\r\n  handleAnswerClick(question) {\r\n    const { id } = question;\r\n    const answerObj = {\r\n      question: id,\r\n      answer: this.state.answer\r\n    };\r\n\r\n    this.props.answer(answerObj);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      answer: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { questions, sellerUsername, sellerAvatar } = this.props;\r\n    return questions && questions.map((question, i) => {\r\n      return (\r\n        <Comment.Group key={question._id}>\r\n          <Comment>\r\n            <Comment.Avatar\r\n              as=\"a\"\r\n              src={question.user.avatar ? question.user.avatar : 'https://react.semantic-ui.com/images/wireframe/image.png'}\r\n            />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">\r\n                {question.user.username}\r\n              </Comment.Author>\r\n              <Comment.Metadata>\r\n                <span>\r\n                  <TimeAgo date={question.createdAt} />\r\n                </span>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{question.question}</Comment.Text>\r\n              {(question.answer && (\r\n                <Comment.Group key={i}>\r\n                  <Comment>\r\n                    <Comment.Avatar\r\n                      as=\"a\"\r\n                      src={sellerAvatar ? sellerAvatar : 'https://react.semantic-ui.com/images/wireframe/image.png'}\r\n                    />\r\n                    <Comment.Content>\r\n                      <Comment.Author as=\"a\">Seller: {sellerUsername}</Comment.Author>\r\n                      <Comment.Metadata>\r\n                        <div>\r\n                          <TimeAgo date={question.answerDate} />\r\n                        </div>\r\n                      </Comment.Metadata>\r\n                      <Comment.Text>{question.answer}</Comment.Text>\r\n                    </Comment.Content>\r\n                  </Comment>\r\n                </Comment.Group>\r\n              )) || (\r\n                <Comment.Actions>\r\n                  <Form style={{ width: \"3000px\", hight: \"20px\" }}>\r\n                    <Form.TextArea onChange={text => this.handleChange(text)} />\r\n                    <Button\r\n                      size=\"mini\"\r\n                      content=\"Answer\"\r\n                      icon=\"edit\"\r\n                      primary\r\n                      onClick={event =>\r\n                        this.handleAnswerClick({ id: question._id })\r\n                      }\r\n                    />\r\n                  </Form>\r\n                </Comment.Actions>\r\n              )}\r\n            </Comment.Content>\r\n          </Comment>\r\n        </Comment.Group>\r\n      );\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}