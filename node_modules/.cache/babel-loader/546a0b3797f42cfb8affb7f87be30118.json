{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/FavoriteCategory/FavoriteCategoryPage.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Segment, Card, Icon, Header, Divider, Grid } from \"semantic-ui-react\";\nimport { categoryActions } from \"../../actions\";\nexport class FavoriteCategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      opened: {} // saves the ids of the opened subcategory in the view\n\n    };\n\n    this.addSpacing = level => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 27\n      }\n    }, '\\xa0'.repeat(7 * level));\n\n    this.handleToggleSubcategories = (id, hasSubcategories) => {\n      if (!hasSubcategories) return;\n      const {\n        opened\n      } = this.state;\n      opened[id] = opened[id] ? false : true;\n      this.setState({ ...this.state,\n        opened\n      });\n    };\n\n    this.handleToggleFavorite = async (categoryId, favoriteCategories) => {\n      if (favoriteCategories && favoriteCategories.length > 0 && this.findCategoryId(categoryId)) await this.props.unFavoriteCategory(categoryId);else await this.props.favoriteCategory(categoryId);\n    };\n\n    this.findCategoryId = categoryId => {\n      const {\n        favoriteCategories\n      } = this.props.categories;\n      if (!favoriteCategories || favoriteCategories.length === 0) return false;\n      const found = favoriteCategories.filter(category => category._id === categoryId);\n      if (found.length !== 0) return true;else return false;\n    };\n\n    this.addSubcategoryCard = (subcategories, level) => {\n      const {\n        opened\n      } = this.state;\n      const {\n        favoriteCategories\n      } = this.props.categories;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 4\n        }\n      }, subcategories && subcategories.map(subcategory => {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: subcategory.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 8\n          }\n        }, this.addSpacing(level - 1), subcategory.subcategories && subcategory.subcategories.length > 0 && /*#__PURE__*/React.createElement(Icon, {\n          color: \"teal\",\n          name: `angle ${opened[subcategory.id] ? 'down' : 'right'}`,\n          onClick: () => this.handleToggleSubcategories(subcategory.id, subcategory.subcategories && subcategory.subcategories.length > 0 ? true : false),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }), subcategory.name.english, /*#__PURE__*/React.createElement(Icon, {\n          style: {\n            float: 'right'\n          },\n          onClick: () => this.handleToggleFavorite(subcategory.id, favoriteCategories),\n          name: this.findCategoryId(subcategory.id) ? 'star' : 'star outline',\n          color: \"yellow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        })), opened[subcategory.id] && this.addSubcategoryCard(subcategory.subcategories, level + 1));\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getAllCategories();\n    await this.props.getUserFavoriteCategories();\n  }\n\n  render() {\n    const {\n      categories,\n      favoriteCategories\n    } = this.props.categories;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        margin: \"10px 50px\",\n        padding: \"10px 50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    }, \"All Categories\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }, categories && categories.length > 0 && categories.map(category => /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 5,\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: category.id,\n      link: true,\n      fluid: true,\n      color: \"teal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    }, category.name.english, \" \", /*#__PURE__*/React.createElement(Icon, {\n      style: {\n        float: 'right'\n      },\n      onClick: () => this.handleToggleFavorite(category.id, favoriteCategories),\n      name: this.findCategoryId(category.id) ? 'star' : 'star outline',\n      color: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 31\n      }\n    }))), this.addSubcategoryCard(category.subcategories, 1))))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    alert\n  } = state;\n  const {\n    categories\n  } = state;\n  return {\n    user,\n    categories,\n    alert\n  };\n}\n\nconst actionCreators = {\n  getAllCategories: categoryActions.getAllCategories,\n  getUserFavoriteCategories: categoryActions.getUserFavoriteCategories,\n  unFavoriteCategory: categoryActions.unFavoriteCategory,\n  favoriteCategory: categoryActions.favoriteCategory\n};\nconst connectedFavoriteCategory = connect(mapState, actionCreators)(FavoriteCategoryContainer);\nexport { connectedFavoriteCategory as FavoriteCategoryPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/FavoriteCategory/FavoriteCategoryPage.jsx"],"names":["React","Component","connect","Container","Segment","Card","Icon","Header","Divider","Grid","categoryActions","FavoriteCategoryContainer","state","opened","addSpacing","level","repeat","handleToggleSubcategories","id","hasSubcategories","setState","handleToggleFavorite","categoryId","favoriteCategories","length","findCategoryId","props","unFavoriteCategory","favoriteCategory","categories","found","filter","category","_id","addSubcategoryCard","subcategories","map","subcategory","name","english","float","componentDidMount","getAllCategories","getUserFavoriteCategories","render","margin","padding","mapState","user","authentication","alert","actionCreators","connectedFavoriteCategory","FavoriteCategoryPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Segment, Card, Icon, Header, Divider, Grid, } from \"semantic-ui-react\";\r\nimport { categoryActions } from \"../../actions\";\r\n\r\nexport class FavoriteCategoryContainer extends Component {\r\n\tstate = {\r\n\t\topened: {}, // saves the ids of the opened subcategory in the view\r\n\t}\r\n    \r\n\tasync componentDidMount() {\r\n        await this.props.getAllCategories();\r\n        await this.props.getUserFavoriteCategories();\r\n    }\r\n    \r\n    addSpacing = level => <span>{'\\xa0'.repeat(7*level)}</span> // add spaces before the name of the category to be aligned below its parent category\r\n    \r\n\thandleToggleSubcategories = (id, hasSubcategories) => {\r\n\t\tif (!hasSubcategories) return;\r\n\r\n\t\tconst { opened } = this.state;\r\n\t\topened[id] = opened[id] ? false : true;\r\n\t\tthis.setState({ ...this.state, opened });\r\n\t}\r\n\r\n    handleToggleFavorite = async (categoryId, favoriteCategories) => {\r\n        if (favoriteCategories && favoriteCategories.length > 0 && this.findCategoryId(categoryId)) await this.props.unFavoriteCategory(categoryId);\r\n        else await this.props.favoriteCategory(categoryId);\r\n    }\r\n\r\n    findCategoryId = (categoryId) => {\r\n        const { favoriteCategories } = this.props.categories;\r\n        if (!favoriteCategories || favoriteCategories.length === 0) return false;\r\n        const found = favoriteCategories.filter(category => category._id === categoryId);\r\n        if (found.length !== 0) return true;\r\n        else return false;\r\n    } \r\n\r\n\taddSubcategoryCard = (subcategories, level) => {\r\n        const { opened } = this.state;\r\n        const { favoriteCategories } = this.props.categories;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t  subcategories && subcategories.map(subcategory => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<React.Fragment key={subcategory.id}>\r\n\t\t\t\t\t  <Card.Content>\r\n\t\t\t\t\t    {/* Add some spacing according to the category level in the tree */}\r\n\t\t\t\t\t    {this.addSpacing(level-1)}\r\n\t\t\t\t\t    {subcategory.subcategories && subcategory.subcategories.length > 0 &&\r\n                        <Icon \r\n                          color='teal'\r\n                          name={`angle ${opened[subcategory.id] ? 'down' : 'right'}`} \r\n                          onClick={() => this.handleToggleSubcategories(subcategory.id, subcategory.subcategories && subcategory.subcategories.length > 0 ? true : false)}\r\n                        />}\r\n\t\t\t\t\t    {subcategory.name.english}\r\n                        <Icon \r\n                          style={{ float: 'right' }}\r\n                          onClick={() => this.handleToggleFavorite(subcategory.id, favoriteCategories)} \r\n                          name={this.findCategoryId(subcategory.id) ? 'star' : 'star outline'} \r\n                          color='yellow'\r\n                        />\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t  </Card.Content>\r\n\t\t\t\t\t  {opened[subcategory.id] && this.addSubcategoryCard(subcategory.subcategories, level+1)}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t);\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n        const { categories, favoriteCategories } = this.props.categories;\r\n\t\treturn (\r\n\t\t<Container fluid style={{ margin: \"10px 50px\", padding: \"10px 50px\" }}>\r\n\t\t  <Segment color='black'>\r\n\t\t\t  <Header as='h1' textAlign=\"center\">All Categories</Header>\r\n\t\t\t  <Divider />\r\n\t\t\t  <Grid columns={2} centered>\r\n\t\t\t\t{\r\n\t\t\t\t  categories && categories.length > 0 &&\r\n                  categories.map(category =>\r\n\t\t\t\t\t<Grid.Column width={5} key={category.id}>\r\n\t\t  \t\t\t  <Card.Group centered>\r\n\t  \t\t\t\t    <Card key={category.id} link fluid color='teal'>\r\n\t\t\t\t\t\t  <Card.Content>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t  {category.name.english}{\" \"}\r\n                              <Icon\r\n                                style={{ float: 'right' }}\r\n                                onClick={() => this.handleToggleFavorite(category.id, favoriteCategories)} \r\n                                name={this.findCategoryId(category.id) ? 'star' : 'star outline'} \r\n                                color='yellow'\r\n                              />\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t  </Card.Content>\r\n\t\t\t\t\t\t  {this.addSubcategoryCard(category.subcategories, 1)}\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t  </Card.Group>\r\n\t\t\t\t    </Grid.Column>\r\n\t\t\t\t  )\r\n\t\t\t\t}\r\n\t\t\t  </Grid>\r\n\t\t  </Segment>\r\n\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { user } = state.authentication;\r\n\tconst { alert } = state;\r\n    const { categories } = state;\r\n\treturn { user, categories, alert };\r\n}\r\n\r\nconst actionCreators = {\r\n    getAllCategories: categoryActions.getAllCategories,\r\n    getUserFavoriteCategories: categoryActions.getUserFavoriteCategories,\r\n    unFavoriteCategory: categoryActions.unFavoriteCategory,\r\n    favoriteCategory: categoryActions.favoriteCategory,\r\n};\r\n\r\nconst connectedFavoriteCategory = connect(mapState, actionCreators)(FavoriteCategoryContainer);\r\nexport { connectedFavoriteCategory as FavoriteCategoryPage };\r\n"]},"metadata":{},"sourceType":"module"}