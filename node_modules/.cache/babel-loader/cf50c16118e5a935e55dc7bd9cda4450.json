{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Checkout/ConfirmOrderPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Segment, Button, Item, Label, Input, Message } from 'semantic-ui-react';\nimport { orderActions, shoppingCartActions, voucherActions } from '../../actions';\nimport { ShoppingCartItem } from '../ShoppingCart/ShoppingCartItem';\nimport { onSale, calculatePrice } from '../../helpers';\n\nclass ConfirmOrderPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      voucherCode: ''\n    };\n\n    this.placeOrder = () => {\n      this.props.placeOrder({\n        items: this.props.shoppingCartData\n      }, this.props.voucher);\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.validateVoucherCode = async e => {\n      e.preventDefault();\n      await this.props.validateVoucherCode(this.state.voucherCode);\n      if (this.props.error) this.setState({\n        voucherCode: ''\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getUserShoppingCartData();\n  }\n\n  render() {\n    const {\n      error,\n      voucher\n    } = this.props;\n    let cartItems = this.props.shoppingCartData.posts;\n    let totalCost = 0;\n    let discountedPrice = 0;\n\n    for (let i = 0; i < cartItems.length; i++) {\n      totalCost += cartItems[i].quantity * cartItems[i].post.price;\n\n      if (onSale(cartItems[i].post.discount)) {\n        discountedPrice += calculatePrice(cartItems[i].post.price, cartItems[i].post.discount) * cartItems[i].quantity;\n      } else {\n        discountedPrice += cartItems[i].quantity * cartItems[i].post.price;\n      }\n    }\n\n    discountedPrice = voucher.discount_value ? discountedPrice - voucher.discount_value : discountedPrice;\n    return /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: 'large',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, \"Order Details\")), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, cartItems && cartItems.length > 0 ? /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    }, cartItems.map(item => item.quantity > 0 && /*#__PURE__*/React.createElement(ShoppingCartItem, {\n      key: item._id,\n      readOnly: true,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }\n    }, \"Shopping cart is empty !!!\")))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: 'large',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, \"Apply Voucher Code\")), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"voucherCode\",\n      icon: \"money\",\n      iconPosition: \"left\",\n      placeholder: \"Voucher Code...\",\n      value: this.state.voucherCode,\n      onChange: this.handleChange,\n      loading: this.props.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.validateVoucherCode,\n      disabled: this.state.voucherCode.length < 6,\n      positive: true,\n      loading: this.props.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, \"Apply\"), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 48\n      }\n    }), voucher.code && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Code applied successfully!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 55\n      }\n    })))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, discountedPrice < totalCost ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      size: 'large',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, \"Total Cost: \", totalCost, \" LE\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      size: 'large',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 45\n      }\n    }, \"Discounted Cost: \", discountedPrice > 0 ? discountedPrice : 0, \" LE\")) : /*#__PURE__*/React.createElement(Label, {\n      size: 'large',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, \"Total Cost: \", totalCost, \" LE\")), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.placeOrder,\n      disabled: !cartItems || cartItems.length === 0,\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, \"Place Order\")))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  const {\n    user\n  } = state.authentication;\n  const {\n    shoppingCartData\n  } = state.shoppingCart;\n  const {\n    voucher,\n    error,\n    loading\n  } = state.voucher;\n  return {\n    voucher,\n    error,\n    user,\n    shoppingCartData,\n    alert,\n    loading\n  };\n}\n\nconst actionCreators = {\n  placeOrder: orderActions.placeOrder,\n  getUserShoppingCartData: shoppingCartActions.viewCart,\n  validateVoucherCode: voucherActions.validateVoucherCode\n};\nconst connectedConfirmOrderPage = connect(mapState, actionCreators)(ConfirmOrderPage);\nexport { connectedConfirmOrderPage as ConfirmOrderPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/Checkout/ConfirmOrderPage.jsx"],"names":["React","Component","connect","Grid","Segment","Button","Item","Label","Input","Message","orderActions","shoppingCartActions","voucherActions","ShoppingCartItem","onSale","calculatePrice","ConfirmOrderPage","state","voucherCode","placeOrder","props","items","shoppingCartData","voucher","handleChange","e","name","value","setState","validateVoucherCode","preventDefault","error","componentDidMount","getUserShoppingCartData","render","cartItems","posts","totalCost","discountedPrice","i","length","quantity","post","price","discount","discount_value","map","item","_id","loading","code","mapState","alert","user","authentication","shoppingCart","actionCreators","viewCart","connectedConfirmOrderPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Segment, Button, Item, Label, Input, Message } from 'semantic-ui-react';\r\nimport { orderActions, shoppingCartActions, voucherActions } from '../../actions';\r\nimport { ShoppingCartItem } from '../ShoppingCart/ShoppingCartItem';\r\nimport { onSale, calculatePrice } from '../../helpers';\r\n\r\nclass ConfirmOrderPage extends Component {\r\n    state = { voucherCode: '' };\r\n\r\n    async componentDidMount() {\r\n        this.props.getUserShoppingCartData();\r\n    }\r\n\r\n    placeOrder = () => {\r\n        this.props.placeOrder({ items: this.props.shoppingCartData}, this.props.voucher);\r\n    };\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    validateVoucherCode = async (e) => {\r\n        e.preventDefault();\r\n        await this.props.validateVoucherCode(this.state.voucherCode);\r\n        if (this.props.error) this.setState({voucherCode: ''});\r\n    }\r\n\r\n    render() {\r\n        const { error, voucher } = this.props;\r\n        let cartItems = this.props.shoppingCartData.posts;\r\n        let totalCost = 0;\r\n        let discountedPrice=0;\r\n        for (let i = 0; i < cartItems.length; i++) {\r\n            totalCost += cartItems[i].quantity * cartItems[i].post.price;\r\n            if(onSale(cartItems[i].post.discount)){\r\n                discountedPrice+= calculatePrice(cartItems[i].post.price, cartItems[i].post.discount) * cartItems[i].quantity\r\n            }\r\n            else{\r\n                discountedPrice += cartItems[i].quantity * cartItems[i].post.price;\r\n            }\r\n        }\r\n         discountedPrice = voucher.discount_value? (discountedPrice - voucher.discount_value):discountedPrice;\r\n\r\n        return (\r\n            <Grid centered>\r\n                <Grid.Row>\r\n                    <Grid.Column width={15}>\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Label size={'large'}>Order Details</Label>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Segment>\r\n                                    {cartItems && cartItems.length > 0 ? (\r\n                                        <Item.Group>\r\n                                            {cartItems.map((item) => ( item.quantity > 0 &&\r\n                                                <ShoppingCartItem\r\n                                                    key={item._id}\r\n                                                    readOnly\r\n                                                    item={item}\r\n                                                />\r\n                                            ))}\r\n                                            <Item></Item>\r\n                                        </Item.Group>\r\n                                    ) : (\r\n                                            <h1>Shopping cart is empty !!!</h1>\r\n                                        )}\r\n                                </Segment>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={10}>\r\n                        <Segment>\r\n                            <Grid centered>\r\n                                <Grid.Row>\r\n                                    <Label size={'large'}>\r\n                                        Apply Voucher Code\r\n                                    </Label>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Input\r\n                                        name='voucherCode'\r\n                                        icon='money'\r\n                                        iconPosition='left'\r\n                                        placeholder='Voucher Code...'\r\n                                        value={this.state.voucherCode}\r\n                                        onChange={this.handleChange}\r\n                                        loading={this.props.loading}\r\n                                    />\r\n                                    <Button\r\n                                        onClick={this.validateVoucherCode}\r\n                                        disabled={this.state.voucherCode.length < 6}\r\n                                        positive\r\n                                        loading={this.props.loading}\r\n                                    >\r\n                                        Apply\r\n                                    </Button>\r\n                                    { error && <Message error header={error} /> }\r\n                                    { voucher.code && <Message success header='Code applied successfully!' /> }\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={10}>\r\n                        <Segment>\r\n                            <Grid centered>\r\n                                <Grid.Row>\r\n                                {\r\n                                    discountedPrice < totalCost ? (\r\n                                        <React.Fragment>\r\n                                            <Label size={'large'}>\r\n                                                <strike>Total Cost: {totalCost} LE</strike>\r\n                                            </Label>\r\n                                            <br />\r\n                                            <Label size={'large'}>\r\n                                                Discounted Cost: { discountedPrice > 0 ? discountedPrice : 0 } LE\r\n                                            </Label>\r\n                                        </React.Fragment>\r\n                                    ) :\r\n                                    <Label size={'large'}>\r\n                                        Total Cost: {totalCost} LE\r\n                                    </Label>\r\n                                }\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Button\r\n                                        onClick={this.placeOrder}\r\n                                        disabled={!cartItems || cartItems.length === 0}\r\n                                        positive>\r\n                                        Place Order\r\n                                    </Button>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { alert } = state;\r\n    const { user } = state.authentication;\r\n    const { shoppingCartData } = state.shoppingCart;\r\n    const { voucher, error, loading } = state.voucher;\r\n\r\n    return {\r\n        voucher,\r\n        error,\r\n        user,\r\n        shoppingCartData,\r\n        alert,\r\n        loading,\r\n    };\r\n}\r\n\r\nconst actionCreators = {\r\n    placeOrder: orderActions.placeOrder,\r\n    getUserShoppingCartData: shoppingCartActions.viewCart,\r\n    validateVoucherCode: voucherActions.validateVoucherCode,\r\n};\r\n\r\nconst connectedConfirmOrderPage = connect(\r\n    mapState,\r\n    actionCreators,\r\n)(ConfirmOrderPage);\r\n\r\nexport { connectedConfirmOrderPage as ConfirmOrderPage };\r\n"]},"metadata":{},"sourceType":"module"}