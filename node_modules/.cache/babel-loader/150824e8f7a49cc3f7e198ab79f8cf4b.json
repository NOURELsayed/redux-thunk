{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/EditOrderItemsPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Card, Label, Segment, Button, Grid } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\nimport { orderActions } from \"../../actions\";\nimport OrderItems from \"./OrderItems\";\n\nclass EditOrderItemsPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleItemQuantityChanged = (e, {\n      value,\n      post_id\n    }) => {\n      this.props.handleEditOrderItemQuantityChanged(this.props.editedOrderItems, post_id, value);\n    };\n\n    this.handleSubmitChanges = async () => {\n      await this.props.sendOrderItemsModification(this.props.orderDetailsData._id, this.props.editedOrderItems);\n      window.location.reload(false);\n    };\n\n    this.handleCancelChanges = async () => {\n      await this.props.handleCancelEditOrderItems();\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.viewOrder(this.props.match.params.id);\n    if (isEmpty(this.props.orderDetailsData)) return;\n    await this.props.handleMappingOrderItemsToQuantities(this.props.orderDetailsData.items);\n  }\n\n  getQuantityDropdownItems(maximum) {\n    let items = [];\n\n    for (let i = 1; i <= maximum; i++) {\n      items.push({\n        key: i,\n        text: '' + i,\n        value: i\n      });\n    }\n\n    return items;\n  }\n\n  render() {\n    const {\n      orderDetailsData: order\n    } = this.props;\n    const {\n      editedOrderItems: items,\n      editItemsActive\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: \"2em 9em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      style: {\n        padding: \"1em 1em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, order && /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        padding: \"1em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: \"teal\",\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }\n    }, \"Order Info\"))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    }, \"Order \"), \" #\", order._id)), /*#__PURE__*/React.createElement(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }\n    }, \"Order Summary\"), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }, order.soldPrice === order.totalPrice ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 49\n      }\n    }, \"Total cost : \"), \" \", order.soldPrice, \" LE\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 43\n      }\n    }, \"Total cost : \"), \" \", order.totalPrice, \" LE\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }\n    }, \"Discounted Cost : \"), \" \", order.soldPrice, \" LE\")))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }\n    }, \"Seller Details\"), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Username: \"), \" \", order.sellerData && order.sellerData.seller.username)))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }\n    }, \"Buyer Details\"), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"Username: \"), \" \", order.buyerData && order.buyerData.buyer && order.buyerData.buyer.username))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: \"teal\",\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, \"Items Description\"))), items && items.map(e => /*#__PURE__*/React.createElement(OrderItems, {\n      onItemQuantityChanged: this.handleItemQuantityChanged,\n      item: e.item,\n      quantity: e.quantity,\n      originalQuantity: e.originalQuantity,\n      key: e.item._id,\n      renderOptions: this.getQuantityDropdownItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !editItemsActive,\n      primary: true,\n      onClick: this.handleSubmitChanges,\n      value: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Submit Changes\"), /*#__PURE__*/React.createElement(Button, {\n      disabled: !editItemsActive,\n      secondary: true,\n      onClick: this.handleCancelChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"Cancel Changes\"))))))));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    orderDetailsData,\n    editedOrderItems,\n    editItemsActive\n  } = state.order;\n  return {\n    orderDetailsData,\n    editedOrderItems,\n    editItemsActive\n  };\n}\n\nconst actionCreators = {\n  viewOrder: orderActions.viewOrder,\n  handleMappingOrderItemsToQuantities: orderActions.handleMappingOrderItemsToQuantities,\n  handleEditOrderItemQuantityChanged: orderActions.handleEditOrderItemQuantityChanged,\n  handleCancelEditOrderItems: orderActions.handleCancelEditOrderItems,\n  sendOrderItemsModification: orderActions.sendOrderItemsModification\n};\nconst connectedEditOrderItemsPage = connect(mapState, actionCreators)(EditOrderItemsPage);\nexport { connectedEditOrderItemsPage as EditOrderItemsPage };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/containers/OrdersPage/EditOrderItemsPage.jsx"],"names":["React","Component","connect","Card","Label","Segment","Button","Grid","isEmpty","orderActions","OrderItems","EditOrderItemsPage","handleItemQuantityChanged","e","value","post_id","props","handleEditOrderItemQuantityChanged","editedOrderItems","handleSubmitChanges","sendOrderItemsModification","orderDetailsData","_id","window","location","reload","handleCancelChanges","handleCancelEditOrderItems","componentDidMount","viewOrder","match","params","id","handleMappingOrderItemsToQuantities","items","getQuantityDropdownItems","maximum","i","push","key","text","render","order","editItemsActive","padding","soldPrice","totalPrice","sellerData","seller","username","buyerData","buyer","map","item","quantity","originalQuantity","mapState","state","actionCreators","connectedEditOrderItemsPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Label, Segment, Button, Grid } from \"semantic-ui-react\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { orderActions } from \"../../actions\";\r\nimport OrderItems from \"./OrderItems\"\r\n\r\nclass EditOrderItemsPage extends Component {\r\n\r\n    async componentDidMount() {        \r\n        await this.props.viewOrder(this.props.match.params.id);\r\n        if (isEmpty(this.props.orderDetailsData)) return;\r\n\r\n        await this.props.handleMappingOrderItemsToQuantities(this.props.orderDetailsData.items);\r\n    }\r\n\r\n    getQuantityDropdownItems(maximum) {\r\n        let items = [];\r\n        for (let i = 1; i <= maximum; i++) {\r\n            items.push({ key: i, text: '' + i, value: i });\r\n        }\r\n        return items;\r\n    }\r\n\r\n    handleItemQuantityChanged = (e, {value, post_id}) => {\r\n      this.props.handleEditOrderItemQuantityChanged(this.props.editedOrderItems, post_id, value);\r\n    }\r\n  \r\n    handleSubmitChanges = async () => {\r\n      await this.props.sendOrderItemsModification(this.props.orderDetailsData._id, this.props.editedOrderItems);\r\n      window.location.reload(false);\r\n    }\r\n  \r\n    handleCancelChanges = async () => {\r\n      await this.props.handleCancelEditOrderItems();\r\n    }\r\n\r\n    render() { \r\n        const { orderDetailsData: order } = this.props;\r\n        const { editedOrderItems: items, editItemsActive } = this.props;\r\n\r\n        return (\r\n          <Grid style={{ padding: \"2em 9em\" }}>\r\n            <Grid.Column width={10}>\r\n              <Segment style={{ padding: \"1em 1em\" }}>\r\n                { order &&\r\n                <Grid style={{ padding: \"1em\" }}>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={14}>\r\n                      <Label color=\"teal\" size=\"big\">\r\n                        Order Info\r\n                      </Label>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={7}>\r\n                      <strong>Order </strong> #{order._id}\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row stretched>\r\n                    <Grid.Column width={7}>\r\n                      <Card>\r\n                        <Card.Content>\r\n                          <Card.Header>Order Summary</Card.Header>\r\n                          <Card.Description>\r\n                            {\r\n                              order.soldPrice === order.totalPrice ?\r\n                                <React.Fragment><strong>Total cost : </strong> {order.soldPrice} LE</React.Fragment>\r\n                              :\r\n                                <React.Fragment>\r\n                                  <strike><strong>Total cost : </strong> {order.totalPrice} LE</strike>\r\n                                  <br />\r\n                                  <strong>Discounted Cost : </strong> {order.soldPrice} LE\r\n                                </React.Fragment>\r\n                            }\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={7}>\r\n                      <Card>\r\n                        <Card.Content>\r\n                          <Card.Header>Seller Details</Card.Header>\r\n                          <Card.Description>\r\n                            <strong>Username: </strong> {order.sellerData && order.sellerData.seller.username}\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={7}>\r\n                      <Card>\r\n                        <Card.Content>\r\n                          <Card.Header>Buyer Details</Card.Header>\r\n                          <Card.Description>\r\n                            <strong>Username: </strong> {order.buyerData && order.buyerData.buyer && order.buyerData.buyer.username}\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={7}>\r\n                      <Label color=\"teal\" size=\"big\">\r\n                        Items Description\r\n                      </Label>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                  {items && items.map((e) => (\r\n                    <OrderItems \r\n                      onItemQuantityChanged={this.handleItemQuantityChanged}\r\n                      item={e.item} \r\n                      quantity={e.quantity}\r\n                      originalQuantity={e.originalQuantity}\r\n                      key={e.item._id} \r\n                      renderOptions={this.getQuantityDropdownItems}\r\n                    />\r\n                  ))}\r\n                  <React.Fragment>\r\n                    <Grid.Row>\r\n                      <Grid.Column width={7}>\r\n                        <Button\r\n                          disabled={!editItemsActive}\r\n                          primary\r\n                          onClick={this.handleSubmitChanges}\r\n                          value={items}\r\n                        >\r\n                          Submit Changes\r\n                        </Button>\r\n                        <Button\r\n                          disabled={!editItemsActive}\r\n                          secondary\r\n                          onClick={this.handleCancelChanges}\r\n                        >\r\n                          Cancel Changes\r\n                        </Button>\r\n                      </Grid.Column>\r\n                    </Grid.Row>\r\n                  </React.Fragment>\r\n                </Grid>}\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        );\r\n    }\r\n}\r\n \r\nfunction mapState(state) {\r\n    const { orderDetailsData, editedOrderItems, editItemsActive } = state.order;\r\n    return { \r\n        orderDetailsData,\r\n        editedOrderItems,\r\n        editItemsActive,\r\n    };\r\n  }\r\n  \r\n  const actionCreators = {\r\n    viewOrder: orderActions.viewOrder,\r\n    handleMappingOrderItemsToQuantities: orderActions.handleMappingOrderItemsToQuantities,\r\n    handleEditOrderItemQuantityChanged: orderActions.handleEditOrderItemQuantityChanged,\r\n    handleCancelEditOrderItems: orderActions.handleCancelEditOrderItems,\r\n    sendOrderItemsModification: orderActions.sendOrderItemsModification,\r\n  };\r\n\r\n  const connectedEditOrderItemsPage = connect(mapState, actionCreators)(EditOrderItemsPage);\r\n  export { connectedEditOrderItemsPage as EditOrderItemsPage };"]},"metadata":{},"sourceType":"module"}