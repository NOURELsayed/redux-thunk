{"ast":null,"code":"var _jsxFileName = \"/media/norhan/New Volume/work/React-projects/test-redux/src/components/_shared/NavBar/NavBar.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Image, Button, Container } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { userActions } from \"../../../actions\";\nimport { imageUrlWithoutContanier } from \"../../../config\";\nimport \"./styles/Header.css\";\nimport DesktopBreakpoint from \"../../Responsive_utillities/desktop_breakPoint\";\nimport PhoneBreakpoint from \"../../Responsive_utillities/phone_breakPoint\";\n\nclass NavBar extends Component {\n  changeLanguage(language) {\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\n  }\n\n  render(props) {\n    const language = localStorage.getItem(\"i18nextLng\");\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DesktopBreakpoint, {\n      name: \"desktop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      className: `navbarContainer ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: language === \"ar\" ? `${imageUrlWithoutContanier}/landing-page/ar-header-logo@3x-min.png` : `${imageUrlWithoutContanier}/landing-page/Header-Logo-min.png`,\n      className: `Navbarlogo ${language}`,\n      alt: \"Navbarlogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: `navbarMobileButton ${language}`,\n      onClick: () => this.changeLanguage(this.props.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, t(\"otherlang\")), this.props.children)), /*#__PURE__*/React.createElement(PhoneBreakpoint, {\n      name: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      className: `navbarContainer ${language}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: language === \"ar\" ? `${imageUrlWithoutContanier}/landing-page/ar-header-logo@3x-min.png` : `${imageUrlWithoutContanier}/landing-page/Logo@3x-min.png`,\n      className: `Navbarlogo ${language}`,\n      alt: \"Navbarlogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: `navbarMobileButton ${language}`,\n      onClick: () => this.changeLanguage(this.props.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, t(\"otherlang\")), this.props.children)));\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    language\n  } = state.users;\n  return {\n    language\n  };\n}\n\nconst actionCreators = {\n  changeLanguage: userActions.setLanguage\n};\nconst connectedNavBar = connect(mapState, actionCreators)(withTranslation()(NavBar));\nexport { connectedNavBar as NavBar };","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/components/_shared/NavBar/NavBar.jsx"],"names":["React","Component","Segment","Image","Button","Container","connect","withTranslation","userActions","imageUrlWithoutContanier","DesktopBreakpoint","PhoneBreakpoint","NavBar","changeLanguage","language","props","render","localStorage","getItem","t","children","mapState","state","users","actionCreators","setLanguage","connectedNavBar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Segment, Image, Button, Container } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { userActions } from \"../../../actions\";\r\nimport { imageUrlWithoutContanier } from \"../../../config\";\r\nimport \"./styles/Header.css\";\r\nimport DesktopBreakpoint from \"../../Responsive_utillities/desktop_breakPoint\";\r\nimport PhoneBreakpoint from \"../../Responsive_utillities/phone_breakPoint\";\r\n\r\nclass NavBar extends Component {\r\n  changeLanguage(language) {\r\n    this.props.changeLanguage(language === \"en\" ? \"ar\" : \"en\");\r\n  }\r\n\r\n  render(props) {\r\n    const language = localStorage.getItem(\"i18nextLng\");\r\n    const { t } = this.props;\r\n    return (\r\n      <Container>\r\n        <DesktopBreakpoint name=\"desktop\">\r\n          <Segment className={`navbarContainer ${language}`}>\r\n            <Image\r\n              src={\r\n                language === \"ar\"\r\n                  ? `${imageUrlWithoutContanier}/landing-page/ar-header-logo@3x-min.png`\r\n                  : `${imageUrlWithoutContanier}/landing-page/Header-Logo-min.png`\r\n              }\r\n              className={`Navbarlogo ${language}`}\r\n              alt=\"Navbarlogo\"\r\n            />\r\n            <Button\r\n              className={`navbarMobileButton ${language}`}\r\n              onClick={() => this.changeLanguage(this.props.language)}\r\n            >\r\n              {t(\"otherlang\")}\r\n            </Button>\r\n            {this.props.children}\r\n          </Segment>\r\n        </DesktopBreakpoint>\r\n\r\n        <PhoneBreakpoint name=\"phone\">\r\n          <Segment className={`navbarContainer ${language}`}>\r\n            <Image\r\n              src={\r\n                language === \"ar\"\r\n                  ? `${imageUrlWithoutContanier}/landing-page/ar-header-logo@3x-min.png`\r\n                  : `${imageUrlWithoutContanier}/landing-page/Logo@3x-min.png`\r\n              }\r\n              className={`Navbarlogo ${language}`}\r\n              alt=\"Navbarlogo\"\r\n            />\r\n            <Button\r\n              className={`navbarMobileButton ${language}`}\r\n              onClick={() => this.changeLanguage(this.props.language)}\r\n            >\r\n              {t(\"otherlang\")}\r\n            </Button>\r\n            {this.props.children}\r\n          </Segment>\r\n        </PhoneBreakpoint>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapState(state) {\r\n  const { language } = state.users;\r\n  return { language };\r\n}\r\n\r\nconst actionCreators = {\r\n  changeLanguage: userActions.setLanguage,\r\n};\r\nconst connectedNavBar = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withTranslation()(NavBar));\r\nexport { connectedNavBar as NavBar };\r\n"]},"metadata":{},"sourceType":"module"}