{"ast":null,"code":"import { passwordConstants } from \"../constants\";\nimport { passwordSerivce } from \"./../services\";\nimport { alertActions } from \"./\";\nexport const passwordActions = {\n  forgetPassword,\n  resetPassword\n};\n\nfunction forgetPassword(email) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await passwordSerivce.forget(email);\n      dispatch(alertActions.success({\n        header: \"Successful Request\",\n        content: 'Check your mail'\n      }));\n    } catch (ex) {\n      dispatch(alertActions.error({\n        header: \"Something went wrong , please try again\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: passwordConstants.FORGET_PASSWORD_REQUEST\n    };\n  }\n  /*\r\n  function success(data) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_SUCCESS,\r\n      data\r\n    };\r\n  }\r\n  function failure(error) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_FAILURE,\r\n      error\r\n    };\r\n  }*/\n\n}\n\nfunction resetPassword(body) {\n  return async dispatch => {\n    await dispatch(request());\n\n    try {\n      const {\n        data\n      } = await passwordSerivce.reset(body);\n      dispatch(alertActions.success({\n        header: \"Successful Request\",\n        content: data\n      }));\n    } catch (ex) {\n      dispatch(alertActions.error({\n        header: \"Something went wrong , please try again\",\n        content: ex.message\n      }));\n    }\n  };\n\n  function request() {\n    return {\n      type: passwordConstants.FORGET_PASSWORD_REQUEST\n    };\n  }\n  /*\r\n  function success(data) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_SUCCESS,\r\n      data\r\n    };\r\n  }\r\n  function failure(error) {\r\n    return {\r\n      type: moneyWithdrawalConstatnt.SAVE_ITEM_FAILURE,\r\n      error\r\n    };\r\n  }*/\n\n}","map":{"version":3,"sources":["/media/norhan/New Volume/work/React-projects/test-redux/src/actions/password.actions.js"],"names":["passwordConstants","passwordSerivce","alertActions","passwordActions","forgetPassword","resetPassword","email","dispatch","request","data","forget","success","header","content","ex","error","message","type","FORGET_PASSWORD_REQUEST","body","reset"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,OAAO,MAAMC,eAAe,GAAG;AAC3BC,EAAAA,cAD2B;AACZC,EAAAA;AADY,CAAxB;;AAIP,SAASD,cAAT,CAAwBE,KAAxB,EAA+B;AAC3B,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMA,QAAQ,CAACC,OAAO,EAAR,CAAd;;AACA,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,eAAe,CAACS,MAAhB,CAAuBJ,KAAvB,CAAvB;AACAC,MAAAA,QAAQ,CACNL,YAAY,CAACS,OAAb,CAAqB;AACnBC,QAAAA,MAAM,EAAE,oBADW;AAEnBC,QAAAA,OAAO,EAAE;AAFU,OAArB,CADM,CAAR;AAMD,KARD,CAQE,OAAOC,EAAP,EAAW;AACXP,MAAAA,QAAQ,CACNL,YAAY,CAACa,KAAb,CAAmB;AACjBH,QAAAA,MAAM,EAAE,yCADS;AAEjBC,QAAAA,OAAO,EAAEC,EAAE,CAACE;AAFK,OAAnB,CADM,CAAR;AAMD;AACF,GAlBD;;AAmBA,WAASR,OAAT,GAAmB;AACjB,WAAO;AACLS,MAAAA,IAAI,EAAEjB,iBAAiB,CAACkB;AADnB,KAAP;AAGD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG;;AAEH,SAASb,aAAT,CAAuBc,IAAvB,EAA6B;AACzB,SAAO,MAAMZ,QAAN,IAAkB;AACvB,UAAMA,QAAQ,CAACC,OAAO,EAAR,CAAd;;AACA,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,eAAe,CAACmB,KAAhB,CAAsBD,IAAtB,CAAvB;AACAZ,MAAAA,QAAQ,CACNL,YAAY,CAACS,OAAb,CAAqB;AACnBC,QAAAA,MAAM,EAAE,oBADW;AAEnBC,QAAAA,OAAO,EAAEJ;AAFU,OAArB,CADM,CAAR;AAMD,KARD,CAQE,OAAOK,EAAP,EAAW;AACXP,MAAAA,QAAQ,CACNL,YAAY,CAACa,KAAb,CAAmB;AACjBH,QAAAA,MAAM,EAAE,yCADS;AAEjBC,QAAAA,OAAO,EAAEC,EAAE,CAACE;AAFK,OAAnB,CADM,CAAR;AAMD;AACF,GAlBD;;AAmBA,WAASR,OAAT,GAAmB;AACjB,WAAO;AACLS,MAAAA,IAAI,EAAEjB,iBAAiB,CAACkB;AADnB,KAAP;AAGD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG","sourcesContent":["import { passwordConstants } from \"../constants\";\r\nimport { passwordSerivce } from \"./../services\";\r\nimport { alertActions } from \"./\";\r\nexport const passwordActions = {\r\n    forgetPassword,resetPassword\r\n}\r\n\r\nfunction forgetPassword(email) {\r\n    return async dispatch => {\r\n      await dispatch(request());\r\n      try {\r\n        const { data } = await passwordSerivce.forget(email);\r\n        dispatch(\r\n          alertActions.success({\r\n            header: \"Successful Request\",\r\n            content: 'Check your mail'\r\n          })\r\n        );\r\n      } catch (ex) {\r\n        dispatch(\r\n          alertActions.error({\r\n            header: \"Something went wrong , please try again\",\r\n            content: ex.message\r\n          })\r\n        );\r\n      }\r\n    };\r\n    function request() {\r\n      return {\r\n        type: passwordConstants.FORGET_PASSWORD_REQUEST\r\n      };\r\n    }\r\n    /*\r\n    function success(data) {\r\n      return {\r\n        type: moneyWithdrawalConstatnt.SAVE_ITEM_SUCCESS,\r\n        data\r\n      };\r\n    }\r\n    function failure(error) {\r\n      return {\r\n        type: moneyWithdrawalConstatnt.SAVE_ITEM_FAILURE,\r\n        error\r\n      };\r\n    }*/\r\n  }\r\n\r\nfunction resetPassword(body) {\r\n    return async dispatch => {\r\n      await dispatch(request());\r\n      try {\r\n        const { data } = await passwordSerivce.reset(body);\r\n        dispatch(\r\n          alertActions.success({\r\n            header: \"Successful Request\",\r\n            content: data\r\n          })\r\n        );\r\n      } catch (ex) {\r\n        dispatch(\r\n          alertActions.error({\r\n            header: \"Something went wrong , please try again\",\r\n            content: ex.message\r\n          })\r\n        );\r\n      }\r\n    };\r\n    function request() {\r\n      return {\r\n        type: passwordConstants.FORGET_PASSWORD_REQUEST\r\n      };\r\n    }\r\n    /*\r\n    function success(data) {\r\n      return {\r\n        type: moneyWithdrawalConstatnt.SAVE_ITEM_SUCCESS,\r\n        data\r\n      };\r\n    }\r\n    function failure(error) {\r\n      return {\r\n        type: moneyWithdrawalConstatnt.SAVE_ITEM_FAILURE,\r\n        error\r\n      };\r\n    }*/\r\n  }"]},"metadata":{},"sourceType":"module"}